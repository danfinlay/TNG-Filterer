"use strict";var THREE=THREE||{REVISION:"61"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(e,t){if(Object.keys)for(var i=Object.keys(t),r=0,n=i.length;n>r;r++){var o=i[r];Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}else for(o in i={}.hasOwnProperty,t)i.call(t,o)&&(e[o]=t[o]);return e},function(){for(var e=0,t=["ms","moz","webkit","o"],i=0;i<t.length&&!self.requestAnimationFrame;++i)self.requestAnimationFrame=self[t[i]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[i]+"CancelAnimationFrame"]||self[t[i]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var i=Date.now(),r=Math.max(0,16-(i-e)),n=self.setTimeout(function(){t(i+r)},r);return e=i+r,n}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSL:function(e,t,i){if(0===t)this.r=this.g=this.b=i;else{var r=function(e,t,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?e+6*(t-e)*i:.5>i?t:2/3>i?e+6*(t-e)*(2/3-i):e},t=.5>=i?i*(1+t):i+t-i*t,i=2*i-t;this.r=r(i,t,e+1/3),this.g=r(i,t,e),this.b=r(i,t,e-1/3)}return this},setStyle:function(e){return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)?(e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)?(e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(e)?(e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)?(e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this):/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var e={h:0,s:0,l:0};return function(){var t,i=this.r,r=this.g,n=this.b,o=Math.max(i,r,n),a=Math.min(i,r,n),s=(a+o)/2;if(a===o)a=t=0;else{var h=o-a,a=.5>=s?h/(o+a):h/(2-o-a);switch(o){case i:t=(r-n)/h+(n>r?6:0);break;case r:t=(n-i)/h+2;break;case n:t=(i-r)/h+4}t/=6}return e.h=t,e.s=a,e.l=s,e}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,i){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e,this._updateEuler()},get y(){return this._y},set y(e){this._y=e,this._updateEuler()},get z(){return this._z},set z(e){this._z=e,this._updateEuler()},get w(){return this._w},set w(e){this._w=e,this._updateEuler()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._updateEuler(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._w=e._w,this._updateEuler(),this},setFromEuler:function(e,t){if(!1==e instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var i=Math.cos(e._x/2),r=Math.cos(e._y/2),n=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"YXZ"===e.order?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"ZXY"===e.order?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"ZYX"===e.order?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"YZX"===e.order?(this._x=o*r*n+i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n-o*a*s):"XZY"===e.order&&(this._x=o*r*n-i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n+o*a*s),!1!==t&&this._updateEuler(),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._updateEuler(),this},setFromRotationMatrix:function(e){var t=e.elements,i=t[0],e=t[4],r=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t=t[10],l=i+o+t;return l>0?(i=.5/Math.sqrt(l+1),this._w=.25/i,this._x=(h-a)*i,this._y=(r-s)*i,this._z=(n-e)*i):i>o&&i>t?(i=2*Math.sqrt(1+i-o-t),this._w=(h-a)/i,this._x=.25*i,this._y=(e+n)/i,this._z=(r+s)/i):o>t?(i=2*Math.sqrt(1+o-i-t),this._w=(r-s)/i,this._x=(e+n)/i,this._y=.25*i,this._z=(a+h)/i):(i=2*Math.sqrt(1+t-i-o),this._w=(n-e)/i,this._x=(r+s)/i,this._y=(a+h)/i,this._z=.25*i),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e._x,r=e._y,n=e._z,o=e._w,a=t._x,s=t._y,h=t._z,l=t._w;return this._x=i*l+o*a+r*h-n*s,this._y=r*l+o*s+n*a-i*h,this._z=n*l+o*h+i*s-r*a,this._w=o*l-i*a-r*s-n*h,this._updateEuler(),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var i=this._x,r=this._y,n=this._z,o=this._w,a=o*e._w+i*e._x+r*e._y+n*e._z;if(0>a?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return.001>Math.abs(h)?(this._w=.5*(o+this._w),this._x=.5*(i+this._x),this._y=.5*(r+this._y),this._z=.5*(n+this._z),this):(a=Math.sin((1-t)*s)/h,s=Math.sin(t*s)/h,this._w=o*a+this._w*s,this._x=i*a+this._x*s,this._y=r*a+this._y*s,this._z=n*a+this._z*s,this._updateEuler(),this)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e):this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*i+e[6]*r,this.y=e[1]*t+e[4]*i+e[7]*r,this.z=e[2]*t+e[5]*i+e[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12],this.y=e[1]*t+e[5]*i+e[9]*r+e[13],this.z=e[2]*t+e[6]*i+e[10]*r+e[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements,n=1/(e[3]*t+e[7]*i+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*i+e[8]*r+e[12])*n,this.y=(e[1]*t+e[5]*i+e[9]*r+e[13])*n,this.z=(e[2]*t+e[6]*i+e[10]*r+e[14])*n,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z,e=e.w,s=e*t+o*r-a*i,h=e*i+a*t-n*r,l=e*r+n*i-o*t,t=-n*t-o*i-a*r;return this.x=s*e+t*-n+h*-a-l*-o,this.y=h*e+t*-o+l*-n-s*-a,this.z=l*e+t*-a+s*-o-h*-n,this},transformDirection:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r,this.y=e[1]*t+e[5]*i+e[9]*r,this.z=e[2]*t+e[6]*i+e[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var i=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){var i=e.x,r=e.y,n=e.z,o=t.x,a=t.y,s=t.z;return this.x=r*s-n*a,this.y=n*o-i*s,this.z=i*a-r*o,this},angleTo:function(e){return e=this.dot(e)/(this.length()*e.length()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y,e=this.z-e.z;return t*t+i*i+e*e},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=i,this.z=e,this},getColumnFromMatrix:function(e,t){var i=4*e,r=t.elements;return this.x=r[i],this.y=r[i+1],this.z=r[i+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var e=new THREE.Quaternion;return function(t){return!1==t instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e=new THREE.Quaternion;return function(t,i){return this.applyQuaternion(e.setFromAxisAngle(t,i)),this}}(),projectOnVector:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t).multiplyScalar(2),this.subVectors(e,this)}}()}),THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=this.w,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12]*n,this.y=e[1]*t+e[5]*i+e[9]*r+e[13]*n,this.z=e[2]*t+e[6]*i+e[10]*r+e[14]*n,this.w=e[3]*t+e[7]*i+e[11]*r+e[15]*n,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,i,r,e=e.elements,n=e[0];r=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];i=e[2],t=e[6];var l=e[10];return.01>Math.abs(r-a)&&.01>Math.abs(o-i)&&.01>Math.abs(h-t)?.1>Math.abs(r+a)&&.1>Math.abs(o+i)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+l-3)?(this.set(1,0,0,0),this):(e=Math.PI,n=(n+1)/2,s=(s+1)/2,l=(l+1)/2,r=(r+a)/4,o=(o+i)/4,h=(h+t)/4,n>s&&n>l?.01>n?(t=0,r=i=.707106781):(t=Math.sqrt(n),i=r/t,r=o/t):s>l?.01>s?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(s),t=r/i,r=h/i):.01>l?(i=t=.707106781,r=0):(r=Math.sqrt(l),t=o/r,i=h/r),this.set(t,i,r,e),this):(e=Math.sqrt((t-h)*(t-h)+(o-i)*(o-i)+(a-r)*(a-r)),.001>Math.abs(e)&&(e=1),this.x=(t-h)/e,this.y=(o-i)/e,this.z=(a-r)/e,this.w=Math.acos((n+s+l-1)/2),this)},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._order=r||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(e){this._x=e,this._updateQuaternion()},get y(){return this._y},set y(e){this._y=e,this._updateQuaternion()},get z(){return this._z},set z(e){this._z=e,this._updateQuaternion()},get order(){return this._order},set order(e){this._order=e,this._updateQuaternion()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this._updateQuaternion(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._updateQuaternion(),this},setFromRotationMatrix:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,n=r[0],o=r[4],a=r[8],s=r[1],h=r[5],l=r[9],c=r[2],u=r[6],r=r[10],t=t||this._order;return"XYZ"===t?(this._y=Math.asin(i(a)),.99999>Math.abs(a)?(this._x=Math.atan2(-l,r),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(l)),.99999>Math.abs(l)?(this._y=Math.atan2(a,r),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(u)),.99999>Math.abs(u)?(this._y=Math.atan2(-c,r),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===t?(this._y=Math.asin(-i(c)),.99999>Math.abs(c)?(this._x=Math.atan2(u,r),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===t?(this._z=Math.asin(i(s)),.99999>Math.abs(s)?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,r))):"XZY"===t?(this._z=Math.asin(-i(o)),.99999>Math.abs(o)?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,r),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this._updateQuaternion(),this},setFromQuaternion:function(e,t,i){function r(e){return Math.min(Math.max(e,-1),1)}var n=e.x*e.x,o=e.y*e.y,a=e.z*e.z,s=e.w*e.w,t=t||this._order;return"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-n-o+a),this._y=Math.asin(r(2*(e.x*e.z+e.y*e.w))),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+n-o-a)):"YXZ"===t?(this._x=Math.asin(r(2*(e.x*e.w-e.y*e.z))),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-n-o+a),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-n+o-a)):"ZXY"===t?(this._x=Math.asin(r(2*(e.x*e.w+e.y*e.z))),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-n-o+a),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-n+o-a)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-n-o+a),this._y=Math.asin(r(2*(e.y*e.w-e.x*e.z))),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+n-o-a)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-n+o-a),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+n-o-a),this._z=Math.asin(r(2*(e.x*e.y+e.z*e.w)))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-n+o-a),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+n-o-a),this._z=Math.asin(r(2*(e.z*e.w-e.x*e.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,!1!==i&&this._updateQuaternion(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var i=t||new THREE.Vector3;return this.delta(i).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r){e.subVectors(i,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),n=t.dot(e)/n;return r&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(e,t,i){return e=this.closestPointToPointParameter(e,t),i=i||new THREE.Vector3,this.delta(i).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),
this.max=void 0!==t?t:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;r>i;i++)t=e[i],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var t=1,i=e.length;i>t;t++)this.addPoint(e[t])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var i=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var r=t.geometry.vertices,n=0,o=r.length;o>n;n++)e.copy(r[n]),e.applyMatrix4(t.matrixWorld),i.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return t=t||new THREE.Sphere,t.center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(e,t,i,r,n,o,a,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,i||0,r||0,void 0!==n?n:1,o||0,a||0,s||0,void 0!==h?h:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,i,r,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=i,l[1]=r,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;r>i;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyMatrix3(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e=e[8];return t*o*e-t*a*h-i*n*e+i*a*s+r*n*h-r*o*s},getInverse:function(e,t){var i=e.elements,r=this.elements;if(r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4],i=i[0]*r[0]+i[1]*r[3]+i[2]*r[6],0===i){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,i,r,n,o,a,s,h,l,c,u,p,f,E,d){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=i||0,m[12]=r||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=p||0,m[7]=f||0,m[11]=E||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,i,r,n,o,a,s,h,l,c,u,p,f,E,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=r,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=p,m[7]=f,m[11]=E,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var i=this.elements,t=t.elements,r=1/e.set(t[0],t[1],t[2]).length(),n=1/e.set(t[4],t[5],t[6]).length(),o=1/e.set(t[8],t[9],t[10]).length();return i[0]=t[0]*r,i[1]=t[1]*r,i[2]=t[2]*r,i[4]=t[4]*n,i[5]=t[5]*n,i[6]=t[6]*n,i[8]=t[8]*o,i[9]=t[9]*o,i[10]=t[10]*o,this}}(),makeRotationFromEuler:function(e){!1==e instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,i=e.x,r=e.y,n=e.z,o=Math.cos(i),i=Math.sin(i),a=Math.cos(r),r=Math.sin(r),s=Math.cos(n),n=Math.sin(n);if("XYZ"===e.order){var e=o*s,h=o*n,l=i*s,c=i*n;t[0]=a*s,t[4]=-a*n,t[8]=r,t[1]=h+l*r,t[5]=e-c*r,t[9]=-i*a,t[2]=c-e*r,t[6]=l+h*r,t[10]=o*a}else"YXZ"===e.order?(e=a*s,h=a*n,l=r*s,c=r*n,t[0]=e+c*i,t[4]=l*i-h,t[8]=o*r,t[1]=o*n,t[5]=o*s,t[9]=-i,t[2]=h*i-l,t[6]=c+e*i,t[10]=o*a):"ZXY"===e.order?(e=a*s,h=a*n,l=r*s,c=r*n,t[0]=e-c*i,t[4]=-o*n,t[8]=l+h*i,t[1]=h+l*i,t[5]=o*s,t[9]=c-e*i,t[2]=-o*r,t[6]=i,t[10]=o*a):"ZYX"===e.order?(e=o*s,h=o*n,l=i*s,c=i*n,t[0]=a*s,t[4]=l*r-h,t[8]=e*r+c,t[1]=a*n,t[5]=c*r+e,t[9]=h*r-l,t[2]=-r,t[6]=i*a,t[10]=o*a):"YZX"===e.order?(e=o*a,h=o*r,l=i*a,c=i*r,t[0]=a*s,t[4]=c-e*n,t[8]=l*n+h,t[1]=n,t[5]=o*s,t[9]=-i*s,t[2]=-r*s,t[6]=h*n+l,t[10]=e-c*n):"XZY"===e.order&&(e=o*a,h=o*r,l=i*a,c=i*r,t[0]=a*s,t[4]=-n,t[8]=r*s,t[1]=e*n+c,t[5]=o*s,t[9]=h*n-l,t[2]=l*n-h,t[6]=i*s,t[10]=c*n+e);return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z,o=e.w,a=i+i,s=r+r,h=n+n,e=i*a,l=i*s,i=i*h,c=r*s,r=r*h,n=n*h,a=o*a,s=o*s,o=o*h;return t[0]=1-(c+n),t[4]=l-o,t[8]=i+s,t[1]=l+o,t[5]=1-(e+n),t[9]=r-a,t[2]=i-s,t[6]=r+a,t[10]=1-(e+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o){var a=this.elements;return i.subVectors(r,n).normalize(),0===i.length()&&(i.z=1),e.crossVectors(o,i).normalize(),0===e.length()&&(i.x+=1e-4,e.crossVectors(o,i).normalize()),t.crossVectors(i,e),a[0]=e.x,a[4]=t.x,a[8]=i.x,a[1]=e.y,a[5]=t.y,a[9]=i.y,a[2]=e.z,a[6]=t.z,a[10]=i.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[4],s=i[8],h=i[12],l=i[1],c=i[5],u=i[9],p=i[13],f=i[2],E=i[6],d=i[10],m=i[14],g=i[3],T=i[7],v=i[11],i=i[15],y=r[0],R=r[4],x=r[8],H=r[12],_=r[1],b=r[5],w=r[9],M=r[13],S=r[2],A=r[6],C=r[10],P=r[14],L=r[3],D=r[7],F=r[11],r=r[15];return n[0]=o*y+a*_+s*S+h*L,n[4]=o*R+a*b+s*A+h*D,n[8]=o*x+a*w+s*C+h*F,n[12]=o*H+a*M+s*P+h*r,n[1]=l*y+c*_+u*S+p*L,n[5]=l*R+c*b+u*A+p*D,n[9]=l*x+c*w+u*C+p*F,n[13]=l*H+c*M+u*P+p*r,n[2]=f*y+E*_+d*S+m*L,n[6]=f*R+E*b+d*A+m*D,n[10]=f*x+E*w+d*C+m*F,n[14]=f*H+E*M+d*P+m*r,n[3]=g*y+T*_+v*S+i*L,n[7]=g*R+T*b+v*A+i*D,n[11]=g*x+T*w+v*C+i*F,n[15]=g*H+T*M+v*P+i*r,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;r>i;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyProjection(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],p=e[14];return e[3]*(+n*s*c-r*h*c-n*a*u+i*h*u+r*a*p-i*s*p)+e[7]*(+t*s*p-t*h*u+n*o*u-r*o*p+r*h*l-n*s*l)+e[11]*(+t*h*c-t*a*p-n*o*c+i*o*p+n*a*l-i*h*l)+e[15]*(-r*a*l-t*s*c+t*a*u+r*o*c-i*o*u+i*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var i=this.elements,r=e.elements,n=r[0],o=r[4],a=r[8],s=r[12],h=r[1],l=r[5],c=r[9],u=r[13],p=r[2],f=r[6],E=r[10],d=r[14],m=r[3],g=r[7],T=r[11],r=r[15];if(i[0]=c*d*g-u*E*g+u*f*T-l*d*T-c*f*r+l*E*r,i[4]=s*E*g-a*d*g-s*f*T+o*d*T+a*f*r-o*E*r,i[8]=a*u*g-s*c*g+s*l*T-o*u*T-a*l*r+o*c*r,i[12]=s*c*f-a*u*f-s*l*E+o*u*E+a*l*d-o*c*d,i[1]=u*E*m-c*d*m-u*p*T+h*d*T+c*p*r-h*E*r,i[5]=a*d*m-s*E*m+s*p*T-n*d*T-a*p*r+n*E*r,i[9]=s*c*m-a*u*m-s*h*T+n*u*T+a*h*r-n*c*r,i[13]=a*u*p-s*c*p+s*h*E-n*u*E-a*h*d+n*c*d,i[2]=l*d*m-u*f*m+u*p*g-h*d*g-l*p*r+h*f*r,i[6]=s*f*m-o*d*m-s*p*g+n*d*g+o*p*r-n*f*r,i[10]=o*u*m-s*l*m+s*h*g-n*u*g-o*h*r+n*l*r,i[14]=s*l*p-o*u*p-s*h*f+n*u*f+o*h*d-n*l*d,i[3]=c*f*m-l*E*m-c*p*g+h*E*g+l*p*T-h*f*T,i[7]=o*E*m-a*f*m+a*p*g-n*E*g-o*p*T+n*f*T,i[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T,i[15]=o*c*p-a*l*p+a*h*f-n*c*f-o*h*E+n*l*E,i=n*i[0]+h*i[4]+p*i[8]+m*i[12],0==i){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,i=e.x,r=e.y,e=e.z;return t[0]*=i,t[4]*=r,t[8]*=e,t[1]*=i,t[5]*=r,t[9]*=e,t[2]*=i,t[6]*=r,t[10]*=e,t[3]*=i,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=1-i,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+i,h*a-r*s,h*s+r*a,0,h*a+r*s,l*a+i,l*s-r*o,0,h*s-r*a,l*s+r*o,n*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},compose:function(e,t,i){return this.makeRotationFromQuaternion(t),this.scale(i),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(i,r,n){var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length();i.x=o[12],i.y=o[13],i.z=o[14],t.elements.set(this.elements);var i=1/a,o=1/s,l=1/h;return t.elements[0]*=i,t.elements[1]*=i,t.elements[2]*=i,t.elements[4]*=o,t.elements[5]*=o,t.elements[6]*=o,t.elements[8]*=l,t.elements[9]*=l,t.elements[10]*=l,r.setFromRotationMatrix(t),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(e,t,i,r,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(r-i),a[9]=(r+i)/(r-i),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){var e=i*Math.tan(THREE.Math.degToRad(.5*e)),n=-e;return this.makeFrustum(n*t,e*t,n,e,i,r)},makeOrthographic:function(e,t,i,r,n,o){var a=this.elements,s=t-e,h=i-r,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-((t+e)/s),a[1]=0,a[5]=2/h,a[9]=0,a[13]=-((i+r)/h),a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-((o+n)/l),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var i=t||new THREE.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return 0>r?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var i=e.subVectors(t,this.origin).dot(this.direction);return 0>i?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(i).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,i,r){var n,o,a=e.clone().add(t).multiplyScalar(.5),s=t.clone().sub(e).normalize(),h=.5*e.distanceTo(t),l=this.origin.clone().sub(a),e=-this.direction.dot(s),t=l.dot(this.direction),c=-l.dot(s),u=l.lengthSq(),p=Math.abs(1-e*e);return p>=0?(l=e*c-t,n=e*t-c,o=h*p,l>=0?n>=-o?o>=n?(h=1/p,l*=h,n*=h,e=l*(l+e*n+2*t)+n*(e*l+n+2*c)+u):(n=h,l=Math.max(0,-(e*n+t)),e=-l*l+n*(n+2*c)+u):(n=-h,l=Math.max(0,-(e*n+t)),e=-l*l+n*(n+2*c)+u):-o>=n?(l=Math.max(0,-(-e*h+t)),n=l>0?-h:Math.min(Math.max(-h,-c),h),e=-l*l+n*(n+2*c)+u):o>=n?(l=0,n=Math.min(Math.max(-h,-c),h),e=n*(n+2*c)+u):(l=Math.max(0,-(e*h+t)),n=l>0?h:Math.min(Math.max(-h,-c),h),e=-l*l+n*(n+2*c)+u)):(n=e>0?-h:h,l=Math.max(0,-(e*n+t)),e=-l*l+n*(n+2*c)+u),i&&i.copy(this.direction.clone().multiplyScalar(l).add(this.origin)),r&&r.copy(s.clone().multiplyScalar(n).add(a)),e},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0==t?0==e.distanceToPoint(this.origin)?0:null:(e=-(this.origin.dot(e.normal)+e.constant)/t,e>=0?e:null)},intersectPlane:function(e,t){var i=this.distanceToPlane(e);return null===i?null:this.at(i,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var i,r,n,o,a;r=1/this.direction.x,o=1/this.direction.y,a=1/this.direction.z;var s=this.origin;return r>=0?(i=(e.min.x-s.x)*r,r*=e.max.x-s.x):(i=(e.max.x-s.x)*r,r*=e.min.x-s.x),o>=0?(n=(e.min.y-s.y)*o,o*=e.max.y-s.y):(n=(e.max.y-s.y)*o,o*=e.min.y-s.y),i>o||n>r?null:((n>i||i!==i)&&(i=n),(r>o||r!==r)&&(r=o),a>=0?(n=(e.min.z-s.z)*a,a*=e.max.z-s.z):(n=(e.max.z-s.z)*a,a*=e.min.z-s.z),i>a||n>r?null:((n>i||i!==i)&&(i=n),(r>a||r!==r)&&(r=a),0>r?null:this.at(i>=0?i:r,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3,r=new THREE.Vector3;return function(n,o,a,s,h){if(t.subVectors(o,n),i.subVectors(a,n),r.crossVectors(t,i),o=this.direction.dot(r),o>0){if(s)return null;s=1}else{if(!(0>o))return null;s=-1,o=-o}return e.subVectors(this.origin,n),n=s*this.direction.dot(i.crossVectors(e,i)),0>n?null:(a=s*this.direction.dot(t.cross(e)),0>a||n+a>o?null:(n=-s*e.dot(r),0>n?null:this.at(n/o,h)))}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,i){var r=this.center;void 0!==i?r.copy(i):e.setFromPoints(t).center(r);for(var n=0,o=0,a=t.length;a>o;o++)n=Math.max(n,r.distanceToSquared(t[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,i,r,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,i,r,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,i=0;6>i;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,i=e.elements,e=i[0],r=i[1],n=i[2],o=i[3],a=i[4],s=i[5],h=i[6],l=i[7],c=i[8],u=i[9],p=i[10],f=i[11],E=i[12],d=i[13],m=i[14],i=i[15];return t[0].setComponents(o-e,l-a,f-c,i-E).normalize(),t[1].setComponents(o+e,l+a,f+c,i+E).normalize(),t[2].setComponents(o+r,l+s,f+u,i+d).normalize(),t[3].setComponents(o-r,l-s,f-u,i-d).normalize(),t[4].setComponents(o-n,l-h,f-p,i-m).normalize(),t[5].setComponents(o+n,l+h,f+p,i+m).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var i=t.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),e.copy(i.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,i=e.center,e=-e.radius,r=0;6>r;r++)if(t[r].distanceToPoint(i)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){for(var r=this.planes,n=0;6>n;n++){var o=r[n];e.x=0<o.normal.x?i.min.x:i.max.x,t.x=0<o.normal.x?i.max.x:i.min.x,e.y=0<o.normal.y?i.min.y:i.max.y,t.y=0<o.normal.y?i.max.y:i.min.y,e.z=0<o.normal.z?i.min.z:i.max.z,t.z=0<o.normal.z?i.max.z:i.min.z;var a=o.distanceToPoint(e),o=o.distanceToPoint(t);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,i=0;6>i;i++)if(0>t[i].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,n){return r=e.subVectors(n,r).cross(t.subVectors(i,r)).normalize(),this.setFromNormalAndCoplanarPoint(r,i),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return 0>t&&e>0||0>e&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,i){var r=i||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);return 0!=o?(o=-(t.start.dot(this.normal)+this.constant)/o,0>o||o>1?void 0:r.copy(n).multiplyScalar(o).add(t.start)):0==this.distanceToPoint(t.start)?r.copy(t.start):void 0}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r){var r=r||(new THREE.Matrix3).getNormalMatrix(i),n=e.copy(this.normal).applyMatrix3(r),o=this.coplanarPoint(t);return o.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(n,o),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=Array(36),r=0;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?i[n]="-":14==n?i[n]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,i[n]=t[19==n?3&e|8:e]);return i.join("")}}(),clamp:function(e,t,i){return t>e?t:e>i?i:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},smoothstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*(3-2*e))},smootherstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}()},THREE.Spline=function(e){function t(e,t,i,r,n,o,a){return e=.5*(i-e),r=.5*(r-t),(2*(t-i)+e+r)*a+(-3*(t-i)-2*e-r)*o+e*n+t}this.points=e;var i,r,n,o,a,s,h,l,c,u=[],p={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,r=Math.floor(i),n=i-r,u[0]=0===r?r:r-1,u[1]=r,u[2]=r>this.points.length-2?this.points.length-1:r+1,u[3]=r>this.points.length-3?this.points.length-1:r+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],o=n*n,a=n*o,p.x=t(s.x,h.x,l.x,c.x,n,o,a),p.y=t(s.y,h.y,l.y,c.y,n,o,a),p.z=t(s.z,h.z,l.z,c.z,n,o,a),p},this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;i>e;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,i,r,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),i=this.points.length*e,o.copy(this.points[0]),e=1;i>e;e++)t=e/i,r=this.getPoint(t),a.copy(r),h+=a.distanceTo(o),o.copy(r),t*=this.points.length-1,t=Math.floor(t),t!=n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,i,r,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(i=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*i/l.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),i=1;a-1>i;i++)r=n+i*(1/a)*(o-n),r=this.getPoint(r),s.push(h.copy(r).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,i){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==i?i:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,i,r,n){return n=n||new THREE.Vector3,n.subVectors(r,i),e.subVectors(t,i),n.cross(e),t=n.lengthSq(),t>0?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){
var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o,a,s){e.subVectors(a,n),t.subVectors(o,n),i.subVectors(r,n);var r=e.dot(e),n=e.dot(t),o=e.dot(i),h=t.dot(t),a=t.dot(i),l=r*h-n*n,s=s||new THREE.Vector3;return 0==l?s.set(-2,-1,-1):(l=1/l,h=(h*o-n*a)*l,r=(r*a-n*o)*l,s.set(1-h-r,r,h))}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,i,r,n){return t=THREE.Triangle.barycoordFromPoint(t,i,r,n,e),0<=t.x&&0<=t.y&&1>=t.x+t.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var i=this._listeners,r=i[e].indexOf(t);-1!==r&&i[e].splice(r,1)}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var i=0,r=t.length;r>i;i++)t[i].call(this,e)}}}},function(e){e.Raycaster=function(t,i,r,n){this.ray=new e.Ray(t,i),this.near=r||0,this.far=n||1/0};var t=new e.Sphere,i=new e.Ray;new e.Plane,new e.Vector3;var r=new e.Vector3,n=new e.Matrix4,o=function(e,t){return e.distance-t.distance},a=new e.Vector3,s=new e.Vector3,h=new e.Vector3,l=function(o,c,u){if(o instanceof e.Particle){r.getPositionFromMatrix(o.matrixWorld);var p=c.ray.distanceToPoint(r);if(p>o.scale.x)return u;u.push({distance:p,point:o.position,face:null,object:o})}else if(o instanceof e.LOD)r.getPositionFromMatrix(o.matrixWorld),p=c.ray.origin.distanceTo(r),l(o.getObjectForDistance(p),c,u);else if(o instanceof e.Mesh){var f=o.geometry;if(null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(o.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(n.getInverse(o.matrixWorld),i.copy(c.ray).applyMatrix4(n),null!==f.boundingBox&&!1===i.isIntersectionBox(f.boundingBox))return u;if(f instanceof e.BufferGeometry){var E=o.material;if(void 0===E||!1===f.dynamic)return u;var d,m,g=c.precision;if(void 0!==f.attributes.index)for(var T=f.offsets,v=f.attributes.index.array,y=f.attributes.position.array,R=f.offsets.length,x=f.attributes.index.array.length/3,x=0;R>x;++x)for(var p=T[x].start,H=T[x].index,f=p,_=p+T[x].count;_>f;f+=3)p=H+v[f],d=H+v[f+1],m=H+v[f+2],a.set(y[3*p],y[3*p+1],y[3*p+2]),s.set(y[3*d],y[3*d+1],y[3*d+2]),h.set(y[3*m],y[3*m+1],y[3*m+2]),d=i.intersectTriangle(a,s,h,E.side!==e.DoubleSide),null!==d&&(d.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(d),g>p||p<c.near||p>c.far||u.push({distance:p,point:d,face:null,faceIndex:null,object:o}));else for(y=f.attributes.position.array,x=f.attributes.position.array.length,f=0;x>f;f+=3)p=f,d=f+1,m=f+2,a.set(y[3*p],y[3*p+1],y[3*p+2]),s.set(y[3*d],y[3*d+1],y[3*d+2]),h.set(y[3*m],y[3*m+1],y[3*m+2]),d=i.intersectTriangle(a,s,h,E.side!==e.DoubleSide),null!==d&&(d.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(d),g>p||p<c.near||p>c.far||u.push({distance:p,point:d,face:null,faceIndex:null,object:o}))}else if(f instanceof e.Geometry)for(v=o.material instanceof e.MeshFaceMaterial,y=!0===v?o.material.materials:null,g=c.precision,T=f.vertices,R=0,x=f.faces.length;x>R;R++)H=f.faces[R],E=!0===v?y[H.materialIndex]:o.material,void 0!==E&&(p=T[H.a],d=T[H.b],m=T[H.c],d=i.intersectTriangle(p,d,m,E.side!==e.DoubleSide),null!==d&&(d.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(d),g>p||p<c.near||p>c.far||u.push({distance:p,point:d,face:H,faceIndex:R,object:o})))}else if(o instanceof e.Line){if(g=c.linePrecision,E=g*g,f=o.geometry,null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(o.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(n.getInverse(o.matrixWorld),i.copy(c.ray).applyMatrix4(n),f instanceof e.Geometry)for(T=f.vertices,g=T.length,d=new e.Vector3,m=new e.Vector3,x=o.type===e.LineStrip?1:2,f=0;g-1>f;f+=x)i.distanceSqToSegment(T[f],T[f+1],m,d)>E||(p=i.origin.distanceTo(m),p<c.near||p>c.far||u.push({distance:p,point:d.clone().applyMatrix4(o.matrixWorld),face:null,faceIndex:null,object:o}))}},c=function(e,t,i){for(var e=e.getDescendants(),r=0,n=e.length;n>r;r++)l(e[r],t,i)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.linePrecision=1,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)},e.Raycaster.prototype.intersectObject=function(e,t){var i=[];return!0===t&&c(e,this,i),l(e,this,i),i.sort(o),i},e.Raycaster.prototype.intersectObjects=function(e,t){for(var i=[],r=0,n=e.length;n>r;r++)l(e[r],this,i),!0===t&&c(e[r],this,i);return i.sort(o),i}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Euler,this.quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this.rotation._quaternion=this.quaternion,this.quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var e=new THREE.Matrix4;return function(t){this.matrix.multiplyMatrices(t,this.matrix),this.position.getPositionFromMatrix(this.matrix),this.scale.getScaleFromMatrix(this.matrix),e.extractRotation(this.matrix),this.quaternion.setFromRotationMatrix(e)}}(),setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,i){return e.setFromAxisAngle(t,i),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,i){return e.copy(t),e.applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(i)),this}}(),translate:function(e,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,i=this.children.length;i>t;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];if(n.id===e||!0===t&&(n=n.getObjectById(e,t),void 0!==n))return n}},getObjectByName:function(e,t){for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];if(n.name===e||!0===t&&(n=n.getObjectByName(e,t),void 0!==n))return n}},getChildByName:function(e,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,i=this.children.length;i>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),!0===t)for(var i=0;i<this.children.length;i++)e.add(this.children[i].clone());return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(a===g){var e=new THREE.RenderableVertex;return m.push(e),g++,a++,e}return m[a++]}function t(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function i(e,t){var i=0,r=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return n>=0&&o>=0&&a>=0&&s>=0?!0:0>n&&0>o||0>a&&0>s?!1:(0>n?i=Math.max(i,n/(n-o)):0>o&&(r=Math.min(r,n/(n-o))),0>a?i=Math.max(i,a/(a-s)):0>s&&(r=Math.min(r,a/(a-s))),i>r?!1:(e.lerp(t,i),t.lerp(e,1-r),!0))}var r,n,o,a,s,h,l,c,u,p,f,E=[],d=0,m=[],g=0,T=[],v=0,y=[],R=0,x=[],H=0,_={objects:[],sprites:[],lights:[],elements:[]},b=new THREE.Vector3,w=new THREE.Vector4,M=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),S=new THREE.Box3,A=Array(3),C=new THREE.Matrix4,P=new THREE.Matrix4,L=new THREE.Matrix4,D=new THREE.Matrix3,F=new THREE.Matrix3,V=new THREE.Vector3,U=new THREE.Frustum,z=new THREE.Vector4,B=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),P.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(P)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),P.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(P)},this.pickingRay=function(e,t){e.z=-1;var i=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new THREE.Raycaster(e,i)};var N=function(e){if(n===d){var t=new THREE.RenderableObject;E.push(t),d++,n++,r=t}else r=E[n++];return r.id=e.id,r.object=e,null!==e.renderDepth?r.z=e.renderDepth:(b.getPositionFromMatrix(e.matrixWorld),b.applyProjection(P),r.z=b.z),r},O=function(e){if(!1!==e.visible){e instanceof THREE.Light?_.lights.push(e):e instanceof THREE.Mesh||e instanceof THREE.Line?(!1===e.frustumCulled||!0===U.intersectsObject(e))&&_.objects.push(N(e)):(e instanceof THREE.Sprite||e instanceof THREE.Particle)&&_.sprites.push(N(e));for(var t=0,i=e.children.length;i>t;t++)O(e.children[t])}};this.projectScene=function(r,E,d,g){var b,N,I,k,G,W,j,X,Y,q,K,Q,Z=!1;for(p=c=h=0,_.elements.length=0,!0===r.autoUpdate&&r.updateMatrixWorld(),void 0===E.parent&&E.updateMatrixWorld(),C.copy(E.matrixWorldInverse.getInverse(E.matrixWorld)),P.multiplyMatrices(E.projectionMatrix,C),F.getNormalMatrix(C),U.setFromMatrix(P),n=0,_.objects.length=0,_.sprites.length=0,_.lights.length=0,O(r),!0===d&&_.objects.sort(t),r=0,d=_.objects.length;d>r;r++)if(j=_.objects[r].object,f=j.matrixWorld,a=0,j instanceof THREE.Mesh){for(X=j.geometry,I=X.vertices,Y=X.faces,X=X.faceVertexUvs,D.getNormalMatrix(f),K=j.material instanceof THREE.MeshFaceMaterial,Q=!0===K?j.material:null,b=0,N=I.length;N>b;b++){o=e(),o.positionWorld.copy(I[b]).applyMatrix4(f),o.positionScreen.copy(o.positionWorld).applyMatrix4(P);var J=1/o.positionScreen.w;o.positionScreen.x*=J,o.positionScreen.y*=J,o.positionScreen.z*=J,o.visible=!(-1>o.positionScreen.x||1<o.positionScreen.x||-1>o.positionScreen.y||1<o.positionScreen.y||-1>o.positionScreen.z||1<o.positionScreen.z)}for(I=0,b=Y.length;b>I;I++)if(N=Y[I],J=!0===K?Q.materials[N.materialIndex]:j.material,void 0!==J&&(W=J.side,k=m[N.a],G=m[N.b],q=m[N.c],A[0]=k.positionScreen,A[1]=G.positionScreen,A[2]=q.positionScreen,!0===k.visible||!0===G.visible||!0===q.visible||M.isIntersectionBox(S.setFromPoints(A)))&&(Z=0>(q.positionScreen.x-k.positionScreen.x)*(G.positionScreen.y-k.positionScreen.y)-(q.positionScreen.y-k.positionScreen.y)*(G.positionScreen.x-k.positionScreen.x),W===THREE.DoubleSide||Z===(W===THREE.FrontSide))){if(h===v){var $=new THREE.RenderableFace3;T.push($),v++,h++,s=$}else s=T[h++];for(s.id=j.id,s.v1.copy(k),s.v2.copy(G),s.v3.copy(q),s.normalModel.copy(N.normal),!1===Z&&(W===THREE.BackSide||W===THREE.DoubleSide)&&s.normalModel.negate(),s.normalModel.applyMatrix3(D).normalize(),s.normalModelView.copy(s.normalModel).applyMatrix3(F),s.centroidModel.copy(N.centroid).applyMatrix4(f),q=N.vertexNormals,k=0,G=Math.min(q.length,3);G>k;k++)$=s.vertexNormalsModel[k],$.copy(q[k]),!1===Z&&(W===THREE.BackSide||W===THREE.DoubleSide)&&$.negate(),$.applyMatrix3(D).normalize(),s.vertexNormalsModelView[k].copy($).applyMatrix3(F);for(s.vertexNormalsLength=q.length,Z=0,k=Math.min(X.length,3);k>Z;Z++)if(q=X[Z][I],void 0!==q)for(G=0,W=q.length;W>G;G++)s.uvs[Z][G]=q[G];s.color=N.color,s.material=J,V.copy(s.centroidModel).applyProjection(P),s.z=V.z,_.elements.push(s)}}else if(j instanceof THREE.Line)for(L.multiplyMatrices(P,f),I=j.geometry.vertices,k=e(),k.positionScreen.copy(I[0]).applyMatrix4(L),Y=j.type===THREE.LinePieces?2:1,b=1,N=I.length;N>b;b++)k=e(),k.positionScreen.copy(I[b]).applyMatrix4(L),(b+1)%Y>0||(G=m[a-2],z.copy(k.positionScreen),B.copy(G.positionScreen),!0===i(z,B)&&(z.multiplyScalar(1/z.w),B.multiplyScalar(1/B.w),c===R?(X=new THREE.RenderableLine,y.push(X),R++,c++,l=X):l=y[c++],l.id=j.id,l.v1.positionScreen.copy(z),l.v2.positionScreen.copy(B),l.z=Math.max(z.z,B.z),l.material=j.material,j.material.vertexColors===THREE.VertexColors&&(l.vertexColors[0].copy(j.geometry.colors[b]),l.vertexColors[1].copy(j.geometry.colors[b-1])),_.elements.push(l)));for(r=0,d=_.sprites.length;d>r;r++)j=_.sprites[r].object,f=j.matrixWorld,j instanceof THREE.Particle&&(w.set(f.elements[12],f.elements[13],f.elements[14],1),w.applyMatrix4(P),J=1/w.w,w.z*=J,0<w.z&&1>w.z&&(p===H?(Y=new THREE.RenderableParticle,x.push(Y),H++,p++,u=Y):u=x[p++],u.id=j.id,u.x=w.x*J,u.y=w.y*J,u.z=w.z,u.object=j,u.rotation=j.rotation.z,u.scale.x=j.scale.x*Math.abs(u.x-(w.x+E.projectionMatrix.elements[0])/(w.w+E.projectionMatrix.elements[12])),u.scale.y=j.scale.y*Math.abs(u.y-(w.y+E.projectionMatrix.elements[5])/(w.w+E.projectionMatrix.elements[13])),u.material=j.material,_.elements.push(u)));return!0===g&&_.elements.sort(t),_}},THREE.Face3=function(e,t,i,r,n,o){this.a=e,this.b=t,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,i;for(t=0,i=this.vertexNormals.length;i>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,i=this.vertexColors.length;i>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,i=this.vertexTangents.length;i>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,i,r,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,i,n,o,a)},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),i=0,r=this.vertices.length;r>i;i++)this.vertices[i].applyMatrix4(e);for(i=0,r=this.faces.length;r>i;i++){var n=this.faces[i];n.normal.applyMatrix3(t).normalize();for(var o=0,a=n.vertexNormals.length;a>o;o++)n.vertexNormals[o].applyMatrix3(t).normalize();n.centroid.applyMatrix4(e)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var e,t,i;for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],i.centroid.set(0,0,0),i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.divideScalar(3)},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,i=0,r=this.faces.length;r>i;i++){var n=this.faces[i],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,i,r,n;if(void 0===this.__tmpVertices){for(n=this.__tmpVertices=Array(this.vertices.length),t=0,i=this.vertices.length;i>t;t++)n[t]=new THREE.Vector3;for(t=0,i=this.faces.length;i>t;t++)r=this.faces[t],r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else for(n=this.__tmpVertices,t=0,i=this.vertices.length;i>t;t++)n[t].set(0,0,0);if(e){var o,a,s=new THREE.Vector3,h=new THREE.Vector3;for(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,t=0,i=this.faces.length;i>t;t++)r=this.faces[t],e=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s.subVectors(a,o),h.subVectors(e,o),s.cross(h),n[r.a].add(s),n[r.b].add(s),n[r.c].add(s)}else for(t=0,i=this.faces.length;i>t;t++)r=this.faces[t],n[r.a].add(r.normal),n[r.b].add(r.normal),n[r.c].add(r.normal);for(t=0,i=this.vertices.length;i>t;t++)n[t].normalize();for(t=0,i=this.faces.length;i>t;t++)r=this.faces[t],r.vertexNormals[0].copy(n[r.a]),r.vertexNormals[1].copy(n[r.b]),r.vertexNormals[2].copy(n[r.c])},computeMorphNormals:function(){var e,t,i,r,n;for(i=0,r=this.faces.length;r>i;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[],n=this.morphNormals[e].faceNormals;var a,s,h=this.morphNormals[e].vertexNormals;for(i=0,r=this.faces.length;r>i;i++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(a),h.push(s)}for(h=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),i=0,r=this.faces.length;r>i;i++)n=this.faces[i],a=h.faceNormals[i],s=h.vertexNormals[i],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;r>i;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var e,t,i,r,n,o,a,s,h,l,c,u,p,f,E,d,m,g=[],T=[];i=new THREE.Vector3;var v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3;for(e=0,t=this.vertices.length;t>e;e++)g[e]=new THREE.Vector3,T[e]=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)n=this.faces[e],o=this.faceVertexUvs[0][e],r=n.a,m=n.b,n=n.c,a=this.vertices[r],s=this.vertices[m],h=this.vertices[n],l=o[0],c=o[1],u=o[2],o=s.x-a.x,p=h.x-a.x,f=s.y-a.y,E=h.y-a.y,s=s.z-a.z,a=h.z-a.z,h=c.x-l.x,d=u.x-l.x,c=c.y-l.y,l=u.y-l.y,u=1/(h*l-d*c),i.set((l*o-c*p)*u,(l*f-c*E)*u,(l*s-c*a)*u),v.set((h*p-d*o)*u,(h*E-d*f)*u,(h*a-d*s)*u),g[r].add(i),g[m].add(i),g[n].add(i),T[r].add(v),T[m].add(v),T[n].add(v);for(v=["a","b","c","d"],e=0,t=this.faces.length;t>e;e++)for(n=this.faces[e],i=0;i<Math.min(n.vertexNormals.length,3);i++)x.copy(n.vertexNormals[i]),r=n[v[i]],m=g[r],y.copy(m),y.sub(x.multiplyScalar(x.dot(m))).normalize(),R.crossVectors(n.vertexNormals[i],m),r=R.dot(T[r]),r=0>r?-1:1,n.vertexTangents[i]=new THREE.Vector4(y.x,y.y,y.z,r);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,i=0,r=t.length;r>i;i++)i>0&&(e+=t[i].distanceTo(t[i-1])),this.lineDistances[i]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var e,t,i,r={},n=[],o=[],a=Math.pow(10,4);for(this.__tmpVertices=void 0,t=0,i=this.vertices.length;i>t;t++)e=this.vertices[t],e=Math.round(e.x*a)+"_"+Math.round(e.y*a)+"_"+Math.round(e.z*a),void 0===r[e]?(r[e]=t,n.push(this.vertices[t]),o[t]=n.length-1):o[t]=o[r[e]];for(r=[],t=0,i=this.faces.length;i>t;t++)for(a=this.faces[t],a.a=o[a.a],a.b=o[a.b],a.c=o[a.c],a=[a.a,a.b,a.c],e=0;3>e;e++)if(a[e]==a[(e+1)%3]){r.push(t);break}for(t=r.length-1;t>=0;t--)for(a=r[t],this.faces.splice(a,1),o=0,i=this.faceVertexUvs.length;i>o;o++)this.faceVertexUvs[o].splice(a,1);return t=this.vertices.length-n.length,this.vertices=n,t},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,i=0,r=t.length;r>i;i++)e.vertices.push(t[i].clone());for(t=this.faces,i=0,r=t.length;r>i;i++)e.faces.push(t[i].clone());for(t=this.faceVertexUvs[0],i=0,r=t.length;r>i;i++){for(var n=t[i],o=[],a=0,s=n.length;s>a;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));e.faceVertexUvs[0].push(o)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.dynamic=!0,this.offsets=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,i;this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(i=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==i&&((new THREE.Matrix3).getNormalMatrix(e).multiplyVector3Array(i),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,i,r,n=this.boundingBox;3<=e.length&&(n.min.x=n.max.x=e[0],n.min.y=n.max.y=e[1],n.min.z=n.max.z=e[2]);for(var o=3,a=e.length;a>o;o+=3)t=e[o],i=e[o+1],r=e[o+2],t<n.min.x?n.min.x=t:t>n.max.x&&(n.max.x=t),i<n.min.y?n.min.y=i:i>n.max.y&&(n.max.y=i),r<n.min.z?n.min.z=r:r>n.max.z&&(n.max.z=r)}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){for(var r=this.boundingSphere.center,n=0,o=i.length;o>n;n+=3)t.set(i[n],i[n+1],i[n+2]),e.addPoint(t);e.center(r);for(var a=0,n=0,o=i.length;o>n;n+=3)t.set(i[n],i[n+1],i[n+2]),a=Math.max(a,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a)}}}(),computeVertexNormals:function(){if(this.attributes.position){var e,t,i,r;if(e=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var n,o,a,s,h,l,c=this.attributes.position.array,u=this.attributes.normal.array,p=new THREE.Vector3,f=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=this.offsets;for(i=0,r=T.length;r>i;++i){t=T[i].start,n=T[i].count;var v=T[i].index;for(e=t,t+=n;t>e;e+=3)n=v+g[e],o=v+g[e+1],a=v+g[e+2],s=c[3*n],h=c[3*n+1],l=c[3*n+2],p.set(s,h,l),s=c[3*o],h=c[3*o+1],l=c[3*o+2],f.set(s,h,l),s=c[3*a],h=c[3*a+1],l=c[3*a+2],E.set(s,h,l),d.subVectors(E,f),m.subVectors(p,f),d.cross(m),u[3*n]+=d.x,u[3*n+1]+=d.y,u[3*n+2]+=d.z,u[3*o]+=d.x,u[3*o+1]+=d.y,u[3*o+2]+=d.z,u[3*a]+=d.x,u[3*a+1]+=d.y,u[3*a+2]+=d.z}}else for(e=0,t=c.length;t>e;e+=9)s=c[e],h=c[e+1],l=c[e+2],p.set(s,h,l),s=c[e+3],h=c[e+4],l=c[e+5],f.set(s,h,l),s=c[e+6],h=c[e+7],l=c[e+8],E.set(s,h,l),d.subVectors(E,f),m.subVectors(p,f),d.cross(m),u[e]=d.x,u[e+1]=d.y,u[e+2]=d.z,u[e+3]=d.x,u[e+4]=d.y,u[e+5]=d.z,u[e+6]=d.x,u[e+7]=d.y,u[e+8]=d.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,i,r=this.attributes.normal.array,n=0,o=r.length;o>n;n+=3)e=r[n],t=r[n+1],i=r[n+2],e=1/Math.sqrt(e*e+t*t+i*i),r[n]*=e,r[n+1]*=e,r[n+2]*=e},computeTangents:function(){function e(e){N.x=r[3*e],N.y=r[3*e+1],N.z=r[3*e+2],O.copy(N),V=s[e],z.copy(V),z.sub(N.multiplyScalar(N.dot(V))).normalize(),B.crossVectors(O,V),U=B.dot(h[e]),F=0>U?-1:1,a[4*e]=z.x,a[4*e+1]=z.y,a[4*e+2]=z.z,a[4*e+3]=F}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var t=this.attributes.index.array,i=this.attributes.position.array,r=this.attributes.normal.array,n=this.attributes.uv.array,o=i.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*o)});for(var a=this.attributes.tangent.array,s=[],h=[],l=0;o>l;l++)s[l]=new THREE.Vector3,h[l]=new THREE.Vector3;var c,u,p,f,E,d,m,g,T,v,y,R,x,H,_,b,w,M,S,A,C,P,o=new THREE.Vector3,l=new THREE.Vector3,L=this.offsets;for(M=0,S=L.length;S>M;++M){w=L[M].start,A=L[M].count;var D=L[M].index;for(b=w,w+=A;w>b;b+=3)A=D+t[b],C=D+t[b+1],P=D+t[b+2],c=i[3*A],u=i[3*A+1],p=i[3*A+2],f=i[3*C],E=i[3*C+1],d=i[3*C+2],m=i[3*P],g=i[3*P+1],T=i[3*P+2],v=n[2*A],y=n[2*A+1],R=n[2*C],x=n[2*C+1],H=n[2*P],_=n[2*P+1],f-=c,c=m-c,E-=u,u=g-u,d-=p,p=T-p,R-=v,v=H-v,x-=y,y=_-y,_=1/(R*y-v*x),o.set((y*f-x*c)*_,(y*E-x*u)*_,(y*d-x*p)*_),l.set((R*c-v*f)*_,(R*u-v*E)*_,(R*p-v*d)*_),s[A].add(o),s[C].add(o),s[P].add(o),h[A].add(l),h[C].add(l),h[P].add(l)}var F,V,U,z=new THREE.Vector3,B=new THREE.Vector3,N=new THREE.Vector3,O=new THREE.Vector3;for(M=0,S=L.length;S>M;++M)for(w=L[M].start,A=L[M].count,D=L[M].index,b=w,w+=A;w>b;b+=3)A=D+t[b],C=D+t[b+1],P=D+t[b+2],e(A),e(C),e(P);this.tangentsNeedUpdate=this.hasTangents=!0}},clone:function(){var e,t=new THREE.BufferGeometry,i=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(e in this.attributes){for(var r=this.attributes[e],n=r.array,o={itemSize:r.itemSize,numItems:r.numItems,array:null},r=0,a=i.length;a>r;r++){var s=i[r];if(n instanceof s){o.array=new s(n);break}}t.attributes[e]=o}for(r=0,a=this.offsets.length;a>r;r++)i=this.offsets[r],t.offsets.push({start:i.start,index:i.index,count:i.count});return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,
this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e.projectionMatrixInverse.copy(this.projectionMatrixInverse),e},THREE.OrthographicCamera=function(e,t,i,r,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,n,o){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,i=-t,r=e*i,e=Math.abs(e*t-r),i=Math.abs(t-i);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*i/this.fullHeight,t-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.HemisphereLight=function(e,t,i){THREE.Light.call(this,e),this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==i?i:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,i){THREE.Light.call(this,e),this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e},THREE.SpotLight=function(e,t,i,r,n){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/3,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return e=e.split("/"),e.pop(),(1>e.length?".":e.join("/"))+"/"},initMaterials:function(e,t){for(var i=[],r=0;r<e.length;++r)i[r]=THREE.Loader.prototype.createMaterial(e[r],t);return i},needsTangents:function(e){for(var t=0,i=e.length;i>t;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function i(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function n(e,n,o,s,h,l,c){var u=/\.dds$/i.test(o),p=t+"/"+o;if(u){var f=THREE.ImageUtils.loadCompressedTexture(p);e[n]=f}else f=document.createElement("canvas"),e[n]=new THREE.Texture(f);if(e[n].sourceFile=o,s&&(e[n].repeat.set(s[0],s[1]),1!==s[0]&&(e[n].wrapS=THREE.RepeatWrapping),1!==s[1]&&(e[n].wrapT=THREE.RepeatWrapping)),h&&e[n].offset.set(h[0],h[1]),l&&(o={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==o[l[0]]&&(e[n].wrapS=o[l[0]]),void 0!==o[l[1]]&&(e[n].wrapT=o[l[1]])),c&&(e[n].anisotropy=c),!u){var E=e[n],e=new Image;e.onload=function(){if(i(this.width)&&i(this.height))E.image=this;else{var e=r(this.width),t=r(this.height);E.image.width=e,E.image.height=t,E.image.getContext("2d").drawImage(this,0,0,e,t)}E.needsUpdate=!0},e.crossOrigin=a.crossOrigin,e.src=p}}function o(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var a=this,s="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var l=e.shading.toLowerCase();"phong"===l?s="MeshPhongMaterial":"basic"===l&&(s="MeshBasicMaterial")}return void 0!==e.blending&&void 0!==THREE[e.blending]&&(h.blending=THREE[e.blending]),(void 0!==e.transparent||1>e.opacity)&&(h.transparent=e.transparent),void 0!==e.depthTest&&(h.depthTest=e.depthTest),void 0!==e.depthWrite&&(h.depthWrite=e.depthWrite),void 0!==e.visible&&(h.visible=e.visible),void 0!==e.flipSided&&(h.side=THREE.BackSide),void 0!==e.doubleSided&&(h.side=THREE.DoubleSide),void 0!==e.wireframe&&(h.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?h.vertexColors=THREE.FaceColors:e.vertexColors&&(h.vertexColors=THREE.VertexColors)),e.colorDiffuse?h.color=o(e.colorDiffuse):e.DbgColor&&(h.color=e.DbgColor),e.colorSpecular&&(h.specular=o(e.colorSpecular)),e.colorAmbient&&(h.ambient=o(e.colorAmbient)),e.transparency&&(h.opacity=e.transparency),e.specularCoef&&(h.shininess=e.specularCoef),e.mapDiffuse&&t&&n(h,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&n(h,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&n(h,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&n(h,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&n(h,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(h.bumpScale=e.mapBumpScale),e.mapNormal?(s=THREE.ShaderLib.normalmap,l=THREE.UniformsUtils.clone(s.uniforms),l.tNormal.value=h.normalMap,e.mapNormalFactor&&l.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),h.map&&(l.tDiffuse.value=h.map,l.enableDiffuse.value=!0),h.specularMap&&(l.tSpecular.value=h.specularMap,l.enableSpecular.value=!0),h.lightMap&&(l.tAO.value=h.lightMap,l.enableAO.value=!0),l.uDiffuseColor.value.setHex(h.color),l.uSpecularColor.value.setHex(h.specular),l.uAmbientColor.value.setHex(h.ambient),l.uShininess.value=h.shininess,void 0!==h.opacity&&(l.uOpacity.value=h.opacity),s=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,lights:!0,fog:!0}),h.transparent&&(s.transparent=!0)):s=new THREE[s](h),void 0!==e.DbgName&&(s.name=e.DbgName),s}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,i,r){var n=this,o=new XMLHttpRequest;void 0!==t&&o.addEventListener("load",function(i){t(i.target.responseText),n.manager.itemEnd(e)},!1),void 0!==i&&o.addEventListener("progress",function(e){i(e)},!1),void 0!==r&&o.addEventListener("error",function(e){r(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.open("GET",e,!0),o.send(null),n.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,i,r){var n=this,o=document.createElement("img");return void 0!==t&&o.addEventListener("load",function(){n.manager.itemEnd(e),t(this)},!1),void 0!==i&&o.addEventListener("progress",function(e){i(e)},!1),void 0!==r&&o.addEventListener("error",function(e){r(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=e,n.manager.itemStart(e),o},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,i){i=i&&"string"==typeof i?i:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,i,r,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText),s=e.parse(s,r);i(s.geometry,s.materials)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+o.status+"]");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){var i,r,n,o,a,s,h,l,c,u,p,f,E,d,m=new THREE.Geometry,g=void 0!==e.scale?1/e.scale:1,T=e.faces;c=e.vertices;var v=e.normals,y=e.colors,R=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&R++;for(i=0;R>i;i++)m.faceVertexUvs[i]=[]}for(o=0,a=c.length;a>o;)s=new THREE.Vector3,s.x=c[o++]*g,s.y=c[o++]*g,s.z=c[o++]*g,m.vertices.push(s);for(o=0,a=T.length;a>o;)if(c=T[o++],u=1&c,n=2&c,i=8&c,h=16&c,p=32&c,s=64&c,c&=128,u){if(u=new THREE.Face3,u.a=T[o],u.b=T[o+1],u.c=T[o+3],f=new THREE.Face3,f.a=T[o+1],f.b=T[o+2],f.c=T[o+3],o+=4,n&&(n=T[o++],u.materialIndex=n,f.materialIndex=n),n=m.faces.length,i)for(i=0;R>i;i++)for(E=e.uvs[i],m.faceVertexUvs[i][n]=[],m.faceVertexUvs[i][n+1]=[],r=0;4>r;r++)l=T[o++],d=E[2*l],l=E[2*l+1],d=new THREE.Vector2(d,l),2!==r&&m.faceVertexUvs[i][n].push(d),0!==r&&m.faceVertexUvs[i][n+1].push(d);if(h&&(h=3*T[o++],u.normal.set(v[h++],v[h++],v[h]),f.normal.copy(u.normal)),p)for(i=0;4>i;i++)h=3*T[o++],p=new THREE.Vector3(v[h++],v[h++],v[h]),2!==i&&u.vertexNormals.push(p),0!==i&&f.vertexNormals.push(p);if(s&&(s=T[o++],s=y[s],u.color.setHex(s),f.color.setHex(s)),c)for(i=0;4>i;i++)s=T[o++],s=y[s],2!==i&&u.vertexColors.push(new THREE.Color(s)),0!==i&&f.vertexColors.push(new THREE.Color(s));m.faces.push(u),m.faces.push(f)}else{if(u=new THREE.Face3,u.a=T[o++],u.b=T[o++],u.c=T[o++],n&&(n=T[o++],u.materialIndex=n),n=m.faces.length,i)for(i=0;R>i;i++)for(E=e.uvs[i],m.faceVertexUvs[i][n]=[],r=0;3>r;r++)l=T[o++],d=E[2*l],l=E[2*l+1],d=new THREE.Vector2(d,l),m.faceVertexUvs[i][n].push(d);if(h&&(h=3*T[o++],u.normal.set(v[h++],v[h++],v[h])),p)for(i=0;3>i;i++)h=3*T[o++],p=new THREE.Vector3(v[h++],v[h++],v[h]),u.vertexNormals.push(p);if(s&&(s=T[o++],u.color.setHex(y[s])),c)for(i=0;3>i;i++)s=T[o++],u.vertexColors.push(new THREE.Color(y[s]));m.faces.push(u)}if(e.skinWeights)for(o=0,a=e.skinWeights.length;a>o;o+=2)T=e.skinWeights[o],v=e.skinWeights[o+1],m.skinWeights.push(new THREE.Vector4(T,v,0,0));if(e.skinIndices)for(o=0,a=e.skinIndices.length;a>o;o+=2)T=e.skinIndices[o],v=e.skinIndices[o+1],m.skinIndices.push(new THREE.Vector4(T,v,0,0));if(m.bones=e.bones,m.animation=e.animation,void 0!==e.morphTargets)for(o=0,a=e.morphTargets.length;a>o;o++)for(m.morphTargets[o]={},m.morphTargets[o].name=e.morphTargets[o].name,m.morphTargets[o].vertices=[],y=m.morphTargets[o].vertices,R=e.morphTargets[o].vertices,T=0,v=R.length;v>T;T+=3)c=new THREE.Vector3,c.x=R[T]*g,c.y=R[T+1]*g,c.z=R[T+2]*g,y.push(c);if(void 0!==e.morphColors)for(o=0,a=e.morphColors.length;a>o;o++)for(m.morphColors[o]={},m.morphColors[o].name=e.morphColors[o].name,m.morphColors[o].colors=[],v=m.morphColors[o].colors,y=e.morphColors[o].colors,g=0,T=y.length;T>g;g+=3)R=new THREE.Color(16755200),R.setRGB(y[g],y[g+1],y[g+2]),v.push(R);return m.computeCentroids(),m.computeFaceNormals(),m.computeBoundingSphere(),void 0===e.materials?{geometry:m}:(g=this.initMaterials(e.materials,t),this.needsTangents(g)&&m.computeTangents(),{geometry:m,materials:g})},THREE.LoadingManager=function(e,t,i){var r=this,n=0,o=0;this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(){o++},this.itemEnd=function(e){n++,void 0!==r.onProgress&&r.onProgress(e,n,o),n===o&&void 0!==r.onLoad&&r.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t){var i=this,r=new THREE.XHRLoader;r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){t(i.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t,i=new THREE.BufferGeometry,r=e.attributes,n=e.offsets,e=e.boundingSphere;for(t in r){var o=r[t];i.attributes[t]={itemSize:o.itemSize,array:new self[o.type](o.array)}}return void 0!==n&&(i.offsets=JSON.parse(JSON.stringify(n))),void 0!==e&&(i.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius)),i}},THREE.GeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(e,t){var i=this,r=new THREE.XHRLoader;r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){t(i.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(){}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t){var i=this,r=new THREE.XHRLoader;r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){t(i.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.ambient&&t.ambient.setHex(e.ambient),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.materials)for(var i=0,r=e.materials.length;r>i;i++)t.materials.push(this.parse(e.materials[i]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t){var i=this,r=new THREE.XHRLoader(i.manager);r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){t(i.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),i=this.parseMaterials(e.materials);return this.parseObject(e.object,t,i)},parseGeometries:function(e){var t={};if(void 0!==e)for(var i=new THREE.JSONLoader,r=new THREE.BufferGeometryLoader,n=0,o=e.length;o>n;n++){var a,s=e[n];switch(s.type){case"PlaneGeometry":a=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CubeGeometry":a=new THREE.CubeGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radiusSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=r.parse(s.data);break;case"Geometry":a=i.parse(s.data).geometry}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),t[s.uuid]=a}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var i=new THREE.MaterialLoader,r=0,n=e.length;n>r;r++){var o=e[r],a=i.parse(o);a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),t[o.uuid]=a}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,i,r){var n;switch(t.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":n=new THREE.AmbientLight(t.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":n=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":n=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":n=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":n=i[t.geometry];var o=r[t.material];void 0===n&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material),n=new THREE.Mesh(n,o);break;default:n=new THREE.Object3D}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.children)for(var a in t.children)n.add(this.parseObject(t.children[a],i,r));return n}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t){var i=this,r=new THREE.XHRLoader(i.manager);r.setCrossOrigin(this.crossOrigin),r.load(e,function(r){i.parse(JSON.parse(r),t,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,i){function r(e,t){return"relativeToHTML"==t?e:w+"/"+e}function n(){o(H.scene,S.objects)}function o(e,t){var i,n,a,h,l,c,E;for(E in t){var d=H.objects[E],v=t[E];if(void 0===d){if(v.type&&v.type in b.hierarchyHandlers){if(void 0===v.loading){n={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},a={};for(var y in v)y in n||(a[y]=v[y]);p=H.materials[v.material],v.loading=!0,n=b.hierarchyHandlers[v.type].loaderObject,n.options?n.load(r(v.url,S.urlBaseType),s(E,e,p,v)):n.load(r(v.url,S.urlBaseType),s(E,e,p,v),a)}}else if(void 0!==v.geometry){if(u=H.geometries[v.geometry]){if(d=!1,p=H.materials[v.material],d=p instanceof THREE.ShaderMaterial,a=v.position,h=v.rotation,l=v.scale,i=v.matrix,c=v.quaternion,v.material||(p=new THREE.MeshFaceMaterial(H.face_materials[v.geometry])),p instanceof THREE.MeshFaceMaterial&&0===p.materials.length&&(p=new THREE.MeshFaceMaterial(H.face_materials[v.geometry])),p instanceof THREE.MeshFaceMaterial)for(n=0;n<p.materials.length;n++)d=d||p.materials[n]instanceof THREE.ShaderMaterial;d&&u.computeTangents(),v.skin?d=new THREE.SkinnedMesh(u,p):v.morph?(d=new THREE.MorphAnimMesh(u,p),void 0!==v.duration&&(d.duration=v.duration),void 0!==v.time&&(d.time=v.time),void 0!==v.mirroredLoop&&(d.mirroredLoop=v.mirroredLoop),p.morphNormals&&u.computeMorphNormals()):d=new THREE.Mesh(u,p),d.name=E,i?(d.matrixAutoUpdate=!1,d.matrix.set(i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9],i[10],i[11],i[12],i[13],i[14],i[15])):(d.position.fromArray(a),c?d.quaternion.fromArray(c):d.rotation.fromArray(h),d.scale.fromArray(l)),d.visible=v.visible,d.castShadow=v.castShadow,d.receiveShadow=v.receiveShadow,e.add(d),H.objects[E]=d}}else"DirectionalLight"===v.type||"PointLight"===v.type||"AmbientLight"===v.type?(g=void 0!==v.color?v.color:16777215,T=void 0!==v.intensity?v.intensity:1,"DirectionalLight"===v.type?(a=v.direction,m=new THREE.DirectionalLight(g,T),m.position.fromArray(a),v.target&&(M.push({object:m,targetName:v.target}),m.target=null)):"PointLight"===v.type?(a=v.position,n=v.distance,m=new THREE.PointLight(g,T,n),m.position.fromArray(a)):"AmbientLight"===v.type&&(m=new THREE.AmbientLight(g)),e.add(m),m.name=E,H.lights[E]=m,H.objects[E]=m):"PerspectiveCamera"===v.type||"OrthographicCamera"===v.type?(a=v.position,h=v.rotation,c=v.quaternion,"PerspectiveCamera"===v.type?f=new THREE.PerspectiveCamera(v.fov,v.aspect,v.near,v.far):"OrthographicCamera"===v.type&&(f=new THREE.OrthographicCamera(v.left,v.right,v.top,v.bottom,v.near,v.far)),f.name=E,f.position.fromArray(a),void 0!==c?f.quaternion.fromArray(c):void 0!==h&&f.rotation.fromArray(h),e.add(f),H.cameras[E]=f,H.objects[E]=f):(a=v.position,h=v.rotation,l=v.scale,c=v.quaternion,d=new THREE.Object3D,d.name=E,d.position.fromArray(a),c?d.quaternion.fromArray(c):d.rotation.fromArray(h),d.scale.fromArray(l),d.visible=void 0!==v.visible?v.visible:!1,e.add(d),H.objects[E]=d,H.empties[E]=d);if(d){if(void 0!==v.userData)for(var R in v.userData)d.userData[R]=v.userData[R];if(void 0!==v.groups)for(n=0;n<v.groups.length;n++)a=v.groups[n],void 0===H.groups[a]&&(H.groups[a]=[]),H.groups[a].push(E)}}void 0!==d&&void 0!==v.children&&o(d,v.children)}}function a(e){return function(t,i){t.name=e,H.geometries[e]=t,H.face_materials[e]=i,n(),v-=1,b.onLoadComplete(),l()}}function s(e,t,i,r){return function(o){var o=o.content?o.content:o.dae?o.scene:o,a=r.rotation,s=r.quaternion,h=r.scale;o.position.fromArray(r.position),s?o.quaternion.fromArray(s):o.rotation.fromArray(a),o.scale.fromArray(h),i&&o.traverse(function(e){e.material=i});var c=void 0!==r.visible?r.visible:!0;o.traverse(function(e){e.visible=c}),t.add(o),o.name=e,H.objects[e]=o,n(),v-=1,b.onLoadComplete(),l()}}function h(e){return function(t,i){t.name=e,H.geometries[e]=t,H.face_materials[e]=i}}function l(){if(b.callbackProgress({totalModels:R,totalTextures:x,loadedModels:R-v,loadedTextures:x-y},H),b.onLoadProgress(),0===v&&0===y){for(var e=0;e<M.length;e++){var i=M[e],r=H.objects[i.targetName];r?i.object.target=r:(i.object.target=new THREE.Object3D,H.scene.add(i.object.target)),i.object.target.userData.targetInverse=i.object}t(H)}}function c(e,t){if(t(e),void 0!==e.children)for(var i in e.children)c(e.children[i],t)}var u,p,f,E,d,m,g,T,v,y,R,x,H,_,b=this,w=THREE.Loader.prototype.extractUrlBase(i),M=[],S=e;for(_ in this.geometryHandlers)e=this.geometryHandlers[_].loaderClass,this.geometryHandlers[_].loaderObject=new e;for(_ in this.hierarchyHandlers)e=this.hierarchyHandlers[_].loaderClass,this.hierarchyHandlers[_].loaderObject=new e;y=v=0,H={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},S.transform&&(_=S.transform.position,e=S.transform.rotation,i=S.transform.scale,_&&H.scene.position.fromArray(_),e&&H.scene.rotation.fromArray(e),i&&H.scene.scale.fromArray(i),_||e||i)&&(H.scene.updateMatrix(),H.scene.updateMatrixWorld()),_=function(e){return function(){y-=e,l(),b.onLoadComplete()}};for(var A in S.fogs)e=S.fogs[A],"linear"===e.type?E=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(E=new THREE.FogExp2(0,e.density)),e=e.color,E.color.setRGB(e[0],e[1],e[2]),H.fogs[A]=E;for(var C in S.geometries)E=S.geometries[C],E.type in this.geometryHandlers&&(v+=1,b.onLoadStart());for(var P in S.objects)c(S.objects[P],function(e){e.type&&e.type in b.hierarchyHandlers&&(v+=1,b.onLoadStart())});R=v;for(C in S.geometries)if(E=S.geometries[C],"cube"===E.type)u=new THREE.CubeGeometry(E.width,E.height,E.depth,E.widthSegments,E.heightSegments,E.depthSegments),u.name=C,H.geometries[C]=u;else if("plane"===E.type)u=new THREE.PlaneGeometry(E.width,E.height,E.widthSegments,E.heightSegments),u.name=C,H.geometries[C]=u;else if("sphere"===E.type)u=new THREE.SphereGeometry(E.radius,E.widthSegments,E.heightSegments),u.name=C,H.geometries[C]=u;else if("cylinder"===E.type)u=new THREE.CylinderGeometry(E.topRad,E.botRad,E.height,E.radSegs,E.heightSegs),u.name=C,H.geometries[C]=u;else if("torus"===E.type)u=new THREE.TorusGeometry(E.radius,E.tube,E.segmentsR,E.segmentsT),u.name=C,H.geometries[C]=u;else if("icosahedron"===E.type)u=new THREE.IcosahedronGeometry(E.radius,E.subdivisions),u.name=C,H.geometries[C]=u;else if(E.type in this.geometryHandlers){P={};for(d in E)"type"!==d&&"url"!==d&&(P[d]=E[d]);this.geometryHandlers[E.type].loaderObject.load(r(E.url,S.urlBaseType),a(C),P)}else"embedded"===E.type&&(P=S.embeds[E.id],P.metadata=S.metadata,P&&(P=this.geometryHandlers.ascii.loaderObject.parse(P,""),h(C)(P.geometry,P.materials)));for(var L in S.textures)if(C=S.textures[L],C.url instanceof Array)for(y+=C.url.length,d=0;d<C.url.length;d++)b.onLoadStart();else y+=1,b.onLoadStart();x=y;for(L in S.textures){if(C=S.textures[L],void 0!==C.mapping&&void 0!==THREE[C.mapping]&&(C.mapping=new THREE[C.mapping]),C.url instanceof Array){for(P=C.url.length,E=[],d=0;P>d;d++)E[d]=r(C.url[d],S.urlBaseType);d=(d=/\.dds$/i.test(E[0]))?THREE.ImageUtils.loadCompressedTextureCube(E,C.mapping,_(P)):THREE.ImageUtils.loadTextureCube(E,C.mapping,_(P))}else d=/\.dds$/i.test(C.url),P=r(C.url,S.urlBaseType),E=_(1),d=d?THREE.ImageUtils.loadCompressedTexture(P,C.mapping,E):THREE.ImageUtils.loadTexture(P,C.mapping,E),void 0!==THREE[C.minFilter]&&(d.minFilter=THREE[C.minFilter]),void 0!==THREE[C.magFilter]&&(d.magFilter=THREE[C.magFilter]),C.anisotropy&&(d.anisotropy=C.anisotropy),C.repeat&&(d.repeat.set(C.repeat[0],C.repeat[1]),1!==C.repeat[0]&&(d.wrapS=THREE.RepeatWrapping),1!==C.repeat[1]&&(d.wrapT=THREE.RepeatWrapping)),C.offset&&d.offset.set(C.offset[0],C.offset[1]),C.wrap&&(P={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==P[C.wrap[0]]&&(d.wrapS=P[C.wrap[0]]),void 0!==P[C.wrap[1]]&&(d.wrapT=P[C.wrap[1]]));H.textures[L]=d}var D,F;for(D in S.materials){L=S.materials[D];for(F in L.parameters)"envMap"===F||"map"===F||"lightMap"===F||"bumpMap"===F?L.parameters[F]=H.textures[L.parameters[F]]:"shading"===F?L.parameters[F]="flat"===L.parameters[F]?THREE.FlatShading:THREE.SmoothShading:"side"===F?L.parameters[F]="double"==L.parameters[F]?THREE.DoubleSide:"back"==L.parameters[F]?THREE.BackSide:THREE.FrontSide:"blending"===F?L.parameters[F]=L.parameters[F]in THREE?THREE[L.parameters[F]]:THREE.NormalBlending:"combine"===F?L.parameters[F]=L.parameters[F]in THREE?THREE[L.parameters[F]]:THREE.MultiplyOperation:"vertexColors"===F?"face"==L.parameters[F]?L.parameters[F]=THREE.FaceColors:L.parameters[F]&&(L.parameters[F]=THREE.VertexColors):"wrapRGB"===F&&(_=L.parameters[F],L.parameters[F]=new THREE.Vector3(_[0],_[1],_[2]));void 0!==L.parameters.opacity&&1>L.parameters.opacity&&(L.parameters.transparent=!0),L.parameters.normalMap?(_=THREE.ShaderLib.normalmap,C=THREE.UniformsUtils.clone(_.uniforms),d=L.parameters.color,P=L.parameters.specular,E=L.parameters.ambient,A=L.parameters.shininess,C.tNormal.value=H.textures[L.parameters.normalMap],L.parameters.normalScale&&C.uNormalScale.value.set(L.parameters.normalScale[0],L.parameters.normalScale[1]),L.parameters.map&&(C.tDiffuse.value=L.parameters.map,C.enableDiffuse.value=!0),L.parameters.envMap&&(C.tCube.value=L.parameters.envMap,C.enableReflection.value=!0,C.uReflectivity.value=L.parameters.reflectivity),L.parameters.lightMap&&(C.tAO.value=L.parameters.lightMap,C.enableAO.value=!0),L.parameters.specularMap&&(C.tSpecular.value=H.textures[L.parameters.specularMap],
C.enableSpecular.value=!0),L.parameters.displacementMap&&(C.tDisplacement.value=H.textures[L.parameters.displacementMap],C.enableDisplacement.value=!0,C.uDisplacementBias.value=L.parameters.displacementBias,C.uDisplacementScale.value=L.parameters.displacementScale),C.uDiffuseColor.value.setHex(d),C.uSpecularColor.value.setHex(P),C.uAmbientColor.value.setHex(E),C.uShininess.value=A,L.parameters.opacity&&(C.uOpacity.value=L.parameters.opacity),p=new THREE.ShaderMaterial({fragmentShader:_.fragmentShader,vertexShader:_.vertexShader,uniforms:C,lights:!0,fog:!0})):p=new THREE[L.type](L.parameters),p.name=D,H.materials[D]=p}for(D in S.materials)if(L=S.materials[D],L.parameters.materials){for(F=[],d=0;d<L.parameters.materials.length;d++)F.push(H.materials[L.parameters.materials[d]]);H.materials[D].materials=F}n(),H.cameras&&S.defaults.camera&&(H.currentCamera=H.cameras[S.defaults.camera]),H.fogs&&S.defaults.fog&&(H.scene.fog=H.fogs[S.defaults.fog]),b.callbackSync(H),l()}},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t){var i=new THREE.ImageLoader(this.manager);i.setCrossOrigin(this.crossOrigin),i.load(e,function(e){e=new THREE.Texture(e),e.needsUpdate=!0,void 0!==t&&t(e)})},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var i=e[t];if(void 0===i)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]="overdraw"==t?Number(i):i}}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),e=e||{},void 0===e.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,i,r,n,o,a,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={data:e,width:t,height:i}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.frustumCulled=this.sortParticles=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var i,r=this.children.length;for(i=0;r>i;i++)this.children[i].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,i){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==i?i:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var r,n,o;if(this.geometry&&void 0!==this.geometry.bones){for(e=0;e<this.geometry.bones.length;e++)i=this.geometry.bones[e],r=i.pos,n=i.rotq,o=i.scl,t=this.addBone(),t.name=i.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(n[0],n[1],n[2],n[3]),void 0!==o?t.scale.set(o[0],o[1],o[2]):t.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)i=this.geometry.bones[e],t=this.bones[e],-1===i.parent?this.add(t):this.bones[i.parent].add(t);e=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=e>256?64:e>64?32:e>16?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1);for(var t=0,i=this.children.length;i>t;t++){var r=this.children[t];r instanceof THREE.Bone?r.update(this.identityMatrix,!1):r.updateMatrixWorld(!0)}if(void 0==this.boneInverses)for(this.boneInverses=[],t=0,i=this.bones.length;i>t;t++)r=new THREE.Matrix4,r.getInverse(this.bones[t].skinMatrix),this.boneInverses.push(r);for(t=0,i=this.bones.length;i>t;t++)e.multiplyMatrices(this.bones[t].skinMatrix,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();1/0!==i?t.multiplyScalar(i):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,i=e.animations,r=/([a-z]+)(\d+)/,n=0,o=e.morphTargets.length;o>n;n++){var a=e.morphTargets[n].name.match(r);if(a&&1<a.length){a=a[1],i[a]||(i[a]={start:1/0,end:-(1/0)});var s=i[a];n<s.start&&(s.start=n),n>s.end&&(s.end=n),t||(t=a)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:i}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];i?(this.setFrameRange(i.start,i.end),this.duration=1e3*((i.end-i.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1),e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);for(var t=Math.abs(t),i=0;i<this.objects.length&&!(t<this.objects[i].distance);i++);this.objects.splice(i,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,i=this.objects.length;i>t&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){if(1<this.objects.length){e.getPositionFromMatrix(i.matrixWorld),t.getPositionFromMatrix(this.matrixWorld),i=e.distanceTo(t),this.objects[0].object.visible=!0;for(var r=1,n=this.objects.length;n>r&&i>=this.objects[r].distance;r++)this.objects[r-1].object.visible=!1,this.objects[r].object.visible=!0;for(;n>r;r++)this.objects[r].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation,this.rotation3d.order),this.quaternion.setFromEuler(this.rotation3d),this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);if(-1!==t&&this.__lights.splice(t,1),e.shadowCascadeArray)for(t=0;t<e.shadowCascadeArray.length;t++)this.__removeObject(e.shadowCascadeArray[t])}else e instanceof THREE.Camera||(this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1));for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,i){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e,t,i){for(var r=0,n=T.length;n>r;r++){var o=T[r];if(Te.copy(o.color),o instanceof THREE.DirectionalLight){var a=Me.getPositionFromMatrix(o.matrixWorld).normalize(),s=t.dot(a);0>=s||(s*=o.intensity,i.add(Te.multiplyScalar(s)))}else o instanceof THREE.PointLight&&(a=Me.getPositionFromMatrix(o.matrixWorld),s=t.dot(Me.subVectors(a,e).normalize()),0>=s||(s*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1),0!=s&&(s*=o.intensity,i.add(Te.multiplyScalar(s)))))}}function i(e,t,i,r){c(t),u(i),p(r),f(e.getStyle()),P.stroke(),He.expandByScalar(2*t)}function r(e){E(e.getStyle()),P.fill()}function n(e,t,i,n,o,a,s,h,l,c,u,p,f){if(!(f instanceof THREE.DataTexture||void 0===f.image||0==f.image.width)){if(!0===f.needsUpdate){var d=f.wrapS==THREE.RepeatWrapping,m=f.wrapT==THREE.RepeatWrapping;ve[f.id]=P.createPattern(f.image,!0===d&&!0===m?"repeat":!0===d&&!1===m?"repeat-x":!1===d&&!0===m?"repeat-y":"no-repeat"),f.needsUpdate=!1}E(void 0===ve[f.id]?"rgba(0,0,0,1)":ve[f.id]);var d=f.offset.x/f.repeat.x,m=f.offset.y/f.repeat.y,g=f.image.width*f.repeat.x,T=f.image.height*f.repeat.y,s=(s+d)*g,h=(1-h+m)*T,i=i-e,n=n-t,o=o-e,a=a-t,l=(l+d)*g-s,c=(1-c+m)*T-h,u=(u+d)*g-s,p=(1-p+m)*T-h,d=l*p-u*c;0===d?(void 0===ye[f.id]&&(t=document.createElement("canvas"),t.width=f.image.width,t.height=f.image.height,t=t.getContext("2d"),t.drawImage(f.image,0,0),ye[f.id]=t.getImageData(0,0,f.image.width,f.image.height).data),t=ye[f.id],s=4*(Math.floor(s)+Math.floor(h)*f.image.width),ue.setRGB(t[s]/255,t[s+1]/255,t[s+2]/255),r(ue)):(d=1/d,f=(p*i-c*o)*d,c=(p*n-c*a)*d,i=(l*o-u*i)*d,n=(l*a-u*n)*d,e=e-f*s-i*h,s=t-c*s-n*h,P.save(),P.transform(f,c,i,n,e,s),P.fill(),P.restore())}}function o(e,t,i,r,n,o,a,s,h,l,c,u,p){var f,E;f=p.width-1,E=p.height-1,a*=f,s*=E,i-=e,r-=t,n-=e,o-=t,h=h*f-a,l=l*E-s,c=c*f-a,u=u*E-s,E=1/(h*u-c*l),f=(u*i-l*n)*E,l=(u*r-l*o)*E,i=(h*n-c*i)*E,r=(h*o-c*r)*E,e=e-f*a-i*s,t=t-l*a-r*s,P.save(),P.transform(f,l,i,r,e,t),P.clip(),P.drawImage(p,0,0),P.restore()}function a(e,t,i,r){return he[0]=255*e.r|0,he[1]=255*e.g|0,he[2]=255*e.b|0,he[4]=255*t.r|0,he[5]=255*t.g|0,he[6]=255*t.b|0,he[8]=255*i.r|0,he[9]=255*i.g|0,he[10]=255*i.b|0,he[12]=255*r.r|0,he[13]=255*r.g|0,he[14]=255*r.b|0,ae.putImageData(se,0,0),ce.drawImage(oe,0,0),le}function s(e,t,i){var r=t.x-e.x,n=t.y-e.y,o=r*r+n*n;0!==o&&(i/=Math.sqrt(o),r*=i,n*=i,t.x+=r,t.y+=n,e.x-=r,e.y-=n)}function h(e){F!==e&&(F=P.globalAlpha=e)}function l(e){V!==e&&(e===THREE.NormalBlending?P.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?P.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(P.globalCompositeOperation="darker"),V=e)}function c(e){B!==e&&(B=P.lineWidth=e)}function u(e){N!==e&&(N=P.lineCap=e)}function p(e){O!==e&&(O=P.lineJoin=e)}function f(e){U!==e&&(U=P.strokeStyle=e)}function E(e){z!==e&&(z=P.fillStyle=e)}function d(e,t){(I!==e||k!==t)&&(P.setLineDash([e,t]),I=e,k=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var m,g,T,v,y,R,x,H,_,b,w,M=THREE.Math.smoothstep,e=e||{},S=this,A=new THREE.Projector,C=void 0!==e.canvas?e.canvas:document.createElement("canvas"),P=C.getContext("2d"),L=new THREE.Color(0),D=0,F=1,V=0,U=null,z=null,B=null,N=null,O=null,I=null,k=0;new THREE.RenderableVertex,new THREE.RenderableVertex;var G,W,j,X,Y,q,K,Q,Z,J,$,ee,te,ie,re,ne,oe,ae,se,he,le,ce,ue=new THREE.Color,pe=new THREE.Color,fe=new THREE.Color,Ee=new THREE.Color,de=new THREE.Color,me=new THREE.Color,ge=new THREE.Color,Te=new THREE.Color,ve={},ye={},Re=new THREE.Box2,xe=new THREE.Box2,He=new THREE.Box2,_e=new THREE.Color,be=new THREE.Color,we=new THREE.Color,Me=new THREE.Vector3,Se=16;oe=document.createElement("canvas"),oe.width=oe.height=2,ae=oe.getContext("2d"),ae.fillStyle="rgba(0,0,0,1)",ae.fillRect(0,0,2,2),se=ae.getImageData(0,0,2,2),he=se.data,le=document.createElement("canvas"),le.width=le.height=Se,ce=le.getContext("2d"),ce.translate(-Se/2,-Se/2),ce.scale(Se,Se),Se--,void 0===P.setLineDash&&(P.setLineDash=void 0!==P.mozDash?function(e){P.mozDash=null!==e[0]?e:null}:function(){}),this.domElement=C,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,i){v=e*this.devicePixelRatio,y=t*this.devicePixelRatio,R=Math.floor(v/2),x=Math.floor(y/2),C.width=v,C.height=y,1!==this.devicePixelRatio&&!1!==i&&(C.style.width=e+"px",C.style.height=t+"px"),Re.set(new THREE.Vector2(-R,-x),new THREE.Vector2(R,x)),xe.set(new THREE.Vector2(-R,-x),new THREE.Vector2(R,x)),F=1,V=0,O=N=B=z=U=null},this.setClearColor=function(e,t){
L.set(e),D=void 0!==t?t:1,xe.set(new THREE.Vector2(-R,-x),new THREE.Vector2(R,x))},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){P.setTransform(1,0,0,-1,R,x),!1===xe.empty()&&(xe.intersect(Re),xe.expandByScalar(2),1>D&&P.clearRect(0|xe.min.x,0|xe.min.y,xe.max.x-xe.min.x|0,xe.max.y-xe.min.y|0),D>0&&(l(THREE.NormalBlending),h(1),E("rgba("+Math.floor(255*L.r)+","+Math.floor(255*L.g)+","+Math.floor(255*L.b)+","+D+")"),P.fillRect(0|xe.min.x,0|xe.min.y,xe.max.x-xe.min.x|0,xe.max.y-xe.min.y|0)),xe.makeEmpty())},this.render=function(e,v){if(!1==v instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear(),P.setTransform(1,0,0,-1,R,x),S.info.render.vertices=0,S.info.render.faces=0,m=A.projectScene(e,v,this.sortObjects,this.sortElements),g=m.elements,T=m.lights,H=v,_e.setRGB(0,0,0),be.setRGB(0,0,0),we.setRGB(0,0,0);for(var y=0,C=T.length;C>y;y++){var L=T[y],D=L.color;L instanceof THREE.AmbientLight?_e.add(D):L instanceof THREE.DirectionalLight?be.add(D):L instanceof THREE.PointLight&&we.add(D)}for(y=0,C=g.length;C>y;y++){var F=g[y],V=F.material;if(void 0!==V&&!1!==V.visible){if(He.makeEmpty(),F instanceof THREE.RenderableParticle){_=F,_.x*=R,_.y*=x;var L=_,D=F,U=V;h(U.opacity),l(U.blending);var z=V=F=void 0,B=void 0,N=void 0,O=void 0,I=void 0;U instanceof THREE.ParticleBasicMaterial?null===U.map?(z=D.object.scale.x,B=D.object.scale.y,z*=D.scale.x*R,B*=D.scale.y*x,He.min.set(L.x-z,L.y-B),He.max.set(L.x+z,L.y+B),!1===Re.isIntersectionBox(He)?He.makeEmpty():(E(U.color.getStyle()),P.save(),P.translate(L.x,L.y),P.rotate(-D.rotation),P.scale(z,B),P.fillRect(-1,-1,2,2),P.restore())):(N=U.map.image,O=N.width>>1,I=N.height>>1,z=D.scale.x*R,B=D.scale.y*x,F=z*O,V=B*I,He.min.set(L.x-F,L.y-V),He.max.set(L.x+F,L.y+V),!1===Re.isIntersectionBox(He)?He.makeEmpty():(P.save(),P.translate(L.x,L.y),P.rotate(-D.rotation),P.scale(z,-B),P.translate(-O,-I),P.drawImage(N,0,0),P.restore())):U instanceof THREE.ParticleCanvasMaterial&&(F=D.scale.x*R,V=D.scale.y*x,He.min.set(L.x-F,L.y-V),He.max.set(L.x+F,L.y+V),!1===Re.isIntersectionBox(He)?He.makeEmpty():(f(U.color.getStyle()),E(U.color.getStyle()),P.save(),P.translate(L.x,L.y),P.rotate(-D.rotation),P.scale(F,V),U.program(P),P.restore()))}else if(F instanceof THREE.RenderableLine){if(_=F.v1,b=F.v2,_.positionScreen.x*=R,_.positionScreen.y*=x,b.positionScreen.x*=R,b.positionScreen.y*=x,He.setFromPoints([_.positionScreen,b.positionScreen]),!0===Re.isIntersectionBox(He))if(L=_,D=b,U=F,F=V,h(F.opacity),l(F.blending),P.beginPath(),P.moveTo(L.positionScreen.x,L.positionScreen.y),P.lineTo(D.positionScreen.x,D.positionScreen.y),F instanceof THREE.LineBasicMaterial){if(c(F.linewidth),u(F.linecap),p(F.linejoin),F.vertexColors!==THREE.VertexColors)f(F.color.getStyle());else if(V=U.vertexColors[0].getStyle(),U=U.vertexColors[1].getStyle(),V===U)f(V);else{try{var k=P.createLinearGradient(L.positionScreen.x,L.positionScreen.y,D.positionScreen.x,D.positionScreen.y);k.addColorStop(0,V),k.addColorStop(1,U)}catch(oe){k=V}f(k)}P.stroke(),He.expandByScalar(2*F.linewidth)}else F instanceof THREE.LineDashedMaterial&&(c(F.linewidth),u(F.linecap),p(F.linejoin),f(F.color.getStyle()),d(F.dashSize,F.gapSize),P.stroke(),He.expandByScalar(2*F.linewidth),d(null,null))}else if(F instanceof THREE.RenderableFace3){if(_=F.v1,b=F.v2,w=F.v3,-1>_.positionScreen.z||1<_.positionScreen.z)continue;if(-1>b.positionScreen.z||1<b.positionScreen.z)continue;if(-1>w.positionScreen.z||1<w.positionScreen.z)continue;if(_.positionScreen.x*=R,_.positionScreen.y*=x,b.positionScreen.x*=R,b.positionScreen.y*=x,w.positionScreen.x*=R,w.positionScreen.y*=x,0<V.overdraw&&(s(_.positionScreen,b.positionScreen,V.overdraw),s(b.positionScreen,w.positionScreen,V.overdraw),s(w.positionScreen,_.positionScreen,V.overdraw)),He.setFromPoints([_.positionScreen,b.positionScreen,w.positionScreen]),!0===Re.isIntersectionBox(He)){L=_,D=b,U=w,S.info.render.vertices+=3,S.info.render.faces++,h(V.opacity),l(V.blending),G=L.positionScreen.x,W=L.positionScreen.y,j=D.positionScreen.x,X=D.positionScreen.y,Y=U.positionScreen.x,q=U.positionScreen.y;var z=G,B=W,N=j,O=X,I=Y,ae=q;P.beginPath(),P.moveTo(z,B),P.lineTo(N,O),P.lineTo(I,ae),P.closePath(),(V instanceof THREE.MeshLambertMaterial||V instanceof THREE.MeshPhongMaterial)&&null===V.map?(me.copy(V.color),ge.copy(V.emissive),V.vertexColors===THREE.FaceColors&&me.multiply(F.color),!1===V.wireframe&&V.shading==THREE.SmoothShading&&3==F.vertexNormalsLength?(pe.copy(_e),fe.copy(_e),Ee.copy(_e),t(F.v1.positionWorld,F.vertexNormalsModel[0],pe),t(F.v2.positionWorld,F.vertexNormalsModel[1],fe),t(F.v3.positionWorld,F.vertexNormalsModel[2],Ee),pe.multiply(me).add(ge),fe.multiply(me).add(ge),Ee.multiply(me).add(ge),de.addColors(fe,Ee).multiplyScalar(.5),Z=a(pe,fe,Ee,de),o(G,W,j,X,Y,q,0,0,1,0,0,1,Z)):(ue.copy(_e),t(F.centroidModel,F.normalModel,ue),ue.multiply(me).add(ge),!0===V.wireframe?i(ue,V.wireframeLinewidth,V.wireframeLinecap,V.wireframeLinejoin):r(ue))):V instanceof THREE.MeshBasicMaterial||V instanceof THREE.MeshLambertMaterial||V instanceof THREE.MeshPhongMaterial?null!==V.map?V.map.mapping instanceof THREE.UVMapping&&(J=F.uvs[0],n(G,W,j,X,Y,q,J[0].x,J[0].y,J[1].x,J[1].y,J[2].x,J[2].y,V.map)):null!==V.envMap?V.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Me.copy(F.vertexNormalsModelView[0]),$=.5*Me.x+.5,ee=.5*Me.y+.5,Me.copy(F.vertexNormalsModelView[1]),te=.5*Me.x+.5,ie=.5*Me.y+.5,Me.copy(F.vertexNormalsModelView[2]),re=.5*Me.x+.5,ne=.5*Me.y+.5,n(G,W,j,X,Y,q,$,ee,te,ie,re,ne,V.envMap)):(ue.copy(V.color),V.vertexColors===THREE.FaceColors&&ue.multiply(F.color),!0===V.wireframe?i(ue,V.wireframeLinewidth,V.wireframeLinecap,V.wireframeLinejoin):r(ue)):V instanceof THREE.MeshDepthMaterial?(K=H.near,Q=H.far,pe.r=pe.g=pe.b=1-M(L.positionScreen.z*L.positionScreen.w,K,Q),fe.r=fe.g=fe.b=1-M(D.positionScreen.z*D.positionScreen.w,K,Q),Ee.r=Ee.g=Ee.b=1-M(U.positionScreen.z*U.positionScreen.w,K,Q),de.addColors(fe,Ee).multiplyScalar(.5),Z=a(pe,fe,Ee,de),o(G,W,j,X,Y,q,0,0,1,0,0,1,Z)):V instanceof THREE.MeshNormalMaterial&&(L=void 0,V.shading==THREE.FlatShading?(L=F.normalModelView,ue.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),!0===V.wireframe?i(ue,V.wireframeLinewidth,V.wireframeLinecap,V.wireframeLinejoin):r(ue)):V.shading==THREE.SmoothShading&&(L=F.vertexNormalsModelView[0],pe.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),L=F.vertexNormalsModelView[1],fe.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),L=F.vertexNormalsModelView[2],Ee.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),de.addColors(fe,Ee).multiplyScalar(.5),Z=a(pe,fe,Ee,de),o(G,W,j,X,Y,q,0,0,1,0,0,1,Z)))}}xe.union(He)}}P.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",
morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix 	+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,i,r,n={};for(t=0;t<e.length;t++)for(i in r=this.clone(e[t]))n[i]=r[i];return n},clone:function(e){var t,i,r,n={};for(t in e)for(i in n[t]={},e[t])r=e[t][i],n[t][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")
},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e,t){var i=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in r.attributes){var o=r.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(i*a),o.buffer=I.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}}function i(e,t){var i=t.geometry,a=e.faces3,s=3*a.length,h=1*a.length,l=3*a.length,a=r(t,e),c=o(a),u=n(a),p=a.vertexColors?a.vertexColors:!1;if(e.__vertexArray=new Float32Array(3*s),u&&(e.__normalArray=new Float32Array(3*s)),i.hasTangents&&(e.__tangentArray=new Float32Array(4*s)),p&&(e.__colorArray=new Float32Array(3*s)),c&&(0<i.faceVertexUvs.length&&(e.__uvArray=new Float32Array(2*s)),1<i.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*s))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*s),e.__skinWeightArray=new Float32Array(4*s)),e.__faceArray=new Uint16Array(3*h),e.__lineArray=new Uint16Array(2*l),e.numMorphTargets)for(e.__morphTargetsArrays=[],i=0,c=e.numMorphTargets;c>i;i++)e.__morphTargetsArrays.push(new Float32Array(3*s));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],i=0,c=e.numMorphNormals;c>i;i++)e.__morphNormalsArrays.push(new Float32Array(3*s));if(e.__webglFaceCount=3*h,e.__webglLineCount=2*l,a.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var f in a.attributes){var E,h=a.attributes[f],l={};for(E in h)l[E]=h[E];(!l.__webglInitialized||l.createUniqueBuffers)&&(l.__webglInitialized=!0,i=1,"v2"===l.type?i=2:"v3"===l.type?i=3:"v4"===l.type?i=4:"c"===l.type&&(i=3),l.size=i,l.array=new Float32Array(s*i),l.buffer=I.createBuffer(),l.buffer.belongsToAttribute=f,h.needsUpdate=!0,l.__original=h),e.__webglCustomAttributesList.push(l)}}e.__inittedArrays=!0}function r(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function n(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function o(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function a(e){ye[e]||(I.enableVertexAttribArray(e),ye[e]=!0)}function s(){for(var e in ye)ye[e]&&(I.disableVertexAttribArray(e),ye[e]=!1)}function h(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function l(e,t){return t[0]-e[0]}function c(e,t,i){if(e.length)for(var r=0,n=e.length;n>r;r++)$=K=null,Z=J=re=ie=le=he=ne=-1,we=!0,e[r].render(t,i,Te,ve),$=K=null,Z=J=re=ie=le=he=ne=-1,we=!0}function u(e,t,i,r,n,o,a,s){var h,l,c,u;t?(l=e.length-1,u=t=-1):(l=0,t=e.length,u=1);for(var p=l;p!==t;p+=u)if(h=e[p],h.render){if(l=h.object,c=h.buffer,s)h=s;else{if(h=h[i],!h)continue;a&&X.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),X.setDepthTest(h.depthTest),X.setDepthWrite(h.depthWrite),b(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}X.setMaterialFaces(h),c instanceof THREE.BufferGeometry?X.renderBufferDirect(r,n,o,h,c,l):X.renderBuffer(r,n,o,h,c,l)}}function p(e,t,i,r,n,o,a){for(var s,h,l=0,c=e.length;c>l;l++)if(s=e[l],h=s.object,h.visible){if(a)s=a;else{if(s=s[t],!s)continue;o&&X.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),X.setDepthTest(s.depthTest),X.setDepthWrite(s.depthWrite),b(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}X.renderImmediateObject(i,r,n,s,h)}}function f(e,r){var n,o,a,s;if(void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",ke)),o=e.geometry,void 0!==o))if(o instanceof THREE.BufferGeometry){var h,l;for(h in o.attributes)l="index"===h?I.ELEMENT_ARRAY_BUFFER:I.ARRAY_BUFFER,s=o.attributes[h],void 0===s.numItems&&(s.numItems=s.array.length),s.buffer=I.createBuffer(),I.bindBuffer(l,s.buffer),I.bufferData(l,s.array,I.STATIC_DRAW)}else if(e instanceof THREE.Mesh){if(a=e.material,void 0===o.geometryGroups){h=o;var c,u,p;l={};var f=h.morphTargets.length,d=h.morphNormals.length,m=a instanceof THREE.MeshFaceMaterial;for(h.geometryGroups={},a=0,c=h.faces.length;c>a;a++)u=h.faces[a],u=m?u.materialIndex:0,void 0===l[u]&&(l[u]={hash:u,counter:0}),p=l[u].hash+"_"+l[u].counter,void 0===h.geometryGroups[p]&&(h.geometryGroups[p]={faces3:[],materialIndex:u,vertices:0,numMorphTargets:f,numMorphNormals:d}),65535<h.geometryGroups[p].vertices+3&&(l[u].counter+=1,p=l[u].hash+"_"+l[u].counter,void 0===h.geometryGroups[p]&&(h.geometryGroups[p]={faces3:[],materialIndex:u,vertices:0,numMorphTargets:f,numMorphNormals:d})),h.geometryGroups[p].faces3.push(a),h.geometryGroups[p].vertices+=3;h.geometryGroupsList=[];for(s in h.geometryGroups)h.geometryGroups[s].id=ee++,h.geometryGroupsList.push(h.geometryGroups[s])}for(n in o.geometryGroups)if(s=o.geometryGroups[n],!s.__webglVertexBuffer){if(h=s,h.__webglVertexBuffer=I.createBuffer(),h.__webglNormalBuffer=I.createBuffer(),h.__webglTangentBuffer=I.createBuffer(),h.__webglColorBuffer=I.createBuffer(),h.__webglUVBuffer=I.createBuffer(),h.__webglUV2Buffer=I.createBuffer(),h.__webglSkinIndicesBuffer=I.createBuffer(),h.__webglSkinWeightsBuffer=I.createBuffer(),h.__webglFaceBuffer=I.createBuffer(),h.__webglLineBuffer=I.createBuffer(),f=l=void 0,h.numMorphTargets)for(h.__webglMorphTargetsBuffers=[],l=0,f=h.numMorphTargets;f>l;l++)h.__webglMorphTargetsBuffers.push(I.createBuffer());if(h.numMorphNormals)for(h.__webglMorphNormalsBuffers=[],l=0,f=h.numMorphNormals;f>l;l++)h.__webglMorphNormalsBuffers.push(I.createBuffer());X.info.memory.geometries++,i(s,e),o.verticesNeedUpdate=!0,o.morphTargetsNeedUpdate=!0,o.elementsNeedUpdate=!0,o.uvsNeedUpdate=!0,o.normalsNeedUpdate=!0,o.tangentsNeedUpdate=!0,o.colorsNeedUpdate=!0}}else e instanceof THREE.Line?o.__webglVertexBuffer||(s=o,s.__webglVertexBuffer=I.createBuffer(),s.__webglColorBuffer=I.createBuffer(),s.__webglLineDistanceBuffer=I.createBuffer(),X.info.memory.geometries++,s=o,h=s.vertices.length,s.__vertexArray=new Float32Array(3*h),s.__colorArray=new Float32Array(3*h),s.__lineDistanceArray=new Float32Array(1*h),s.__webglLineCount=h,t(s,e),o.verticesNeedUpdate=!0,o.colorsNeedUpdate=!0,o.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&!o.__webglVertexBuffer&&(s=o,s.__webglVertexBuffer=I.createBuffer(),s.__webglColorBuffer=I.createBuffer(),X.info.memory.geometries++,s=o,h=s.vertices.length,s.__vertexArray=new Float32Array(3*h),s.__colorArray=new Float32Array(3*h),s.__sortArray=[],s.__webglParticleCount=h,t(s,e),o.verticesNeedUpdate=!0,o.colorsNeedUpdate=!0);if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if(o=e.geometry,o instanceof THREE.BufferGeometry)E(r.__webglObjects,o,e);else if(o instanceof THREE.Geometry)for(n in o.geometryGroups)s=o.geometryGroups[n],E(r.__webglObjects,s,e)}else e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(o=e.geometry,E(r.__webglObjects,o,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?r.__webglObjectsImmediate.push({id:null,object:e,opaque:null,transparent:null,z:0}):e instanceof THREE.Sprite?r.__webglSprites.push(e):e instanceof THREE.LensFlare&&r.__webglFlares.push(e);e.__webglActive=!0}}function E(e,t,i){e.push({id:null,buffer:t,object:i,opaque:null,transparent:null,z:0})}function d(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function m(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function g(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Line?T(t.__webglObjects,e):e instanceof THREE.Sprite?v(t.__webglSprites,e):e instanceof THREE.LensFlare?v(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&T(t.__webglObjectsImmediate,e),delete e.__webglActive}function T(e,t){for(var i=e.length-1;i>=0;i--)e[i].object===t&&e.splice(i,1)}function v(e,t){for(var i=e.length-1;i>=0;i--)e[i]===t&&e.splice(i,1)}function y(e,t,i,r,n){te=0,r.needsUpdate&&(r.program&&Ye(r),X.initMaterial(r,t,i,n),r.needsUpdate=!1),r.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(X.maxMorphTargets));var o=!1,a=r.program,s=a.uniforms,h=r.uniforms;if(a!==K&&(I.useProgram(a),K=a,o=!0),r.id!==Z&&(Z=r.id,o=!0),(o||e!==$)&&(I.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==$&&($=e)),r.skinning)if(Ve&&n.useVertexTexture){if(null!==s.boneTexture){var l=R();I.uniform1i(s.boneTexture,l),X.setTexture(n.boneTexture,l)}null!==s.boneTextureWidth&&I.uniform1i(s.boneTextureWidth,n.boneTextureWidth),null!==s.boneTextureHeight&&I.uniform1i(s.boneTextureHeight,n.boneTextureHeight)}else null!==s.boneGlobalMatrices&&I.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.boneMatrices);if(o){if(i&&r.fog&&(h.fogColor.value=i.color,i instanceof THREE.Fog?(h.fogNear.value=i.near,h.fogFar.value=i.far):i instanceof THREE.FogExp2&&(h.fogDensity.value=i.density)),r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(we){for(var c,u,p,f,E=l=0,d=0,m=Me,g=m.directional.colors,T=m.directional.positions,v=m.point.colors,y=m.point.positions,_=m.point.distances,b=m.spot.colors,w=m.spot.positions,M=m.spot.distances,A=m.spot.directions,C=m.spot.anglesCos,D=m.spot.exponents,F=m.hemi.skyColors,V=m.hemi.groundColors,U=m.hemi.positions,z=0,B=0,N=0,O=0,k=0,G=0,W=0,j=0,Y=c=0,i=f=Y=0,o=t.length;o>i;i++)c=t[i],c.onlyShadow||(u=c.color,p=c.intensity,f=c.distance,c instanceof THREE.AmbientLight?c.visible&&(X.gammaInput?(l+=u.r*u.r,E+=u.g*u.g,d+=u.b*u.b):(l+=u.r,E+=u.g,d+=u.b)):c instanceof THREE.DirectionalLight?(k+=1,c.visible&&(be.getPositionFromMatrix(c.matrixWorld),_e.getPositionFromMatrix(c.target.matrixWorld),be.sub(_e),be.normalize(),0===be.x&&0===be.y&&0===be.z||(c=3*z,T[c]=be.x,T[c+1]=be.y,T[c+2]=be.z,X.gammaInput?x(g,c,u,p*p):H(g,c,u,p),z+=1))):c instanceof THREE.PointLight?(G+=1,c.visible&&(Y=3*B,X.gammaInput?x(v,Y,u,p*p):H(v,Y,u,p),_e.getPositionFromMatrix(c.matrixWorld),y[Y]=_e.x,y[Y+1]=_e.y,y[Y+2]=_e.z,_[B]=f,B+=1)):c instanceof THREE.SpotLight?(W+=1,c.visible&&(Y=3*N,X.gammaInput?x(b,Y,u,p*p):H(b,Y,u,p),_e.getPositionFromMatrix(c.matrixWorld),w[Y]=_e.x,w[Y+1]=_e.y,w[Y+2]=_e.z,M[N]=f,be.copy(_e),_e.getPositionFromMatrix(c.target.matrixWorld),be.sub(_e),be.normalize(),A[Y]=be.x,A[Y+1]=be.y,A[Y+2]=be.z,C[N]=Math.cos(c.angle),D[N]=c.exponent,N+=1)):c instanceof THREE.HemisphereLight&&(j+=1,c.visible&&(be.getPositionFromMatrix(c.matrixWorld),be.normalize(),0===be.x&&0===be.y&&0===be.z||(f=3*O,U[f]=be.x,U[f+1]=be.y,U[f+2]=be.z,u=c.color,c=c.groundColor,X.gammaInput?(p*=p,x(F,f,u,p),x(V,f,c,p)):(H(F,f,u,p),H(V,f,c,p)),O+=1))));for(i=3*z,o=Math.max(g.length,3*k);o>i;i++)g[i]=0;for(i=3*B,o=Math.max(v.length,3*G);o>i;i++)v[i]=0;for(i=3*N,o=Math.max(b.length,3*W);o>i;i++)b[i]=0;for(i=3*O,o=Math.max(F.length,3*j);o>i;i++)F[i]=0;for(i=3*O,o=Math.max(V.length,3*j);o>i;i++)V[i]=0;m.directional.length=z,m.point.length=B,m.spot.length=N,m.hemi.length=O,m.ambient[0]=l,m.ambient[1]=E,m.ambient[2]=d,we=!1}i=Me,h.ambientLightColor.value=i.ambient,h.directionalLightColor.value=i.directional.colors,h.directionalLightDirection.value=i.directional.positions,h.pointLightColor.value=i.point.colors,h.pointLightPosition.value=i.point.positions,h.pointLightDistance.value=i.point.distances,h.spotLightColor.value=i.spot.colors,h.spotLightPosition.value=i.spot.positions,h.spotLightDistance.value=i.spot.distances,h.spotLightDirection.value=i.spot.directions,h.spotLightAngleCos.value=i.spot.anglesCos,h.spotLightExponent.value=i.spot.exponents,h.hemisphereLightSkyColor.value=i.hemi.skyColors,h.hemisphereLightGroundColor.value=i.hemi.groundColors,h.hemisphereLightDirection.value=i.hemi.positions}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){h.opacity.value=r.opacity,X.gammaInput?h.diffuse.value.copyGammaToLinear(r.color):h.diffuse.value=r.color,h.map.value=r.map,h.lightMap.value=r.lightMap,h.specularMap.value=r.specularMap,r.bumpMap&&(h.bumpMap.value=r.bumpMap,h.bumpScale.value=r.bumpScale),r.normalMap&&(h.normalMap.value=r.normalMap,h.normalScale.value.copy(r.normalScale));var q;r.map?q=r.map:r.specularMap?q=r.specularMap:r.normalMap?q=r.normalMap:r.bumpMap&&(q=r.bumpMap),void 0!==q&&(i=q.offset,q=q.repeat,h.offsetRepeat.value.set(i.x,i.y,q.x,q.y)),h.envMap.value=r.envMap,h.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,h.reflectivity.value=r.reflectivity,h.refractionRatio.value=r.refractionRatio,h.combine.value=r.combine,h.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping}if(r instanceof THREE.LineBasicMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity,h.dashSize.value=r.dashSize,h.totalSize.value=r.dashSize+r.gapSize,h.scale.value=r.scale):r instanceof THREE.ParticleBasicMaterial?(h.psColor.value=r.color,h.opacity.value=r.opacity,h.size.value=r.size,h.scale.value=L.height/2,h.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(h.shininess.value=r.shininess,X.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive),h.specular.value.copyGammaToLinear(r.specular)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive,h.specular.value=r.specular),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(X.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(h.opacity.value=r.opacity),n.receiveShadow&&!r._shadowPass&&h.shadowMatrix)for(i=q=0,o=t.length;o>i;i++)l=t[i],l.castShadow&&(l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight&&!l.shadowCascade)&&(h.shadowMap.value[q]=l.shadowMap,h.shadowMapSize.value[q]=l.shadowMapSize,h.shadowMatrix.value[q]=l.shadowMatrix,h.shadowDarkness.value[q]=l.shadowDarkness,h.shadowBias.value[q]=l.shadowBias,q++);for(t=r.uniformsList,h=0,q=t.length;q>h;h++)if(o=a.uniforms[t[h][1]])if(i=t[h][0],E=i.type,l=i.value,"i"===E)I.uniform1i(o,l);else if("f"===E)I.uniform1f(o,l);else if("v2"===E)I.uniform2f(o,l.x,l.y);else if("v3"===E)I.uniform3f(o,l.x,l.y,l.z);else if("v4"===E)I.uniform4f(o,l.x,l.y,l.z,l.w);else if("c"===E)I.uniform3f(o,l.r,l.g,l.b);else if("iv1"===E)I.uniform1iv(o,l);else if("iv"===E)I.uniform3iv(o,l);else if("fv1"===E)I.uniform1fv(o,l);else if("fv"===E)I.uniform3fv(o,l);else if("v2v"===E){for(void 0===i._array&&(i._array=new Float32Array(2*l.length)),E=0,d=l.length;d>E;E++)m=2*E,i._array[m]=l[E].x,i._array[m+1]=l[E].y;I.uniform2fv(o,i._array)}else if("v3v"===E){for(void 0===i._array&&(i._array=new Float32Array(3*l.length)),E=0,d=l.length;d>E;E++)m=3*E,i._array[m]=l[E].x,i._array[m+1]=l[E].y,i._array[m+2]=l[E].z;I.uniform3fv(o,i._array)}else if("v4v"===E){for(void 0===i._array&&(i._array=new Float32Array(4*l.length)),E=0,d=l.length;d>E;E++)m=4*E,i._array[m]=l[E].x,i._array[m+1]=l[E].y,i._array[m+2]=l[E].z,i._array[m+3]=l[E].w;I.uniform4fv(o,i._array)}else if("m4"===E)void 0===i._array&&(i._array=new Float32Array(16)),l.flattenToArray(i._array),I.uniformMatrix4fv(o,!1,i._array);else if("m4v"===E){for(void 0===i._array&&(i._array=new Float32Array(16*l.length)),E=0,d=l.length;d>E;E++)l[E].flattenToArrayOffset(i._array,16*E);I.uniformMatrix4fv(o,!1,i._array)}else if("t"===E){if(m=l,l=R(),I.uniform1i(o,l),m)if(m.image instanceof Array&&6===m.image.length){if(i=m,o=l,6===i.image.length)if(i.needsUpdate){for(i.image.__webglTextureCube||(i.addEventListener("dispose",Ge),i.image.__webglTextureCube=I.createTexture(),X.info.memory.textures++),I.activeTexture(I.TEXTURE0+o),I.bindTexture(I.TEXTURE_CUBE_MAP,i.image.__webglTextureCube),I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,i.flipY),o=i instanceof THREE.CompressedTexture,l=[],E=0;6>E;E++)X.autoScaleCubemaps&&!o?(d=l,m=E,g=i.image[E],v=Le,g.width<=v&&g.height<=v||(y=Math.max(g.width,g.height),T=Math.floor(g.width*v/y),v=Math.floor(g.height*v/y),y=document.createElement("canvas"),y.width=T,y.height=v,y.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,T,v),g=y),d[m]=g):l[E]=i.image[E];for(E=l[0],d=0===(E.width&E.width-1)&&0===(E.height&E.height-1),m=P(i.format),g=P(i.type),S(I.TEXTURE_CUBE_MAP,i,d),E=0;6>E;E++)if(o)for(v=l[E].mipmaps,y=0,_=v.length;_>y;y++)T=v[y],i.format!==THREE.RGBAFormat?I.compressedTexImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+E,y,m,T.width,T.height,0,T.data):I.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+E,y,m,T.width,T.height,0,m,g,T.data);else I.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+E,0,m,m,g,l[E]);i.generateMipmaps&&d&&I.generateMipmap(I.TEXTURE_CUBE_MAP),i.needsUpdate=!1,i.onUpdate&&i.onUpdate()}else I.activeTexture(I.TEXTURE0+o),I.bindTexture(I.TEXTURE_CUBE_MAP,i.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(i=m,I.activeTexture(I.TEXTURE0+l),I.bindTexture(I.TEXTURE_CUBE_MAP,i.__webglTexture)):X.setTexture(m,l)}else if("tv"===E){for(void 0===i._array&&(i._array=[]),E=0,d=i.value.length;d>E;E++)i._array[E]=R();for(I.uniform1iv(o,i._array),E=0,d=i.value.length;d>E;E++)m=i.value[E],l=i._array[E],m&&X.setTexture(m,l)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+E);(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==s.cameraPosition&&(_e.getPositionFromMatrix(e.matrixWorld),I.uniform3f(s.cameraPosition,_e.x,_e.y,_e.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==s.viewMatrix&&I.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return I.uniformMatrix4fv(s.modelViewMatrix,!1,n._modelViewMatrix.elements),s.normalMatrix&&I.uniformMatrix3fv(s.normalMatrix,!1,n._normalMatrix.elements),null!==s.modelMatrix&&I.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),a}function R(){var e=te;return e>=Ce&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Ce),te+=1,e}function x(e,t,i,r){e[t]=i.r*i.r*r,e[t+1]=i.g*i.g*r,e[t+2]=i.b*i.b*r}function H(e,t,i,r){e[t]=i.r*r,e[t+1]=i.g*r,e[t+2]=i.b*r}function _(e){e!==fe&&(I.lineWidth(e),fe=e)}function b(e,t,i){ce!==e&&(e?I.enable(I.POLYGON_OFFSET_FILL):I.disable(I.POLYGON_OFFSET_FILL),ce=e),!e||ue===t&&pe===i||(I.polygonOffset(t,i),ue=t,pe=i)}function w(e){for(var e=e.split("\n"),t=0,i=e.length;i>t;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function M(e,t){var i;return"fragment"===e?i=I.createShader(I.FRAGMENT_SHADER):"vertex"===e&&(i=I.createShader(I.VERTEX_SHADER)),I.shaderSource(i,t),I.compileShader(i),I.getShaderParameter(i,I.COMPILE_STATUS)?i:(console.error(I.getShaderInfoLog(i)),console.error(w(t)),null)}function S(e,t,i){i?(I.texParameteri(e,I.TEXTURE_WRAP_S,P(t.wrapS)),I.texParameteri(e,I.TEXTURE_WRAP_T,P(t.wrapT)),I.texParameteri(e,I.TEXTURE_MAG_FILTER,P(t.magFilter)),I.texParameteri(e,I.TEXTURE_MIN_FILTER,P(t.minFilter))):(I.texParameteri(e,I.TEXTURE_WRAP_S,I.CLAMP_TO_EDGE),I.texParameteri(e,I.TEXTURE_WRAP_T,I.CLAMP_TO_EDGE),I.texParameteri(e,I.TEXTURE_MAG_FILTER,C(t.magFilter)),I.texParameteri(e,I.TEXTURE_MIN_FILTER,C(t.minFilter))),W&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(I.texParameterf(e,W.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,De)),t.__oldAnisotropy=t.anisotropy)}function A(e,t){I.bindRenderbuffer(I.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(I.renderbufferStorage(I.RENDERBUFFER,I.DEPTH_COMPONENT16,t.width,t.height),I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_ATTACHMENT,I.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(I.renderbufferStorage(I.RENDERBUFFER,I.DEPTH_STENCIL,t.width,t.height),I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_STENCIL_ATTACHMENT,I.RENDERBUFFER,e)):I.renderbufferStorage(I.RENDERBUFFER,I.RGBA4,t.width,t.height)}function C(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?I.NEAREST:I.LINEAR}function P(e){if(e===THREE.RepeatWrapping)return I.REPEAT;if(e===THREE.ClampToEdgeWrapping)return I.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return I.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return I.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return I.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return I.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return I.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return I.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return I.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return I.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return I.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return I.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return I.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return I.BYTE;if(e===THREE.ShortType)return I.SHORT;if(e===THREE.UnsignedShortType)return I.UNSIGNED_SHORT;if(e===THREE.IntType)return I.INT;if(e===THREE.UnsignedIntType)return I.UNSIGNED_INT;if(e===THREE.FloatType)return I.FLOAT;if(e===THREE.AlphaFormat)return I.ALPHA;if(e===THREE.RGBFormat)return I.RGB;if(e===THREE.RGBAFormat)return I.RGBA;if(e===THREE.LuminanceFormat)return I.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return I.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return I.FUNC_ADD;if(e===THREE.SubtractEquation)return I.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return I.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return I.ZERO;if(e===THREE.OneFactor)return I.ONE;if(e===THREE.SrcColorFactor)return I.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return I.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return I.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return I.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return I.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return I.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return I.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return I.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return I.SRC_ALPHA_SATURATE;if(void 0!==j){if(e===THREE.RGB_S3TC_DXT1_Format)return j.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return j.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return j.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return j.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var e=e||{},L=void 0!==e.canvas?e.canvas:document.createElement("canvas"),D=void 0!==e.precision?e.precision:"highp",F=void 0!==e.alpha?e.alpha:!0,V=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,U=void 0!==e.antialias?e.antialias:!1,z=void 0!==e.stencil?e.stencil:!0,B=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,N=new THREE.Color(0),O=0;this.domElement=L,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var I,k,G,W,j,X=this,Y=[],q=0,K=null,Q=null,Z=-1,J=null,$=null,ee=0,te=0,ie=-1,re=-1,ne=-1,oe=-1,ae=-1,se=-1,he=-1,le=-1,ce=null,ue=null,pe=null,fe=null,Ee=0,de=0,me=0,ge=0,Te=0,ve=0,ye={},Re=new THREE.Frustum,xe=new THREE.Matrix4,He=new THREE.Matrix4,_e=new THREE.Vector3,be=new THREE.Vector3,we=!0,Me={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{var Se={alpha:F,premultipliedAlpha:V,antialias:U,stencil:z,preserveDrawingBuffer:B};if(I=L.getContext("webgl",Se)||L.getContext("experimental-webgl",Se),null===I)throw"Error creating WebGL context."}catch(Ae){console.error(Ae)}k=I.getExtension("OES_texture_float"),I.getExtension("OES_texture_float_linear"),G=I.getExtension("OES_standard_derivatives"),W=I.getExtension("EXT_texture_filter_anisotropic")||I.getExtension("MOZ_EXT_texture_filter_anisotropic")||I.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),j=I.getExtension("WEBGL_compressed_texture_s3tc")||I.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||I.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),k||console.log("THREE.WebGLRenderer: Float textures not supported."),G||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),W||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),j||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===I.getShaderPrecisionFormat&&(I.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),I.clearColor(0,0,0,1),I.clearDepth(1),I.clearStencil(0),I.enable(I.DEPTH_TEST),I.depthFunc(I.LEQUAL),I.frontFace(I.CCW),I.cullFace(I.BACK),I.enable(I.CULL_FACE),I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.SRC_ALPHA,I.ONE_MINUS_SRC_ALPHA),I.clearColor(N.r,N.g,N.b,O),this.context=I;var Ce=I.getParameter(I.MAX_TEXTURE_IMAGE_UNITS),Pe=I.getParameter(I.MAX_VERTEX_TEXTURE_IMAGE_UNITS);I.getParameter(I.MAX_TEXTURE_SIZE);var Le=I.getParameter(I.MAX_CUBE_MAP_TEXTURE_SIZE),De=W?I.getParameter(W.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Fe=Pe>0,Ve=Fe&&k;j&&I.getParameter(I.COMPRESSED_TEXTURE_FORMATS);var Ue=I.getShaderPrecisionFormat(I.VERTEX_SHADER,I.HIGH_FLOAT),ze=I.getShaderPrecisionFormat(I.VERTEX_SHADER,I.MEDIUM_FLOAT);I.getShaderPrecisionFormat(I.VERTEX_SHADER,I.LOW_FLOAT);var Be=I.getShaderPrecisionFormat(I.FRAGMENT_SHADER,I.HIGH_FLOAT),Ne=I.getShaderPrecisionFormat(I.FRAGMENT_SHADER,I.MEDIUM_FLOAT);I.getShaderPrecisionFormat(I.FRAGMENT_SHADER,I.LOW_FLOAT),I.getShaderPrecisionFormat(I.VERTEX_SHADER,I.HIGH_INT),I.getShaderPrecisionFormat(I.VERTEX_SHADER,I.MEDIUM_INT),I.getShaderPrecisionFormat(I.VERTEX_SHADER,I.LOW_INT),I.getShaderPrecisionFormat(I.FRAGMENT_SHADER,I.HIGH_INT),I.getShaderPrecisionFormat(I.FRAGMENT_SHADER,I.MEDIUM_INT),I.getShaderPrecisionFormat(I.FRAGMENT_SHADER,I.LOW_INT);var Oe=0<Ue.precision&&0<Be.precision,Ie=0<ze.precision&&0<Ne.precision;"highp"===D&&!Oe&&(Ie?(D="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(D="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"===D&&!Ie&&(D="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return I},this.supportsVertexTextures=function(){return Fe},this.supportsFloatTextures=function(){return k},this.supportsStandardDerivatives=function(){return G},this.supportsCompressedTextureS3TC=function(){return j},this.getMaxAnisotropy=function(){return De},this.getPrecision=function(){return D},this.setSize=function(e,t,i){L.width=e*this.devicePixelRatio,L.height=t*this.devicePixelRatio,1!==this.devicePixelRatio&&!1!==i&&(L.style.width=e+"px",L.style.height=t+"px"),this.setViewport(0,0,L.width,L.height)},this.setViewport=function(e,t,i,r){Ee=void 0!==e?e:0,de=void 0!==t?t:0,me=void 0!==i?i:L.width,ge=void 0!==r?r:L.height,I.viewport(Ee,de,me,ge)},this.setScissor=function(e,t,i,r){I.scissor(e,t,i,r)},this.enableScissorTest=function(e){e?I.enable(I.SCISSOR_TEST):I.disable(I.SCISSOR_TEST)},this.setClearColor=function(e,t){N.set(e),O=void 0!==t?t:1,I.clearColor(N.r,N.g,N.b,O)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return N},this.getClearAlpha=function(){return O},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=I.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=I.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=I.STENCIL_BUFFER_BIT),I.clear(r)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){K=null,Z=J=le=he=ne=-1,we=!0,re=ie=-1,this.shadowMapPlugin.update(e,t)};var ke=function(e){if(e=e.target,e.removeEventListener("dispose",ke),e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t,i=e.attributes;for(t in i)void 0!==i[t].buffer&&I.deleteBuffer(i[t].buffer);X.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(i in e.geometryGroups){if(t=e.geometryGroups[i],void 0!==t.numMorphTargets)for(var r=0,n=t.numMorphTargets;n>r;r++)I.deleteBuffer(t.__webglMorphTargetsBuffers[r]);if(void 0!==t.numMorphNormals)for(r=0,n=t.numMorphNormals;n>r;r++)I.deleteBuffer(t.__webglMorphNormalsBuffers[r]);Xe(t)}else Xe(e)},Ge=function(e){e=e.target,e.removeEventListener("dispose",Ge),e.image&&e.image.__webglTextureCube?I.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,I.deleteTexture(e.__webglTexture)),X.info.memory.textures--},We=function(e){if(e=e.target,e.removeEventListener("dispose",We),e&&e.__webglTexture)if(I.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)I.deleteFramebuffer(e.__webglFramebuffer[t]),I.deleteRenderbuffer(e.__webglRenderbuffer[t]);else I.deleteFramebuffer(e.__webglFramebuffer),I.deleteRenderbuffer(e.__webglRenderbuffer);X.info.memory.textures--},je=function(e){e=e.target,e.removeEventListener("dispose",je),Ye(e)},Xe=function(e){if(void 0!==e.__webglVertexBuffer&&I.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&I.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&I.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&I.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&I.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&I.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&I.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&I.deleteBuffer(e.__webglSkinWeightsBuffer),
void 0!==e.__webglFaceBuffer&&I.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&I.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&I.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)I.deleteBuffer(e.__webglCustomAttributesList[t].buffer);X.info.memory.geometries--},Ye=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var i,r,n=!1,e=0;for(i=Y.length;i>e;e++)if(r=Y[e],r.program===t){r.usedTimes--,0===r.usedTimes&&(n=!0);break}if(!0===n){for(n=[],e=0,i=Y.length;i>e;e++)r=Y[e],r.program!==t&&n.push(r);Y=n,I.deleteProgram(t),X.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,i){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=I.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=I.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=I.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=I.createBuffer()),e.hasPositions&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,e.positionArray,I.DYNAMIC_DRAW),I.enableVertexAttribArray(t.attributes.position),I.vertexAttribPointer(t.attributes.position,3,I.FLOAT,!1,0,0)),e.hasNormals){if(I.bindBuffer(I.ARRAY_BUFFER,e.__webglNormalBuffer),i.shading===THREE.FlatShading){var r,n,o,a,s,h,l,c,u,p,f,E=3*e.count;for(f=0;E>f;f+=9)p=e.normalArray,r=p[f],n=p[f+1],o=p[f+2],a=p[f+3],h=p[f+4],c=p[f+5],s=p[f+6],l=p[f+7],u=p[f+8],r=(r+a+s)/3,n=(n+h+l)/3,o=(o+c+u)/3,p[f]=r,p[f+1]=n,p[f+2]=o,p[f+3]=r,p[f+4]=n,p[f+5]=o,p[f+6]=r,p[f+7]=n,p[f+8]=o}I.bufferData(I.ARRAY_BUFFER,e.normalArray,I.DYNAMIC_DRAW),I.enableVertexAttribArray(t.attributes.normal),I.vertexAttribPointer(t.attributes.normal,3,I.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglUvBuffer),I.bufferData(I.ARRAY_BUFFER,e.uvArray,I.DYNAMIC_DRAW),I.enableVertexAttribArray(t.attributes.uv),I.vertexAttribPointer(t.attributes.uv,2,I.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,e.colorArray,I.DYNAMIC_DRAW),I.enableVertexAttribArray(t.attributes.color),I.vertexAttribPointer(t.attributes.color,3,I.FLOAT,!1,0,0)),I.drawArrays(I.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,n,o){if(!1!==r.visible){var h,l,c,u;if(h=y(e,t,i,r,o),t=h.attributes,e=n.attributes,i=!1,h=16777215*n.id+2*h.id+(r.wireframe?1:0),h!==J&&(J=h,i=!0),i&&s(),o instanceof THREE.Mesh)if(o=e.index){n=n.offsets,1<n.length&&(i=!0);for(var p=0,f=n.length;f>p;p++){var E=n[p].index;if(i){for(l in t)c=t[l],h=e[l],c>=0&&(h?(u=h.itemSize,I.bindBuffer(I.ARRAY_BUFFER,h.buffer),a(c),I.vertexAttribPointer(c,u,I.FLOAT,!1,0,4*E*u)):r.defaultAttributeValues&&(2===r.defaultAttributeValues[l].length?I.vertexAttrib2fv(c,r.defaultAttributeValues[l]):3===r.defaultAttributeValues[l].length&&I.vertexAttrib3fv(c,r.defaultAttributeValues[l])));I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,o.buffer)}I.drawElements(I.TRIANGLES,n[p].count,I.UNSIGNED_SHORT,2*n[p].start),X.info.render.calls++,X.info.render.vertices+=n[p].count,X.info.render.faces+=n[p].count/3}}else{if(i)for(l in t)"index"!==l&&(c=t[l],h=e[l],c>=0&&(h?(u=h.itemSize,I.bindBuffer(I.ARRAY_BUFFER,h.buffer),a(c),I.vertexAttribPointer(c,u,I.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[l]&&(2===r.defaultAttributeValues[l].length?I.vertexAttrib2fv(c,r.defaultAttributeValues[l]):3===r.defaultAttributeValues[l].length&&I.vertexAttrib3fv(c,r.defaultAttributeValues[l]))));r=n.attributes.position,I.drawArrays(I.TRIANGLES,0,r.numItems/3),X.info.render.calls++,X.info.render.vertices+=r.numItems/3,X.info.render.faces+=r.numItems/3/3}else if(o instanceof THREE.ParticleSystem){if(i){for(l in t)c=t[l],h=e[l],c>=0&&(h?(u=h.itemSize,I.bindBuffer(I.ARRAY_BUFFER,h.buffer),a(c),I.vertexAttribPointer(c,u,I.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[l]&&(2===r.defaultAttributeValues[l].length?I.vertexAttrib2fv(c,r.defaultAttributeValues[l]):3===r.defaultAttributeValues[l].length&&I.vertexAttrib3fv(c,r.defaultAttributeValues[l])));r=e.position,I.drawArrays(I.POINTS,0,r.numItems/3),X.info.render.calls++,X.info.render.points+=r.numItems/3}}else if(o instanceof THREE.Line&&i){for(l in t)c=t[l],h=e[l],c>=0&&(h?(u=h.itemSize,I.bindBuffer(I.ARRAY_BUFFER,h.buffer),a(c),I.vertexAttribPointer(c,u,I.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[l]&&(2===r.defaultAttributeValues[l].length?I.vertexAttrib2fv(c,r.defaultAttributeValues[l]):3===r.defaultAttributeValues[l].length&&I.vertexAttrib3fv(c,r.defaultAttributeValues[l])));l=o.type===THREE.LineStrip?I.LINE_STRIP:I.LINES,_(r.linewidth),r=e.position,I.drawArrays(l,0,r.numItems/3),X.info.render.calls++,X.info.render.points+=r.numItems}}},this.renderBuffer=function(e,t,i,r,n,o){if(!1!==r.visible){var h,c,i=y(e,t,i,r,o),e=i.attributes,t=!1,i=16777215*n.id+2*i.id+(r.wireframe?1:0);if(i!==J&&(J=i,t=!0),t&&s(),!r.morphTargets&&0<=e.position)t&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglVertexBuffer),a(e.position),I.vertexAttribPointer(e.position,3,I.FLOAT,!1,0,0));else if(o.morphTargetBase){if(i=r.program.attributes,-1!==o.morphTargetBase&&0<=i.position?(I.bindBuffer(I.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),a(i.position),I.vertexAttribPointer(i.position,3,I.FLOAT,!1,0,0)):0<=i.position&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglVertexBuffer),a(i.position),I.vertexAttribPointer(i.position,3,I.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){var u=0;for(c=o.morphTargetForcedOrder,h=o.morphTargetInfluences;u<r.numSupportedMorphTargets&&u<c.length;)0<=i["morphTarget"+u]&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[c[u]]),a(i["morphTarget"+u]),I.vertexAttribPointer(i["morphTarget"+u],3,I.FLOAT,!1,0,0)),0<=i["morphNormal"+u]&&r.morphNormals&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[c[u]]),a(i["morphNormal"+u]),I.vertexAttribPointer(i["morphNormal"+u],3,I.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=h[c[u]],u++}else{c=[],h=o.morphTargetInfluences;var p,f=h.length;for(p=0;f>p;p++)u=h[p],u>0&&c.push([u,p]);for(c.length>r.numSupportedMorphTargets?(c.sort(l),c.length=r.numSupportedMorphTargets):c.length>r.numSupportedMorphNormals?c.sort(l):0===c.length&&c.push([0,0]),u=0;u<r.numSupportedMorphTargets;)c[u]?(p=c[u][1],0<=i["morphTarget"+u]&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[p]),a(i["morphTarget"+u]),I.vertexAttribPointer(i["morphTarget"+u],3,I.FLOAT,!1,0,0)),0<=i["morphNormal"+u]&&r.morphNormals&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[p]),a(i["morphNormal"+u]),I.vertexAttribPointer(i["morphNormal"+u],3,I.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=h[p]):o.__webglMorphTargetInfluences[u]=0,u++}null!==r.program.uniforms.morphTargetInfluences&&I.uniform1fv(r.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(t){if(n.__webglCustomAttributesList)for(h=0,c=n.__webglCustomAttributesList.length;c>h;h++)i=n.__webglCustomAttributesList[h],0<=e[i.buffer.belongsToAttribute]&&(I.bindBuffer(I.ARRAY_BUFFER,i.buffer),a(e[i.buffer.belongsToAttribute]),I.vertexAttribPointer(e[i.buffer.belongsToAttribute],i.size,I.FLOAT,!1,0,0));0<=e.color&&(0<o.geometry.colors.length||0<o.geometry.faces.length?(I.bindBuffer(I.ARRAY_BUFFER,n.__webglColorBuffer),a(e.color),I.vertexAttribPointer(e.color,3,I.FLOAT,!1,0,0)):r.defaultAttributeValues&&I.vertexAttrib3fv(e.color,r.defaultAttributeValues.color)),0<=e.normal&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglNormalBuffer),a(e.normal),I.vertexAttribPointer(e.normal,3,I.FLOAT,!1,0,0)),0<=e.tangent&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglTangentBuffer),a(e.tangent),I.vertexAttribPointer(e.tangent,4,I.FLOAT,!1,0,0)),0<=e.uv&&(o.geometry.faceVertexUvs[0]?(I.bindBuffer(I.ARRAY_BUFFER,n.__webglUVBuffer),a(e.uv),I.vertexAttribPointer(e.uv,2,I.FLOAT,!1,0,0)):r.defaultAttributeValues&&I.vertexAttrib2fv(e.uv,r.defaultAttributeValues.uv)),0<=e.uv2&&(o.geometry.faceVertexUvs[1]?(I.bindBuffer(I.ARRAY_BUFFER,n.__webglUV2Buffer),a(e.uv2),I.vertexAttribPointer(e.uv2,2,I.FLOAT,!1,0,0)):r.defaultAttributeValues&&I.vertexAttrib2fv(e.uv2,r.defaultAttributeValues.uv2)),r.skinning&&0<=e.skinIndex&&0<=e.skinWeight&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),a(e.skinIndex),I.vertexAttribPointer(e.skinIndex,4,I.FLOAT,!1,0,0),I.bindBuffer(I.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),a(e.skinWeight),I.vertexAttribPointer(e.skinWeight,4,I.FLOAT,!1,0,0)),0<=e.lineDistance&&(I.bindBuffer(I.ARRAY_BUFFER,n.__webglLineDistanceBuffer),a(e.lineDistance),I.vertexAttribPointer(e.lineDistance,1,I.FLOAT,!1,0,0))}o instanceof THREE.Mesh?(r.wireframe?(_(r.wireframeLinewidth),t&&I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),I.drawElements(I.LINES,n.__webglLineCount,I.UNSIGNED_SHORT,0)):(t&&I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),I.drawElements(I.TRIANGLES,n.__webglFaceCount,I.UNSIGNED_SHORT,0)),X.info.render.calls++,X.info.render.vertices+=n.__webglFaceCount,X.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?I.LINE_STRIP:I.LINES,_(r.linewidth),I.drawArrays(o,0,n.__webglLineCount),X.info.render.calls++):o instanceof THREE.ParticleSystem&&(I.drawArrays(I.POINTS,0,n.__webglParticleCount),X.info.render.calls++,X.info.render.points+=n.__webglParticleCount)}},this.render=function(e,t,i,r){if(!1==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var n,o,a,s,l=e.__lights,f=e.fog;for(Z=-1,we=!0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),xe.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Re.setFromMatrix(xe),this.autoUpdateObjects&&this.initWebGLObjects(e),c(this.renderPluginsPre,e,t),X.info.render.calls=0,X.info.render.vertices=0,X.info.render.faces=0,X.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),s=e.__webglObjects,r=0,n=s.length;n>r;r++)if(o=s[r],a=o.object,o.id=r,o.render=!1,a.visible&&(!(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem)||!a.frustumCulled||Re.intersectsObject(a))){var E=a;E._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,E.matrixWorld),E._normalMatrix.getNormalMatrix(E._modelViewMatrix);var E=o,d=E.buffer,m=void 0,g=m=void 0,g=E.object.material;g instanceof THREE.MeshFaceMaterial?(m=d.materialIndex,m=g.materials[m],m.transparent?(E.transparent=m,E.opaque=null):(E.opaque=m,E.transparent=null)):(m=g)&&(m.transparent?(E.transparent=m,E.opaque=null):(E.opaque=m,E.transparent=null)),o.render=!0,!0===this.sortObjects&&(null!==a.renderDepth?o.z=a.renderDepth:(_e.getPositionFromMatrix(a.matrixWorld),_e.applyProjection(xe),o.z=_e.z))}for(this.sortObjects&&s.sort(h),s=e.__webglObjectsImmediate,r=0,n=s.length;n>r;r++)o=s[r],a=o.object,a.visible&&(a._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix),a=o.object.material,a.transparent?(o.transparent=a,o.opaque=null):(o.opaque=a,o.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),b(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),u(e.__webglObjects,!1,"",t,l,f,!0,r),p(e.__webglObjectsImmediate,"",t,l,f,!1,r)):(r=null,this.setBlending(THREE.NoBlending),u(e.__webglObjects,!0,"opaque",t,l,f,!1,r),p(e.__webglObjectsImmediate,"opaque",t,l,f,!1,r),u(e.__webglObjects,!1,"transparent",t,l,f,!0,r),p(e.__webglObjectsImmediate,"transparent",t,l,f,!0,r)),c(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(i instanceof THREE.WebGLRenderTargetCube?(I.bindTexture(I.TEXTURE_CUBE_MAP,i.__webglTexture),I.generateMipmap(I.TEXTURE_CUBE_MAP),I.bindTexture(I.TEXTURE_CUBE_MAP,null)):(I.bindTexture(I.TEXTURE_2D,i.__webglTexture),I.generateMipmap(I.TEXTURE_2D),I.bindTexture(I.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,i,r,n){var o=y(e,t,i,r,n);J=-1,X.setMaterialFaces(r),n.immediateRenderCallback?n.immediateRenderCallback(o,I,Re):n.render(function(e){X.renderBufferImmediate(e,o,r)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)f(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)g(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,a=e.__webglObjects.length;a>t;t++){var s=e.__webglObjects[t].object;void 0===s.__webglInit&&(void 0!==s.__webglActive&&g(s,e),f(s,e));var h=s,c=h.geometry,u=void 0,p=void 0,E=void 0;if(c instanceof THREE.BufferGeometry){var T=I.DYNAMIC_DRAW,v=!c.dynamic,y=c.attributes,R=void 0,x=void 0;for(R in y)x=y[R],x.needsUpdate&&("index"===R?(I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,x.buffer),I.bufferData(I.ELEMENT_ARRAY_BUFFER,x.array,T)):(I.bindBuffer(I.ARRAY_BUFFER,x.buffer),I.bufferData(I.ARRAY_BUFFER,x.array,T)),x.needsUpdate=!1),v&&!x.dynamic&&(x.array=null)}else if(h instanceof THREE.Mesh){for(var H=0,_=c.geometryGroupsList.length;_>H;H++)if(u=c.geometryGroupsList[H],E=r(h,u),c.buffersNeedUpdate&&i(u,h),p=E.attributes&&d(E),c.verticesNeedUpdate||c.morphTargetsNeedUpdate||c.elementsNeedUpdate||c.uvsNeedUpdate||c.normalsNeedUpdate||c.colorsNeedUpdate||c.tangentsNeedUpdate||p){var b=u,w=h,M=I.DYNAMIC_DRAW,S=!c.dynamic,A=E;if(b.__inittedArrays){var C=n(A),P=A.vertexColors?A.vertexColors:!1,L=o(A),D=C===THREE.SmoothShading,F=void 0,V=void 0,U=void 0,z=void 0,B=void 0,N=void 0,O=void 0,k=void 0,G=void 0,W=void 0,j=void 0,X=void 0,Y=void 0,q=void 0,K=void 0,Q=void 0,Z=void 0,J=void 0,$=void 0,ee=void 0,te=void 0,ie=void 0,re=void 0,ne=void 0,oe=void 0,ae=void 0,se=void 0,he=void 0,le=void 0,ce=void 0,ue=void 0,pe=void 0,fe=void 0,Ee=void 0,de=void 0,me=void 0,ge=void 0,Te=void 0,ve=void 0,ye=void 0,Re=0,be=0,we=0,Me=0,Se=0,Ae=0,Ce=0,Pe=0,Le=0,De=0,Fe=0,Ve=0,Ue=void 0,ze=b.__vertexArray,Be=b.__uvArray,Ne=b.__uv2Array,Oe=b.__normalArray,Ie=b.__tangentArray,ke=b.__colorArray,Ge=b.__skinIndexArray,We=b.__skinWeightArray,je=b.__morphTargetsArrays,Xe=b.__morphNormalsArrays,Ye=b.__webglCustomAttributesList,qe=void 0,Ke=b.__faceArray,Qe=b.__lineArray,Ze=w.geometry,Je=Ze.elementsNeedUpdate,$e=Ze.uvsNeedUpdate,et=Ze.normalsNeedUpdate,tt=Ze.tangentsNeedUpdate,it=Ze.colorsNeedUpdate,rt=Ze.morphTargetsNeedUpdate,nt=Ze.vertices,ot=b.faces3,at=Ze.faces,st=Ze.faceVertexUvs[0],ht=Ze.faceVertexUvs[1],lt=Ze.skinIndices,ct=Ze.skinWeights,ut=Ze.morphTargets,pt=Ze.morphNormals;if(Ze.verticesNeedUpdate){for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],X=nt[z.a],Y=nt[z.b],q=nt[z.c],ze[be]=X.x,ze[be+1]=X.y,ze[be+2]=X.z,ze[be+3]=Y.x,ze[be+4]=Y.y,ze[be+5]=Y.z,ze[be+6]=q.x,ze[be+7]=q.y,ze[be+8]=q.z,be+=9;I.bindBuffer(I.ARRAY_BUFFER,b.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,ze,M)}if(rt)for(de=0,me=ut.length;me>de;de++){for(F=Fe=0,V=ot.length;V>F;F++)ve=ot[F],z=at[ve],X=ut[de].vertices[z.a],Y=ut[de].vertices[z.b],q=ut[de].vertices[z.c],ge=je[de],ge[Fe]=X.x,ge[Fe+1]=X.y,ge[Fe+2]=X.z,ge[Fe+3]=Y.x,ge[Fe+4]=Y.y,ge[Fe+5]=Y.z,ge[Fe+6]=q.x,ge[Fe+7]=q.y,ge[Fe+8]=q.z,A.morphNormals&&(D?(ye=pt[de].vertexNormals[ve],J=ye.a,$=ye.b,ee=ye.c):ee=$=J=pt[de].faceNormals[ve],Te=Xe[de],Te[Fe]=J.x,Te[Fe+1]=J.y,Te[Fe+2]=J.z,Te[Fe+3]=$.x,Te[Fe+4]=$.y,Te[Fe+5]=$.z,Te[Fe+6]=ee.x,Te[Fe+7]=ee.y,Te[Fe+8]=ee.z),Fe+=9;I.bindBuffer(I.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[de]),I.bufferData(I.ARRAY_BUFFER,je[de],M),A.morphNormals&&(I.bindBuffer(I.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[de]),I.bufferData(I.ARRAY_BUFFER,Xe[de],M))}if(ct.length){for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],ne=ct[z.a],oe=ct[z.b],ae=ct[z.c],We[De]=ne.x,We[De+1]=ne.y,We[De+2]=ne.z,We[De+3]=ne.w,We[De+4]=oe.x,We[De+5]=oe.y,We[De+6]=oe.z,We[De+7]=oe.w,We[De+8]=ae.x,We[De+9]=ae.y,We[De+10]=ae.z,We[De+11]=ae.w,se=lt[z.a],he=lt[z.b],le=lt[z.c],Ge[De]=se.x,Ge[De+1]=se.y,Ge[De+2]=se.z,Ge[De+3]=se.w,Ge[De+4]=he.x,Ge[De+5]=he.y,Ge[De+6]=he.z,Ge[De+7]=he.w,Ge[De+8]=le.x,Ge[De+9]=le.y,Ge[De+10]=le.z,Ge[De+11]=le.w,De+=12;De>0&&(I.bindBuffer(I.ARRAY_BUFFER,b.__webglSkinIndicesBuffer),I.bufferData(I.ARRAY_BUFFER,Ge,M),I.bindBuffer(I.ARRAY_BUFFER,b.__webglSkinWeightsBuffer),I.bufferData(I.ARRAY_BUFFER,We,M))}if(it&&P){for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],O=z.vertexColors,k=z.color,3===O.length&&P===THREE.VertexColors?(te=O[0],ie=O[1],re=O[2]):re=ie=te=k,ke[Le]=te.r,ke[Le+1]=te.g,ke[Le+2]=te.b,ke[Le+3]=ie.r,ke[Le+4]=ie.g,ke[Le+5]=ie.b,ke[Le+6]=re.r,ke[Le+7]=re.g,ke[Le+8]=re.b,Le+=9;Le>0&&(I.bindBuffer(I.ARRAY_BUFFER,b.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,ke,M))}if(tt&&Ze.hasTangents){for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],G=z.vertexTangents,K=G[0],Q=G[1],Z=G[2],Ie[Ce]=K.x,Ie[Ce+1]=K.y,Ie[Ce+2]=K.z,Ie[Ce+3]=K.w,Ie[Ce+4]=Q.x,Ie[Ce+5]=Q.y,Ie[Ce+6]=Q.z,Ie[Ce+7]=Q.w,Ie[Ce+8]=Z.x,Ie[Ce+9]=Z.y,Ie[Ce+10]=Z.z,Ie[Ce+11]=Z.w,Ce+=12;I.bindBuffer(I.ARRAY_BUFFER,b.__webglTangentBuffer),I.bufferData(I.ARRAY_BUFFER,Ie,M)}if(et&&C){for(F=0,V=ot.length;V>F;F++)if(z=at[ot[F]],B=z.vertexNormals,N=z.normal,3===B.length&&D)for(ce=0;3>ce;ce++)pe=B[ce],Oe[Ae]=pe.x,Oe[Ae+1]=pe.y,Oe[Ae+2]=pe.z,Ae+=3;else for(ce=0;3>ce;ce++)Oe[Ae]=N.x,Oe[Ae+1]=N.y,Oe[Ae+2]=N.z,Ae+=3;I.bindBuffer(I.ARRAY_BUFFER,b.__webglNormalBuffer),I.bufferData(I.ARRAY_BUFFER,Oe,M)}if($e&&st&&L){for(F=0,V=ot.length;V>F;F++)if(U=ot[F],W=st[U],void 0!==W)for(ce=0;3>ce;ce++)fe=W[ce],Be[we]=fe.x,Be[we+1]=fe.y,we+=2;we>0&&(I.bindBuffer(I.ARRAY_BUFFER,b.__webglUVBuffer),I.bufferData(I.ARRAY_BUFFER,Be,M))}if($e&&ht&&L){for(F=0,V=ot.length;V>F;F++)if(U=ot[F],j=ht[U],void 0!==j)for(ce=0;3>ce;ce++)Ee=j[ce],Ne[Me]=Ee.x,Ne[Me+1]=Ee.y,Me+=2;Me>0&&(I.bindBuffer(I.ARRAY_BUFFER,b.__webglUV2Buffer),I.bufferData(I.ARRAY_BUFFER,Ne,M))}if(Je){for(F=0,V=ot.length;V>F;F++)Ke[Se]=Re,Ke[Se+1]=Re+1,Ke[Se+2]=Re+2,Se+=3,Qe[Pe]=Re,Qe[Pe+1]=Re+1,Qe[Pe+2]=Re,Qe[Pe+3]=Re+2,Qe[Pe+4]=Re+1,Qe[Pe+5]=Re+2,Pe+=6,Re+=3;I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,b.__webglFaceBuffer),I.bufferData(I.ELEMENT_ARRAY_BUFFER,Ke,M),I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,b.__webglLineBuffer),I.bufferData(I.ELEMENT_ARRAY_BUFFER,Qe,M)}if(Ye)for(ce=0,ue=Ye.length;ue>ce;ce++)if(qe=Ye[ce],qe.__original.needsUpdate){if(Ve=0,1===qe.size){if(void 0===qe.boundTo||"vertices"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],qe.array[Ve]=qe.value[z.a],qe.array[Ve+1]=qe.value[z.b],qe.array[Ve+2]=qe.value[z.c],Ve+=3;else if("faces"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)Ue=qe.value[ot[F]],qe.array[Ve]=Ue,qe.array[Ve+1]=Ue,qe.array[Ve+2]=Ue,Ve+=3}else if(2===qe.size){if(void 0===qe.boundTo||"vertices"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],X=qe.value[z.a],Y=qe.value[z.b],q=qe.value[z.c],qe.array[Ve]=X.x,qe.array[Ve+1]=X.y,qe.array[Ve+2]=Y.x,qe.array[Ve+3]=Y.y,qe.array[Ve+4]=q.x,qe.array[Ve+5]=q.y,Ve+=6;else if("faces"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)q=Y=X=Ue=qe.value[ot[F]],qe.array[Ve]=X.x,qe.array[Ve+1]=X.y,qe.array[Ve+2]=Y.x,qe.array[Ve+3]=Y.y,qe.array[Ve+4]=q.x,qe.array[Ve+5]=q.y,Ve+=6}else if(3===qe.size){var ft;if(ft="c"===qe.type?["r","g","b"]:["x","y","z"],void 0===qe.boundTo||"vertices"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],X=qe.value[z.a],Y=qe.value[z.b],q=qe.value[z.c],qe.array[Ve]=X[ft[0]],qe.array[Ve+1]=X[ft[1]],qe.array[Ve+2]=X[ft[2]],qe.array[Ve+3]=Y[ft[0]],qe.array[Ve+4]=Y[ft[1]],qe.array[Ve+5]=Y[ft[2]],qe.array[Ve+6]=q[ft[0]],qe.array[Ve+7]=q[ft[1]],qe.array[Ve+8]=q[ft[2]],Ve+=9;else if("faces"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)q=Y=X=Ue=qe.value[ot[F]],qe.array[Ve]=X[ft[0]],qe.array[Ve+1]=X[ft[1]],qe.array[Ve+2]=X[ft[2]],qe.array[Ve+3]=Y[ft[0]],qe.array[Ve+4]=Y[ft[1]],qe.array[Ve+5]=Y[ft[2]],qe.array[Ve+6]=q[ft[0]],qe.array[Ve+7]=q[ft[1]],qe.array[Ve+8]=q[ft[2]],Ve+=9;else if("faceVertices"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)Ue=qe.value[ot[F]],X=Ue[0],Y=Ue[1],q=Ue[2],qe.array[Ve]=X[ft[0]],qe.array[Ve+1]=X[ft[1]],qe.array[Ve+2]=X[ft[2]],qe.array[Ve+3]=Y[ft[0]],qe.array[Ve+4]=Y[ft[1]],qe.array[Ve+5]=Y[ft[2]],qe.array[Ve+6]=q[ft[0]],qe.array[Ve+7]=q[ft[1]],qe.array[Ve+8]=q[ft[2]],Ve+=9}else if(4===qe.size)if(void 0===qe.boundTo||"vertices"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)z=at[ot[F]],X=qe.value[z.a],Y=qe.value[z.b],q=qe.value[z.c],qe.array[Ve]=X.x,qe.array[Ve+1]=X.y,qe.array[Ve+2]=X.z,qe.array[Ve+3]=X.w,qe.array[Ve+4]=Y.x,qe.array[Ve+5]=Y.y,qe.array[Ve+6]=Y.z,qe.array[Ve+7]=Y.w,qe.array[Ve+8]=q.x,qe.array[Ve+9]=q.y,qe.array[Ve+10]=q.z,qe.array[Ve+11]=q.w,Ve+=12;else if("faces"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)q=Y=X=Ue=qe.value[ot[F]],qe.array[Ve]=X.x,qe.array[Ve+1]=X.y,qe.array[Ve+2]=X.z,qe.array[Ve+3]=X.w,qe.array[Ve+4]=Y.x,qe.array[Ve+5]=Y.y,qe.array[Ve+6]=Y.z,qe.array[Ve+7]=Y.w,qe.array[Ve+8]=q.x,qe.array[Ve+9]=q.y,qe.array[Ve+10]=q.z,qe.array[Ve+11]=q.w,Ve+=12;else if("faceVertices"===qe.boundTo)for(F=0,V=ot.length;V>F;F++)Ue=qe.value[ot[F]],X=Ue[0],Y=Ue[1],q=Ue[2],qe.array[Ve]=X.x,qe.array[Ve+1]=X.y,qe.array[Ve+2]=X.z,qe.array[Ve+3]=X.w,qe.array[Ve+4]=Y.x,qe.array[Ve+5]=Y.y,qe.array[Ve+6]=Y.z,qe.array[Ve+7]=Y.w,qe.array[Ve+8]=q.x,qe.array[Ve+9]=q.y,qe.array[Ve+10]=q.z,qe.array[Ve+11]=q.w,Ve+=12;I.bindBuffer(I.ARRAY_BUFFER,qe.buffer),I.bufferData(I.ARRAY_BUFFER,qe.array,M)}S&&(delete b.__inittedArrays,delete b.__colorArray,delete b.__normalArray,delete b.__tangentArray,delete b.__uvArray,delete b.__uv2Array,delete b.__faceArray,delete b.__vertexArray,delete b.__lineArray,delete b.__skinIndexArray,delete b.__skinWeightArray)}}c.verticesNeedUpdate=!1,c.morphTargetsNeedUpdate=!1,c.elementsNeedUpdate=!1,c.uvsNeedUpdate=!1,c.normalsNeedUpdate=!1,c.colorsNeedUpdate=!1,c.tangentsNeedUpdate=!1,c.buffersNeedUpdate=!1,E.attributes&&m(E)}else if(h instanceof THREE.Line){if(E=r(h,c),p=E.attributes&&d(E),c.verticesNeedUpdate||c.colorsNeedUpdate||c.lineDistancesNeedUpdate||p){var Et=c,dt=I.DYNAMIC_DRAW,mt=void 0,gt=void 0,Tt=void 0,vt=void 0,yt=void 0,Rt=void 0,xt=Et.vertices,Ht=Et.colors,_t=Et.lineDistances,bt=xt.length,wt=Ht.length,Mt=_t.length,St=Et.__vertexArray,At=Et.__colorArray,Ct=Et.__lineDistanceArray,Pt=Et.colorsNeedUpdate,Lt=Et.lineDistancesNeedUpdate,Dt=Et.__webglCustomAttributesList,Ft=void 0,Vt=void 0,Ut=void 0,zt=void 0,Bt=void 0,Nt=void 0;if(Et.verticesNeedUpdate){for(mt=0;bt>mt;mt++)vt=xt[mt],yt=3*mt,St[yt]=vt.x,St[yt+1]=vt.y,St[yt+2]=vt.z;I.bindBuffer(I.ARRAY_BUFFER,Et.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,St,dt)}if(Pt){for(gt=0;wt>gt;gt++)Rt=Ht[gt],yt=3*gt,At[yt]=Rt.r,At[yt+1]=Rt.g,At[yt+2]=Rt.b;I.bindBuffer(I.ARRAY_BUFFER,Et.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,At,dt)}if(Lt){for(Tt=0;Mt>Tt;Tt++)Ct[Tt]=_t[Tt];I.bindBuffer(I.ARRAY_BUFFER,Et.__webglLineDistanceBuffer),I.bufferData(I.ARRAY_BUFFER,Ct,dt)}if(Dt)for(Ft=0,Vt=Dt.length;Vt>Ft;Ft++)if(Nt=Dt[Ft],Nt.needsUpdate&&(void 0===Nt.boundTo||"vertices"===Nt.boundTo)){if(yt=0,zt=Nt.value.length,1===Nt.size)for(Ut=0;zt>Ut;Ut++)Nt.array[Ut]=Nt.value[Ut];else if(2===Nt.size)for(Ut=0;zt>Ut;Ut++)Bt=Nt.value[Ut],Nt.array[yt]=Bt.x,Nt.array[yt+1]=Bt.y,yt+=2;else if(3===Nt.size)if("c"===Nt.type)for(Ut=0;zt>Ut;Ut++)Bt=Nt.value[Ut],Nt.array[yt]=Bt.r,Nt.array[yt+1]=Bt.g,Nt.array[yt+2]=Bt.b,yt+=3;else for(Ut=0;zt>Ut;Ut++)Bt=Nt.value[Ut],Nt.array[yt]=Bt.x,Nt.array[yt+1]=Bt.y,Nt.array[yt+2]=Bt.z,yt+=3;else if(4===Nt.size)for(Ut=0;zt>Ut;Ut++)Bt=Nt.value[Ut],Nt.array[yt]=Bt.x,Nt.array[yt+1]=Bt.y,Nt.array[yt+2]=Bt.z,Nt.array[yt+3]=Bt.w,yt+=4;I.bindBuffer(I.ARRAY_BUFFER,Nt.buffer),I.bufferData(I.ARRAY_BUFFER,Nt.array,dt)}}c.verticesNeedUpdate=!1,c.colorsNeedUpdate=!1,c.lineDistancesNeedUpdate=!1,E.attributes&&m(E)}else if(h instanceof THREE.ParticleSystem){if(E=r(h,c),p=E.attributes&&d(E),c.verticesNeedUpdate||c.colorsNeedUpdate||h.sortParticles||p){var Ot=c,It=I.DYNAMIC_DRAW,kt=h,Gt=void 0,Wt=void 0,jt=void 0,Xt=void 0,Yt=void 0,qt=void 0,Kt=Ot.vertices,Qt=Kt.length,Zt=Ot.colors,Jt=Zt.length,$t=Ot.__vertexArray,ei=Ot.__colorArray,ti=Ot.__sortArray,ii=Ot.verticesNeedUpdate,ri=Ot.colorsNeedUpdate,ni=Ot.__webglCustomAttributesList,oi=void 0,ai=void 0,si=void 0,hi=void 0,li=void 0,ci=void 0;if(kt.sortParticles){for(He.copy(xe),He.multiply(kt.matrixWorld),Gt=0;Qt>Gt;Gt++)jt=Kt[Gt],_e.copy(jt),_e.applyProjection(He),ti[Gt]=[_e.z,Gt];for(ti.sort(l),Gt=0;Qt>Gt;Gt++)jt=Kt[ti[Gt][1]],Xt=3*Gt,$t[Xt]=jt.x,$t[Xt+1]=jt.y,$t[Xt+2]=jt.z;for(Wt=0;Jt>Wt;Wt++)Xt=3*Wt,qt=Zt[ti[Wt][1]],ei[Xt]=qt.r,ei[Xt+1]=qt.g,ei[Xt+2]=qt.b;if(ni)for(oi=0,ai=ni.length;ai>oi;oi++)if(ci=ni[oi],void 0===ci.boundTo||"vertices"===ci.boundTo)if(Xt=0,hi=ci.value.length,1===ci.size)for(si=0;hi>si;si++)Yt=ti[si][1],ci.array[si]=ci.value[Yt];else if(2===ci.size)for(si=0;hi>si;si++)Yt=ti[si][1],li=ci.value[Yt],ci.array[Xt]=li.x,ci.array[Xt+1]=li.y,Xt+=2;else if(3===ci.size)if("c"===ci.type)for(si=0;hi>si;si++)Yt=ti[si][1],li=ci.value[Yt],ci.array[Xt]=li.r,ci.array[Xt+1]=li.g,ci.array[Xt+2]=li.b,Xt+=3;else for(si=0;hi>si;si++)Yt=ti[si][1],li=ci.value[Yt],ci.array[Xt]=li.x,ci.array[Xt+1]=li.y,ci.array[Xt+2]=li.z,Xt+=3;else if(4===ci.size)for(si=0;hi>si;si++)Yt=ti[si][1],li=ci.value[Yt],ci.array[Xt]=li.x,ci.array[Xt+1]=li.y,ci.array[Xt+2]=li.z,ci.array[Xt+3]=li.w,Xt+=4}else{if(ii)for(Gt=0;Qt>Gt;Gt++)jt=Kt[Gt],Xt=3*Gt,$t[Xt]=jt.x,$t[Xt+1]=jt.y,$t[Xt+2]=jt.z;if(ri)for(Wt=0;Jt>Wt;Wt++)qt=Zt[Wt],Xt=3*Wt,ei[Xt]=qt.r,ei[Xt+1]=qt.g,ei[Xt+2]=qt.b;if(ni)for(oi=0,ai=ni.length;ai>oi;oi++)if(ci=ni[oi],ci.needsUpdate&&(void 0===ci.boundTo||"vertices"===ci.boundTo))if(hi=ci.value.length,Xt=0,1===ci.size)for(si=0;hi>si;si++)ci.array[si]=ci.value[si];else if(2===ci.size)for(si=0;hi>si;si++)li=ci.value[si],ci.array[Xt]=li.x,ci.array[Xt+1]=li.y,Xt+=2;else if(3===ci.size)if("c"===ci.type)for(si=0;hi>si;si++)li=ci.value[si],ci.array[Xt]=li.r,ci.array[Xt+1]=li.g,ci.array[Xt+2]=li.b,Xt+=3;else for(si=0;hi>si;si++)li=ci.value[si],ci.array[Xt]=li.x,ci.array[Xt+1]=li.y,ci.array[Xt+2]=li.z,Xt+=3;else if(4===ci.size)for(si=0;hi>si;si++)li=ci.value[si],ci.array[Xt]=li.x,ci.array[Xt+1]=li.y,ci.array[Xt+2]=li.z,ci.array[Xt+3]=li.w,Xt+=4}if((ii||kt.sortParticles)&&(I.bindBuffer(I.ARRAY_BUFFER,Ot.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,$t,It)),(ri||kt.sortParticles)&&(I.bindBuffer(I.ARRAY_BUFFER,Ot.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,ei,It)),ni)for(oi=0,ai=ni.length;ai>oi;oi++)ci=ni[oi],(ci.needsUpdate||kt.sortParticles)&&(I.bindBuffer(I.ARRAY_BUFFER,ci.buffer),I.bufferData(I.ARRAY_BUFFER,ci.array,It))}c.verticesNeedUpdate=!1,c.colorsNeedUpdate=!1,E.attributes&&m(E)}}},this.initMaterial=function(e,t,i,r){var n,o,a,s;e.addEventListener("dispose",je);var h,l,c,u,p;if(e instanceof THREE.MeshDepthMaterial?p="depth":e instanceof THREE.MeshNormalMaterial?p="normal":e instanceof THREE.MeshBasicMaterial?p="basic":e instanceof THREE.MeshLambertMaterial?p="lambert":e instanceof THREE.MeshPhongMaterial?p="phong":e instanceof THREE.LineBasicMaterial?p="basic":e instanceof THREE.LineDashedMaterial?p="dashed":e instanceof THREE.ParticleBasicMaterial&&(p="particle_basic"),p){var f=THREE.ShaderLib[p];e.uniforms=THREE.UniformsUtils.clone(f.uniforms),e.vertexShader=f.vertexShader,e.fragmentShader=f.fragmentShader}var E=n=0,d=0,m=f=0;for(o=t.length;o>m;m++)a=t[m],a.onlyShadow||(a instanceof THREE.DirectionalLight&&n++,a instanceof THREE.PointLight&&E++,a instanceof THREE.SpotLight&&d++,a instanceof THREE.HemisphereLight&&f++);for(o=E,a=d,s=f,d=f=0,E=t.length;E>d;d++)m=t[d],m.castShadow&&(m instanceof THREE.SpotLight&&f++,m instanceof THREE.DirectionalLight&&!m.shadowCascade&&f++);u=f,Ve&&r&&r.useVertexTexture?c=1024:(t=I.getParameter(I.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&(t=Math.min(r.bones.length,t),t<r.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),c=t);e:{var g,T,v,d=e.fragmentShader,E=e.vertexShader,f=e.uniforms,t=e.attributes,m=e.defines,i={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:c,useVertexTexture:Ve&&r&&r.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:u,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},r=e.index0AttributeName;n=[],p?n.push(p):(n.push(d),n.push(E));for(T in m)n.push(T),n.push(m[T]);for(g in i)n.push(g),n.push(i[g]);for(p=n.join(),g=0,T=Y.length;T>g;g++)if(n=Y[g],n.code===p){n.usedTimes++,l=n.program;break e}g="SHADOWMAP_TYPE_BASIC",i.shadowMapType===THREE.PCFShadowMap?g="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(g="SHADOWMAP_TYPE_PCF_SOFT"),T=[];for(v in m)n=m[v],!1!==n&&(n="#define "+v+" "+n,T.push(n));n=T.join("\n"),v=I.createProgram(),T=["precision "+D+" float;","precision "+D+" int;",n,Fe?"#define VERTEX_TEXTURES":"",X.gammaInput?"#define GAMMA_INPUT":"",X.gammaOutput?"#define GAMMA_OUTPUT":"",X.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),g=["precision "+D+" float;","precision "+D+" int;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",n,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",X.gammaInput?"#define GAMMA_INPUT":"",X.gammaOutput?"#define GAMMA_OUTPUT":"",X.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),
T=M("vertex",T+E),g=M("fragment",g+d),I.attachShader(v,T),I.attachShader(v,g),r&&I.bindAttribLocation(v,0,r),I.linkProgram(v),I.getProgramParameter(v,I.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+I.getProgramParameter(v,I.VALIDATE_STATUS)+", gl error ["+I.getError()+"]"),console.error("Program Info Log: "+I.getProgramInfoLog(v))),I.deleteShader(g),I.deleteShader(T),v.uniforms={},v.attributes={};var y;g="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),i.useVertexTexture?(g.push("boneTexture"),g.push("boneTextureWidth"),g.push("boneTextureHeight")):g.push("boneGlobalMatrices");for(y in f)g.push(y);for(y=g,g=0,T=y.length;T>g;g++)f=y[g],v.uniforms[f]=I.getUniformLocation(v,f);for(g="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),y=0;y<i.maxMorphTargets;y++)g.push("morphTarget"+y);for(y=0;y<i.maxMorphNormals;y++)g.push("morphNormal"+y);for(l in t)g.push(l);for(l=g,y=0,t=l.length;t>y;y++)g=l[y],v.attributes[g]=I.getAttribLocation(v,g);v.id=q++,Y.push({program:v,code:p,usedTimes:1}),X.info.memory.programs=Y.length,l=v}if(e.program=l,y=e.program.attributes,e.morphTargets)for(e.numSupportedMorphTargets=0,t="morphTarget",l=0;l<this.maxMorphTargets;l++)v=t+l,0<=y[v]&&e.numSupportedMorphTargets++;if(e.morphNormals)for(e.numSupportedMorphNormals=0,t="morphNormal",l=0;l<this.maxMorphNormals;l++)v=t+l,0<=y[v]&&e.numSupportedMorphNormals++;e.uniformsList=[];for(h in e.uniforms)e.uniformsList.push([e.uniforms[h],h])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?I.disable(I.CULL_FACE):(t===THREE.FrontFaceDirectionCW?I.frontFace(I.CW):I.frontFace(I.CCW),e===THREE.CullFaceBack?I.cullFace(I.BACK):e===THREE.CullFaceFront?I.cullFace(I.FRONT):I.cullFace(I.FRONT_AND_BACK),I.enable(I.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,e=e.side===THREE.BackSide;ie!==t&&(t?I.disable(I.CULL_FACE):I.enable(I.CULL_FACE),ie=t),re!==e&&(e?I.frontFace(I.CW):I.frontFace(I.CCW),re=e)},this.setDepthTest=function(e){he!==e&&(e?I.enable(I.DEPTH_TEST):I.disable(I.DEPTH_TEST),he=e)},this.setDepthWrite=function(e){le!==e&&(I.depthMask(e),le=e)},this.setBlending=function(e,t,i,r){e!==ne&&(e===THREE.NoBlending?I.disable(I.BLEND):e===THREE.AdditiveBlending?(I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.SRC_ALPHA,I.ONE)):e===THREE.SubtractiveBlending?(I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.ZERO,I.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.ZERO,I.SRC_COLOR)):e===THREE.CustomBlending?I.enable(I.BLEND):(I.enable(I.BLEND),I.blendEquationSeparate(I.FUNC_ADD,I.FUNC_ADD),I.blendFuncSeparate(I.SRC_ALPHA,I.ONE_MINUS_SRC_ALPHA,I.ONE,I.ONE_MINUS_SRC_ALPHA)),ne=e),e===THREE.CustomBlending?(t!==oe&&(I.blendEquation(P(t)),oe=t),(i!==ae||r!==se)&&(I.blendFunc(P(i),P(r)),ae=i,se=r)):se=ae=oe=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Ge),e.__webglTexture=I.createTexture(),X.info.memory.textures++),I.activeTexture(I.TEXTURE0+t),I.bindTexture(I.TEXTURE_2D,e.__webglTexture),I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,e.flipY),I.pixelStorei(I.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),I.pixelStorei(I.UNPACK_ALIGNMENT,e.unpackAlignment);var i=e.image,r=0===(i.width&i.width-1)&&0===(i.height&i.height-1),n=P(e.format),o=P(e.type);S(I.TEXTURE_2D,e,r);var a=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<a.length&&r){for(var s=0,h=a.length;h>s;s++)i=a[s],I.texImage2D(I.TEXTURE_2D,s,n,i.width,i.height,0,n,o,i.data);e.generateMipmaps=!1}else I.texImage2D(I.TEXTURE_2D,0,n,i.width,i.height,0,n,o,i.data);else if(e instanceof THREE.CompressedTexture)for(s=0,h=a.length;h>s;s++)i=a[s],e.format!==THREE.RGBAFormat?I.compressedTexImage2D(I.TEXTURE_2D,s,n,i.width,i.height,0,i.data):I.texImage2D(I.TEXTURE_2D,s,n,i.width,i.height,0,n,o,i.data);else if(0<a.length&&r){for(s=0,h=a.length;h>s;s++)i=a[s],I.texImage2D(I.TEXTURE_2D,s,n,n,o,i);e.generateMipmaps=!1}else I.texImage2D(I.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&r&&I.generateMipmap(I.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else I.activeTexture(I.TEXTURE0+t),I.bindTexture(I.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",We),e.__webglTexture=I.createTexture(),X.info.memory.textures++;var i=0===(e.width&e.width-1)&&0===(e.height&e.height-1),r=P(e.format),n=P(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],I.bindTexture(I.TEXTURE_CUBE_MAP,e.__webglTexture),S(I.TEXTURE_CUBE_MAP,e,i);for(var o=0;6>o;o++){e.__webglFramebuffer[o]=I.createFramebuffer(),e.__webglRenderbuffer[o]=I.createRenderbuffer(),I.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,r,e.width,e.height,0,r,n,null);var a=e,s=I.TEXTURE_CUBE_MAP_POSITIVE_X+o;I.bindFramebuffer(I.FRAMEBUFFER,e.__webglFramebuffer[o]),I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,s,a.__webglTexture,0),A(e.__webglRenderbuffer[o],e)}i&&I.generateMipmap(I.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=I.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:I.createRenderbuffer(),I.bindTexture(I.TEXTURE_2D,e.__webglTexture),S(I.TEXTURE_2D,e,i),I.texImage2D(I.TEXTURE_2D,0,r,e.width,e.height,0,r,n,null),r=I.TEXTURE_2D,I.bindFramebuffer(I.FRAMEBUFFER,e.__webglFramebuffer),I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_ATTACHMENT,I.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_STENCIL_ATTACHMENT,I.RENDERBUFFER,e.__webglRenderbuffer):A(e.__webglRenderbuffer,e),i&&I.generateMipmap(I.TEXTURE_2D);t?I.bindTexture(I.TEXTURE_CUBE_MAP,null):I.bindTexture(I.TEXTURE_2D,null),I.bindRenderbuffer(I.RENDERBUFFER,null),I.bindFramebuffer(I.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,e=e.height,n=r=0):(t=null,i=me,e=ge,r=Ee,n=de),t!==Q&&(I.bindFramebuffer(I.FRAMEBUFFER,t),I.viewport(r,n,i,e),Q=t),Te=i,ve=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,i){this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==i.depthBuffer?i.depthBuffer:!0,this.stencilBuffer=void 0!==i.stencilBuffer?i.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableParticle=function(){this.id=0,this.object=null,this.z=this.y=this.x=0,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(e,t,i){var r,n,o=e.vertices.length,a=t instanceof THREE.Mesh?t.geometry:t,s=e.vertices,h=a.vertices,l=e.faces,c=a.faces,e=e.faceVertexUvs[0],a=a.faceVertexUvs[0];void 0===i&&(i=0),t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,n=(new THREE.Matrix3).getNormalMatrix(r));for(var t=0,u=h.length;u>t;t++){var p=h[t].clone();r&&p.applyMatrix4(r),s.push(p)}for(t=0,u=c.length;u>t;t++){var f,E,p=c[t],d=p.vertexNormals,m=p.vertexColors;for(f=new THREE.Face3(p.a+o,p.b+o,p.c+o),f.normal.copy(p.normal),n&&f.normal.applyMatrix3(n).normalize(),s=0,h=d.length;h>s;s++)E=d[s].clone(),n&&E.applyMatrix3(n).normalize(),f.vertexNormals.push(E);for(f.color.copy(p.color),s=0,h=m.length;h>s;s++)E=m[s],f.vertexColors.push(E.clone());f.materialIndex=p.materialIndex+i,f.centroid.copy(p.centroid),r&&f.centroid.applyMatrix4(r),l.push(f)}for(t=0,u=a.length;u>t;t++){for(i=a[t],r=[],s=0,h=i.length;h>s;s++)r.push(new THREE.Vector2(i[s].x,i[s].y));e.push(r)}},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,i,r){var n=new THREE.Vector3,o=THREE.Math.random16(),a=THREE.Math.random16();o+a>1&&(o=1-o,a=1-a);var s=1-o-a;return n.copy(t),n.multiplyScalar(o),e.copy(i),e.multiplyScalar(a),n.add(e),e.copy(r),e.multiplyScalar(s),n.add(e),n}}(),randomPointInFace:function(e,t){return THREE.GeometryUtils.randomPointInTriangle(t.vertices[e.a],t.vertices[e.b],t.vertices[e.c])},randomPointsInGeometry:function(e,t){function i(e){function t(i,r){if(i>r)return i;var n=i+Math.floor((r-i)/2);return p[n]>e?t(i,n-1):p[n]<e?t(n+1,r):n}return t(0,p.length-1)}var r,n,o,a,s,h=e.faces,l=e.vertices,c=h.length,u=0,p=[];for(n=0;c>n;n++)r=h[n],o=l[r.a],a=l[r.b],s=l[r.c],r._area=THREE.GeometryUtils.triangleArea(o,a,s),u+=r._area,p[n]=u;for(r=[],n=0;t>n;n++)l=THREE.Math.random16()*u,l=i(l),r[n]=THREE.GeometryUtils.randomPointInFace(h[l],e,!0);return r},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,n){return e.subVectors(r,i),t.subVectors(n,i),e.cross(t),.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,i=new THREE.Vector3;return i.addVectors(t.min,t.max),i.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(i.x,i.y,i.z)),e.computeBoundingBox(),i},triangulateQuads:function(e){var t,i,r,n,o=[],a=[];for(t=0,i=e.faceVertexUvs.length;i>t;t++)a[t]=[];for(t=0,i=e.faces.length;i>t;t++)for(o.push(e.faces[t]),r=0,n=e.faceVertexUvs.length;n>r;r++)a[r].push(e.faceVertexUvs[r][t]);e.faces=o,e.faceVertexUvs=a,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()}},THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i){var r=new THREE.ImageLoader;r.crossOrigin=this.crossOrigin;var n=new THREE.Texture(void 0,t),t=r.load(e,function(){n.needsUpdate=!0,i&&i(n)});return n.image=t,n.sourceFile=e,n},loadCompressedTexture:function(e,t,i,r){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;return o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);n.format=e.format,n.mipmaps=e.mipmaps,n.image.width=e.width,n.image.height=e.height,n.generateMipmaps=!1,n.needsUpdate=!0,i&&i(n)},o.onerror=r,o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null),n},loadTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.Texture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1;for(var t=0,a=e.length;a>t;++t){var s=new Image;n[t]=s,s.onload=function(){n.loadCount+=1,6===n.loadCount&&(o.needsUpdate=!0,i&&i(o))},s.onerror=r,s.crossOrigin=this.crossOrigin,s.src=e[t]}return o},loadCompressedTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;if(o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1,t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format,t.mipmaps=r.mipmaps,t.width=r.width,t.height=r.height,n.loadCount+=1,6===n.loadCount&&(o.format=r.format,o.needsUpdate=!0,i&&i(o))}},e instanceof Array)for(var a=0,s=e.length;s>a;++a){var h={};n[a]=h;var l=new XMLHttpRequest;l.onload=t(l,h),l.onerror=r,h=e[a],l.open("GET",h,!0),l.responseType="arraybuffer",l.send(null)}else l=new XMLHttpRequest,l.onload=function(){var e=THREE.ImageUtils.parseDDS(l.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,r=0;t>r;r++){n[r]={mipmaps:[]};for(var a=0;a<e.mipmapCount;a++)n[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+a]),n[r].format=e.format,n[r].width=e.width,n[r].height=e.height}o.format=e.format,o.needsUpdate=!0,i&&i(o)}},l.onerror=r,l.open("GET",e,!0),l.responseType="arraybuffer",l.send(null);return o},loadDDSTexture:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1;var a=new XMLHttpRequest;return a.onload=function(){var e=THREE.ImageUtils.parseDDS(a.response,!0);if(e.isCubemap)for(var t=e.mipmaps.length/e.mipmapCount,r=0;t>r;r++){n[r]={mipmaps:[]};for(var s=0;s<e.mipmapCount;s++)n[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+s]),n[r].format=e.format,n[r].width=e.width,n[r].height=e.height}else o.image.width=e.width,o.image.height=e.height,o.mipmaps=e.mipmaps;o.format=e.format,o.needsUpdate=!0,i&&i(o)},a.onerror=r,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),o},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},n=i("DXT1"),o=i("DXT3"),a=i("DXT5"),s=new Int32Array(e,0,31);if(542327876!==s[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(4&!s[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;var h=s[21],l=!1;switch(h){case n:n=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case o:n=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case a:n=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==s[22]&&16711680&s[23]&&65280&s[24]&&255&s[25]&&4278190080&s[26]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(255&h,h>>8&255,h>>16&255,h>>24&255)),r;l=!0,n=64,r.format=THREE.RGBAFormat}r.mipmapCount=1,131072&s[2]&&!1!==t&&(r.mipmapCount=Math.max(1,s[7])),r.isCubemap=512&s[28]?!0:!1,r.width=s[4],r.height=s[3];for(var s=s[1]+4,o=r.width,a=r.height,h=r.isCubemap?6:1,c=0;h>c;c++){for(var u=0;u<r.mipmapCount;u++){if(l){var p;p=o;for(var f=a,E=4*p*f,d=new Uint8Array(e,s,E),E=new Uint8Array(E),m=0,g=0,T=0;f>T;T++)for(var v=0;p>v;v++){var y=d[g];g++;var R=d[g];g++;var x=d[g];g++;var H=d[g];g++,E[m]=x,m++,E[m]=R,m++,E[m]=y,m++,E[m]=H,m++}p=E,f=p.length}else f=Math.max(4,o)/4*Math.max(4,a)/4*n,p=new Uint8Array(e,s,f);r.mipmaps.push({data:p,width:o,height:a}),s+=f,o=Math.max(.5*o,1),a=Math.max(.5*a,1)}o=r.width,a=r.height}return r},getNormalMap:function(e,t){var i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},t=1|t,r=e.width,n=e.height,o=document.createElement("canvas");o.width=r,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,r,n).data,h=a.createImageData(r,n),l=h.data,c=0;r>c;c++)for(var u=0;n>u;u++){var p=0>u-1?0:u-1,f=u+1>n-1?n-1:u+1,E=0>c-1?0:c-1,d=c+1>r-1?r-1:c+1,m=[],g=[0,0,s[4*(u*r+c)]/255*t];for(m.push([-1,0,s[4*(u*r+E)]/255*t]),m.push([-1,-1,s[4*(p*r+E)]/255*t]),m.push([0,-1,s[4*(p*r+c)]/255*t]),m.push([1,-1,s[4*(p*r+d)]/255*t]),m.push([1,0,s[4*(u*r+d)]/255*t]),m.push([1,1,s[4*(f*r+d)]/255*t]),m.push([0,1,s[4*(f*r+c)]/255*t]),m.push([-1,1,s[4*(f*r+E)]/255*t]),p=[],E=m.length,f=0;E>f;f++){var d=m[f],T=m[(f+1)%E],d=[d[0]-g[0],d[1]-g[1],d[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];p.push(i([d[1]*T[2]-d[2]*T[1],d[2]*T[0]-d[0]*T[2],d[0]*T[1]-d[1]*T[0]]))}for(m=[0,0,0],f=0;f<p.length;f++)m[0]+=p[f][0],m[1]+=p[f][1],m[2]+=p[f][2];m[0]/=p.length,m[1]/=p.length,m[2]/=p.length,g=4*(u*r+c),l[g]=255*((m[0]+1)/2)|0,l[g+1]=255*((m[1]+1)/2)|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(e,t,i){for(var r=e*t,n=new Uint8Array(3*r),o=Math.floor(255*i.r),a=Math.floor(255*i.g),i=Math.floor(255*i.b),s=0;r>s;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=i;return e=new THREE.DataTexture(n,e,t,THREE.RGBFormat),e.needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var i=new THREE.Object3D,r=0,n=t.length;n>r;r++)i.add(new THREE.Mesh(e,t[r]));return i},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){for(var t=this.getFace(),i=this.size/t.resolution,r=0,n=String(e).split(""),o=n.length,a=[],e=0;o>e;e++){var s=new THREE.Path,s=this.extractGlyphPoints(n[e],t,i,r,s),r=r+s.offset;a.push(s.path)}return{paths:a,offset:r/2}},extractGlyphPoints:function(e,t,i,r,n){var o,a,s,h,l,c,u,p,f,E,d,m=[],g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),h=t.length,e=0;h>e;)switch(s=t[e++]){case"m":s=t[e++]*i+r,l=t[e++]*i,n.moveTo(s,l);break;case"l":s=t[e++]*i+r,l=t[e++]*i,n.lineTo(s,l);break;case"q":if(s=t[e++]*i+r,l=t[e++]*i,p=t[e++]*i+r,f=t[e++]*i,n.quadraticCurveTo(p,f,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++){var T=o/a;THREE.Shape.Utils.b2(T,c,p,s),THREE.Shape.Utils.b2(T,u,f,l)}break;case"b":if(s=t[e++]*i+r,l=t[e++]*i,p=t[e++]*i+r,f=t[e++]*-i,E=t[e++]*i+r,d=t[e++]*-i,n.bezierCurveTo(s,l,p,f,E,d),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++)T=o/a,THREE.Shape.Utils.b3(T,c,p,E,s),THREE.Shape.Utils.b3(T,u,f,d,l)}return{offset:g.ha*i,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){var t=t||{},i=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";for(THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=i,THREE.FontUtils.face=r,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,i=THREE.FontUtils.drawText(e).paths,r=[],n=0,o=i.length;o>n;n++)Array.prototype.push.apply(r,i[n].toShapes());return r},function(e){var t=function(e){for(var t=e.length,i=0,r=t-1,n=0;t>n;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i};return e.Triangulate=function(e,i){var r=e.length;if(3>r)return null;var n,o,a,s=[],h=[],l=[];if(0<t(e))for(o=0;r>o;o++)h[o]=o;else for(o=0;r>o;o++)h[o]=r-1-o;var c=2*r;for(o=r-1;r>2;){if(0>=c--){console.log("Warning, unable to triangulate polygon!");break}n=o,n>=r&&(n=0),o=n+1,o>=r&&(o=0),a=o+1,a>=r&&(a=0);var u;e:{var p=u=void 0,f=void 0,E=void 0,d=void 0,m=void 0,g=void 0,T=void 0,v=void 0,p=e[h[n]].x,f=e[h[n]].y,E=e[h[o]].x,d=e[h[o]].y,m=e[h[a]].x,g=e[h[a]].y;if(1e-10>(E-p)*(g-f)-(d-f)*(m-p))u=!1;else{var y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,b=void 0,w=void 0,M=void 0,S=void 0,A=void 0,S=M=w=v=T=void 0,y=m-E,R=g-d,x=p-m,H=f-g,_=E-p,b=d-f;for(u=0;r>u;u++)if(u!==n&&u!==o&&u!==a&&(T=e[h[u]].x,v=e[h[u]].y,w=T-p,M=v-f,S=T-E,A=v-d,T-=m,v-=g,S=y*A-R*S,w=_*M-b*w,M=x*v-H*T,S>=-1e-10&&M>=-1e-10&&w>=-1e-10)){u=!1;break e}u=!0}}if(u){for(s.push([e[h[n]],e[h[o]],e[h[a]]]),l.push([h[n],h[o],h[a]]),n=o,a=o+1;r>a;n++,a++)h[n]=h[a];r--,c=2*r}}return i?l:s},e.Triangulate.area=t,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPoint(t/e));return i},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPointAt(t/e));return i},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,i,r=[],n=this.getPoint(0),o=0;for(r.push(0),i=1;e>=i;i++)t=this.getPoint(i/e),o+=t.distanceTo(n),r.push(o),n=t;return this.cacheArcLengths=r},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var i,r=this.getLengths(),n=0,o=r.length;i=t?t:e*r[o-1];for(var a,s=0,h=o-1;h>=s;)if(n=Math.floor(s+(h-s)/2),a=r[n]-i,0>a)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}return n=h,r[n]==i?n/(o-1):(s=r[n],r=(n+(i-s)/(r[n+1]-s))/(o-1))},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,e=e+1e-4;return 0>t&&(t=0),e>1&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,n){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*n},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,i,r,n){var e=.5*(i-e),r=.5*(r-t),o=n*n;return(2*t-2*i+e+r)*n*o+(-3*t+3*i-2*e-r)*o+e*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),i=this.getCurveLengths(),e=0;e<i.length;){if(i[e]>=t)return t=i[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],i=0,r=this.curves.length;for(e=0;r>e;e++)i+=this.curves[e].getLength(),t.push(i);return this.cacheLengths=t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,i,r,n,o,a=this.getPoints();e=t=Number.NEGATIVE_INFINITY,r=n=Number.POSITIVE_INFINITY;var s,h,l,c,u=a[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;l>h;h++)s=a[h],s.x>e?e=s.x:s.x<r&&(r=s.x),s.y>t?t=s.y:s.y<n&&(n=s.y),u&&(s.z>i?i=s.z:s.z<o&&(o=s.z)),c.add(s);return a={minX:r,minY:n,maxX:e,maxY:t,centroid:c.divideScalar(l)},u&&(a.maxZ=i,a.minZ=o),a},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,i=0;i<e.length;i++)t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,e[i].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var i,r,n=this.getPoints(e);for(t||(t=this.bends),i=0,r=t.length;r>i;i++)n=this.getWrapPoints(n,t[i]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var i,r,n=this.getSpacedPoints(e);for(t||(t=this.bends),i=0,r=t.length;r>i;i++)n=this.getWrapPoints(n,t[i]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var i,r,n,o,a,s,h=this.getBoundingBox();for(i=0,r=e.length;r>i;i++)n=e[i],o=n.x,a=n.y,s=o/h.maxX,s=t.getUtoTmapping(s,o),o=t.getPoint(s),a=t.getNormalVector(s).multiplyScalar(a),n.x=o.x+a.x,n.y=o.y+a.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;i>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var i=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:i})},THREE.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:THREE.PathActions.LINE_TO,args:i})},THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=[new THREE.Vector2(i[i.length-2],i[i.length-1])];Array.prototype.push.apply(i,e),i=new THREE.SplineCurve(i),this.curves.push(i),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,i,r,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],i,r,n,o)},THREE.Path.prototype.absarc=function(e,t,i,r,n,o){this.absellipse(e,t,i,i,r,n,o)},THREE.Path.prototype.ellipse=function(e,t,i,r,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],i,r,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,i,r,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,i,r,n,o,a);this.curves.push(h),h=h.getPoint(1),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],i=0;e>i;i++)t.push(this.getPoint(i/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);var i,r,n,o,a,s,h,l,c,u,p,f,E,e=e||12,d=[];for(i=0,r=this.actions.length;r>i;i++)switch(n=this.actions[i],o=n.action,n=n.args,o){case THREE.PathActions.MOVE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=n[2],s=n[3],c=n[0],u=n[1],0<d.length?(o=d[d.length-1],p=o.x,f=o.y):(o=this.actions[i-1].args,p=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)E=n/e,o=THREE.Shape.Utils.b2(E,p,c,a),E=THREE.Shape.Utils.b2(E,f,u,s),d.push(new THREE.Vector2(o,E));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=n[4],s=n[5],c=n[0],u=n[1],h=n[2],l=n[3],0<d.length?(o=d[d.length-1],p=o.x,f=o.y):(o=this.actions[i-1].args,p=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)E=n/e,o=THREE.Shape.Utils.b3(E,p,c,h,a),E=THREE.Shape.Utils.b3(E,f,u,l,s),d.push(new THREE.Vector2(o,E));break;case THREE.PathActions.CSPLINE_THRU:for(o=this.actions[i-1].args,E=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=e*n[0].length,E=E.concat(n[0]),E=new THREE.SplineCurve(E),n=1;o>=n;n++)d.push(E.getPointAt(n/o));break;case THREE.PathActions.ARC:for(a=n[0],s=n[1],u=n[2],h=n[3],o=n[4],c=!!n[5],p=o-h,f=2*e,n=1;f>=n;n++)E=n/f,c||(E=1-E),E=h+E*p,o=a+u*Math.cos(E),E=s+u*Math.sin(E),d.push(new THREE.Vector2(o,E));break;case THREE.PathActions.ELLIPSE:for(a=n[0],s=n[1],u=n[2],l=n[3],h=n[4],o=n[5],c=!!n[6],p=o-h,f=2*e,n=1;f>=n;n++)E=n/f,c||(E=1-E),E=h+E*p,o=a+u*Math.cos(E),E=s+l*Math.sin(E),d.push(new THREE.Vector2(o,E))}return i=d[d.length-1],1e-10>Math.abs(i.x-d[0].x)&&1e-10>Math.abs(i.y-d[0].y)&&d.splice(d.length-1,1),t&&d.push(d[0]),d},THREE.Path.prototype.toShapes=function(e){var t,i,r,n,o=[],a=new THREE.Path;for(t=0,i=this.actions.length;i>t;t++)r=this.actions[t],n=r.args,r=r.action,r==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(o.push(a),a=new THREE.Path),a[r].apply(a,n);if(0!=a.actions.length&&o.push(a),0==o.length)return[];var s;if(n=[],1==o.length)return r=o[0],s=new THREE.Shape,s.actions=r.actions,s.curves=r.curves,n.push(s),n;if(t=!THREE.Shape.Utils.isClockWise(o[0].getPoints()),e?!t:t)for(s=new THREE.Shape,t=0,i=o.length;i>t;t++)r=o[t],a=THREE.Shape.Utils.isClockWise(r.getPoints()),
(a=e?!a:a)?(s.actions=r.actions,s.curves=r.curves,n.push(s),s=new THREE.Shape):s.holes.push(r);else{for(s=void 0,t=0,i=o.length;i>t;t++)r=o[t],a=THREE.Shape.Utils.isClockWise(r.getPoints()),(a=e?!a:a)?(s&&n.push(s),s=new THREE.Shape,s.actions=r.actions,s.curves=r.curves):s.holes.push(r);n.push(s)}return n},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;i>t;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;i>t;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var i,r,n,o,a,s,h,l,c,u,p=e.concat(),f=p.concat(),E=[];for(a=0;a<t.length;a++){for(s=t[a],Array.prototype.push.apply(f,s),r=Number.POSITIVE_INFINITY,i=0;i<s.length;i++)for(c=s[i],u=[],l=0;l<p.length;l++)h=p[l],h=c.distanceToSquared(h),u.push(h),r>h&&(r=h,n=i,o=l);i=o-1>=0?o-1:p.length-1,r=n-1>=0?n-1:s.length-1;var d=[s[n],p[o],p[i]];l=THREE.FontUtils.Triangulate.area(d);var m=[s[n],s[r],p[o]];c=THREE.FontUtils.Triangulate.area(m),u=o,h=n,o+=1,n+=-1,0>o&&(o+=p.length),o%=p.length,0>n&&(n+=s.length),n%=s.length,i=o-1>=0?o-1:p.length-1,r=n-1>=0?n-1:s.length-1,d=[s[n],p[o],p[i]],d=THREE.FontUtils.Triangulate.area(d),m=[s[n],s[r],p[o]],m=THREE.FontUtils.Triangulate.area(m),l+c>d+m&&(o=u,n=h,0>o&&(o+=p.length),o%=p.length,0>n&&(n+=s.length),n%=s.length,i=o-1>=0?o-1:p.length-1,r=n-1>=0?n-1:s.length-1),l=p.slice(0,o),c=p.slice(o),u=s.slice(n),h=s.slice(0,n),r=[s[n],s[r],p[o]],E.push([s[n],p[o],p[i]]),E.push(r),p=l.concat(u).concat(h).concat(c)}return{shape:p,isolatedPts:E,allpoints:f}},triangulateShape:function(e,t){var i,r,n,o,a=THREE.Shape.Utils.removeHoles(e,t),s=a.allpoints,h=a.isolatedPts,a=THREE.FontUtils.Triangulate(a.shape,!1),l={};for(i=0,r=s.length;r>i;i++)o=s[i].x+":"+s[i].y,void 0!==l[o]&&console.log("Duplicate point",o),l[o]=i;for(i=0,r=a.length;r>i;i++)for(n=a[i],s=0;3>s;s++)o=n[s].x+":"+n[s].y,o=l[o],void 0!==o&&(n[s]=o);for(i=0,r=h.length;r>i;i++)for(n=h[i],s=0;3>s;s++)o=n[s].x+":"+n[s].y,o=l[o],void 0!==o&&(n[s]=o);return a.concat(h)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var i=1-e;return i*i*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,i,r){return this.b2p0(e,t)+this.b2p1(e,i)+this.b2p2(e,r)},b3p0:function(e,t){var i=1-e;return i*i*i*t},b3p1:function(e,t){var i=1-e;return 3*i*i*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,i,r,n){return this.b3p0(e,t)+this.b3p1(e,i)+this.b3p2(e,r)+this.b3p3(e,n)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,i=new THREE.Vector2,r=[],n=this.points;return t=(n.length-1)*e,e=Math.floor(t),t-=e,r[0]=0==e?e:e-1,r[1]=e,r[2]=e>n.length-2?n.length-1:e+1,r[3]=e>n.length-3?n.length-1:e+2,i.x=THREE.Curve.Utils.interpolate(n[r[0]].x,n[r[1]].x,n[r[2]].x,n[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(n[r[0]].y,n[r[1]].y,n[r[2]].y,n[r[3]].y,t),i},THREE.EllipseCurve=function(e,t,i,r,n,o,a){this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t;return t=this.aEndAngle-this.aStartAngle,0>t&&(t+=2*Math.PI),t>2*Math.PI&&(t-=2*Math.PI),t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,i,r,n,o){THREE.EllipseCurve.call(this,e,t,i,i,r,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,i){this.v0=e,this.v1=t,this.v2=i},function(e){var t,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,i,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},function(e){var t,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,i,e)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i=new THREE.Vector3,r=[],n=this.points,e=(n.length-1)*e;t=Math.floor(e),e-=t,r[0]=0==t?t:t-1,r[1]=t,r[2]=t>n.length-2?n.length-1:t+1,r[3]=t>n.length-3?n.length-1:t+2,t=n[r[0]];var o=n[r[1]],a=n[r[2]],r=n[r[3]];return i.x=THREE.Curve.Utils.interpolate(t.x,o.x,a.x,r.x,e),i.y=THREE.Curve.Utils.interpolate(t.y,o.y,a.y,r.y,e),i.z=THREE.Curve.Utils.interpolate(t.z,o.z,a.z,r.z,e),i}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i=new THREE.Vector3,r=[],n=this.points;return t=(n.length-0)*e,e=Math.floor(t),t-=e,e+=e>0?0:(Math.floor(Math.abs(e)/n.length)+1)*n.length,r[0]=(e-1)%n.length,r[1]=e%n.length,r[2]=(e+1)%n.length,r[3]=(e+2)%n.length,i.x=THREE.Curve.Utils.interpolate(n[r[0]].x,n[r[1]].x,n[r[2]].x,n[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(n[r[0]].y,n[r[1]].y,n[r[2]].y,n[r[3]].y,t),i.z=THREE.Curve.Utils.interpolate(n[r[0]].z,n[r[1]].z,n[r[2]].z,n[r[3]].z,t),i}),THREE.AnimationHandler=function(){var e=[],t={},i={update:function(t){for(var i=0;i<e.length;i++)e[i].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t),-1!==t&&e.splice(t,1)},add:function(e){if(void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,!0!==e.initialized){for(var i=0;i<e.hierarchy.length;i++){for(var r=0;r<e.hierarchy[i].keys.length;r++)if(0>e.hierarchy[i].keys[r].time&&(e.hierarchy[i].keys[r].time=0),void 0!==e.hierarchy[i].keys[r].rot&&!(e.hierarchy[i].keys[r].rot instanceof THREE.Quaternion)){var n=e.hierarchy[i].keys[r].rot;e.hierarchy[i].keys[r].rot=new THREE.Quaternion(n[0],n[1],n[2],n[3])}if(e.hierarchy[i].keys.length&&void 0!==e.hierarchy[i].keys[0].morphTargets){for(n={},r=0;r<e.hierarchy[i].keys.length;r++)for(var o=0;o<e.hierarchy[i].keys[r].morphTargets.length;o++){var a=e.hierarchy[i].keys[r].morphTargets[o];n[a]=-1}for(e.hierarchy[i].usedMorphTargets=n,r=0;r<e.hierarchy[i].keys.length;r++){var s={};for(a in n){for(o=0;o<e.hierarchy[i].keys[r].morphTargets.length;o++)if(e.hierarchy[i].keys[r].morphTargets[o]===a){s[a]=e.hierarchy[i].keys[r].morphTargetsInfluences[o];break}o===e.hierarchy[i].keys[r].morphTargets.length&&(s[a]=0)}e.hierarchy[i].keys[r].morphTargetsInfluences=s}}for(r=1;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].time===e.hierarchy[i].keys[r-1].time&&(e.hierarchy[i].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].index=r}for(r=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[],i=0;i<e.hierarchy.length;i++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){return"string"==typeof e?t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null):void 0},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.bones.length;i++)t.push(e.bones[i]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var i=0;i<e.children.length;i++)r(e.children[i],t)};return i.LINEAR=0,i.CATMULLROM=1,i.CATMULLROM_FORWARD=2,i}(),THREE.Animation=function(e,t,i){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=void 0!==i?i:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var i,r,n=this.hierarchy.length;for(i=0;n>i;i++){r=this.hierarchy[i],r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey={pos:0,rot:0,scl:0},r.animationCache.nextKey={pos:0,rot:0,scl:0},r.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix);var o=r.animationCache.prevKey;r=r.animationCache.nextKey,o.pos=this.data.hierarchy[i].keys[0],o.rot=this.data.hierarchy[i].keys[0],o.scl=this.data.hierarchy[i].keys[0],r.pos=this.getNextKeyWith("pos",i,1),r.rot=this.getNextKeyWith("rot",i,1),r.scl=this.getNextKeyWith("scl",i,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t,i,r,n,o,a,s,h,l,c=["pos","rot","scl"];l=this.currentTime+=e*this.timeScale,h=this.currentTime%=this.data.length,parseInt(Math.min(h*this.data.fps,this.data.length*this.data.fps),10);for(var u=0,p=this.hierarchy.length;p>u;u++){e=this.hierarchy[u],s=e.animationCache;for(var f=0;3>f;f++){if(t=c[f],o=s.prevKey[t],a=s.nextKey[t],a.time<=l){if(l>h){if(!this.loop)return void this.stop();for(o=this.data.hierarchy[u].keys[0],a=this.getNextKeyWith(t,u,1);a.time<h;)o=a,a=this.getNextKeyWith(t,u,a.index+1)}else do o=a,a=this.getNextKeyWith(t,u,a.index+1);while(a.time<h);s.prevKey[t]=o,s.nextKey[t]=a}e.matrixAutoUpdate=!0,e.matrixWorldNeedsUpdate=!0,i=(h-o.time)/(a.time-o.time),r=o[t],n=a[t],(0>i||i>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+i+" on bone "+u),i=0>i?0:1),"pos"===t?(t=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(t.x=r[0]+(n[0]-r[0])*i,t.y=r[1]+(n[1]-r[1])*i,t.z=r[2]+(n[2]-r[2])*i):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",u,o.index-1).pos,this.points[1]=r,this.points[2]=n,this.points[3]=this.getNextKeyWith("pos",u,a.index+1).pos,i=.33*i+.33,r=this.interpolateCatmullRom(this.points,i),t.x=r[0],t.y=r[1],t.z=r[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(i=this.interpolateCatmullRom(this.points,1.01*i),this.target.set(i[0],i[1],i[2]),this.target.sub(t),this.target.y=0,this.target.normalize(),i=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,i,0)))):"rot"===t?THREE.Quaternion.slerp(r,n,e.quaternion,i):"scl"===t&&(t=e.scale,t.x=r[0]+(n[0]-r[0])*i,t.y=r[1]+(n[1]-r[1])*i,t.z=r[2]+(n[2]-r[2])*i)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var i,r,n,o,a,s,h=[],l=[];return i=(e.length-1)*t,r=Math.floor(i),i-=r,h[0]=0===r?r:r-1,h[1]=r,h[2]=r>e.length-2?r:r+1,h[3]=r>e.length-3?r:r+2,r=e[h[0]],o=e[h[1]],a=e[h[2]],s=e[h[3]],h=i*i,n=i*h,l[0]=this.interpolate(r[0],o[0],a[0],s[0],i,h,n),l[1]=this.interpolate(r[1],o[1],a[1],s[1],i,h,n),l[2]=this.interpolate(r[2],o[2],a[2],s[2],i,h,n),l},THREE.Animation.prototype.interpolate=function(e,t,i,r,n,o,a){return e=.5*(i-e),r=.5*(r-t),(2*(t-i)+e+r)*a+(-3*(t-i)-2*e-r)*o+e*n+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i<r.length-1?i:r.length-1:i%r.length;i<r.length;i++)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i>0?i:0:i>=0?i:i+r.length;i>=0;i--)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t,i){for(this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=void 0!==i?i:!0,e=0,t=this.hierarchy.length;t>e;e++){var i=this.data.hierarchy[e].sids,r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&i){for(var n=0;n<i.length;n++){var o=i[n],a=this.getNextKeyWith(o,e,0);a&&a.apply(o)}r.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var i,r,n,o=this.hierarchy.length;for(i=0;o>i;i++)r=this.hierarchy[i],n=this.data.hierarchy[i],void 0===n.animationCache&&(n.animationCache={},n.animationCache.prevKey=null,n.animationCache.nextKey=null,n.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix),r=this.data.hierarchy[i].keys,r.length&&(n.animationCache.prevKey=r[0],n.animationCache.nextKey=r[1],this.startTime=Math.min(r[0].time,this.startTime),this.endTime=Math.max(r[r.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],i=this.data.hierarchy[e];if(void 0!==i.animationCache){var r=i.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete i.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,i,r,n,o,a,s,h=this.data.JIT.hierarchy;if(a=this.currentTime+=e*this.timeScale,o=this.currentTime%=this.data.length,o<this.startTimeMs&&(o=this.currentTime=this.startTimeMs+o),n=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10),(s=a>o)&&!this.loop){for(var e=0,l=this.hierarchy.length;l>e;e++){var c=this.data.hierarchy[e].keys,h=this.data.hierarchy[e].sids;if(r=c.length-1,n=this.hierarchy[e],c.length){for(c=0;c<h.length;c++)o=h[c],(a=this.getPrevKeyWith(o,e,r))&&a.apply(o);this.data.hierarchy[e].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(o<this.startTime)){for(e=0,l=this.hierarchy.length;l>e;e++){r=this.hierarchy[e],t=this.data.hierarchy[e];var c=t.keys,u=t.animationCache;if(this.JITCompile&&void 0!==h[e][n])r instanceof THREE.Bone?(r.skinMatrix=h[e][n],r.matrixWorldNeedsUpdate=!1):(r.matrix=h[e][n],r.matrixWorldNeedsUpdate=!0);else if(c.length){if(this.JITCompile&&u&&(r instanceof THREE.Bone?r.skinMatrix=u.originalMatrix:r.matrix=u.originalMatrix),t=u.prevKey,i=u.nextKey,t&&i){if(i.time<=a){if(s&&this.loop)for(t=c[0],i=c[1];i.time<o;)t=i,i=c[t.index+1];else if(!s)for(var p=c.length-1;i.time<o&&i.index!==p;)t=i,i=c[t.index+1];u.prevKey=t,u.nextKey=i}i.time>=o?t.interpolate(i,o):t.interpolate(i,i.time)}this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===h[0][n])for(this.hierarchy[0].updateMatrixWorld(!0),e=0;e<this.hierarchy.length;e++)h[e][n]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i%=t.length;i<t.length;i++)if(t[i].hasTarget(e))return t[i];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i=i>=0?i:i+t.length;i>=0;i--)if(t[i].hasTarget(e))return t[i];return t[t.length-1]},THREE.CubeCamera=function(e,t,i){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var i=this.renderTarget,l=i.generateMipmaps;i.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,r,i),i.activeCubeFace=1,e.render(t,n,i),i.activeCubeFace=2,e.render(t,o,i),i.activeCubeFace=3,e.render(t,a,i),i.activeCubeFace=4,e.render(t,s,i),i.generateMipmaps=l,i.activeCubeFace=5,e.render(t,h,i)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,i,r,n,o,a){THREE.Camera.call(this),this.fov=i,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,o,a),this.cameraP=new THREE.PerspectiveCamera(i,e/t,r,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var i=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(i),i},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CircleGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.radius=e=e||50,this.segments=t=void 0!==t?Math.max(3,t):8,this.thetaStart=i=void 0!==i?i:0,this.thetaLength=r=void 0!==r?r:2*Math.PI;var n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;t>=n;n++){var s=new THREE.Vector3,h=i+n/t*r;s.x=e*Math.cos(h),s.y=e*Math.sin(h),this.vertices.push(s),o.push(new THREE.Vector2((s.x/e+1)/2,(s.y/e+1)/2))}for(i=new THREE.Vector3(0,0,1),n=1;t>=n;n++)this.faces.push(new THREE.Face3(n,n+1,0,[i,i,i])),this.faceVertexUvs[0].push([o[n],o[n+1],a]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,i,r,n,o){function a(e,t,i,r,n,o,a,h){var l,c=s.widthSegments,u=s.heightSegments,p=n/2,f=o/2,E=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",u=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",c=s.depthSegments);var d=c+1,m=u+1,g=n/c,T=o/u,v=new THREE.Vector3;for(v[l]=a>0?1:-1,n=0;m>n;n++)for(o=0;d>o;o++){var y=new THREE.Vector3;y[e]=(o*g-p)*i,y[t]=(n*T-f)*r,y[l]=a,s.vertices.push(y)}for(n=0;u>n;n++)for(o=0;c>o;o++)f=o+d*n,e=o+d*(n+1),t=o+1+d*(n+1),i=o+1+d*n,r=new THREE.Vector2(o/c,1-n/u),a=new THREE.Vector2(o/c,1-(n+1)/u),l=new THREE.Vector2((o+1)/c,1-(n+1)/u),p=new THREE.Vector2((o+1)/c,1-n/u),f=new THREE.Face3(f+E,e+E,i+E),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([r,a,p]),f=new THREE.Face3(e+E,t+E,i+E),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([a.clone(),l,p.clone()])}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=i,this.widthSegments=r||1,this.heightSegments=n||1,this.depthSegments=o||1,e=this.width/2,t=this.height/2,i=this.depth/2,a("z","y",-1,-1,this.depth,this.height,e,0),a("z","y",1,-1,this.depth,this.height,-e,1),a("x","z",1,1,this.width,this.depth,t,2),a("x","z",1,-1,this.width,this.depth,-t,3),a("x","y",1,-1,this.width,this.height,i,4),a("x","y",-1,-1,this.width,this.height,-i,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.radiusTop=e=void 0!==e?e:20,this.radiusBottom=t=void 0!==t?t:20,this.height=i=void 0!==i?i:100,this.radialSegments=r=r||8,this.heightSegments=n=n||1,this.openEnded=o=void 0!==o?o:!1;var a,s,h=i/2,l=[],c=[];for(s=0;n>=s;s++){var u=[],p=[],f=s/n,E=f*(t-e)+e;for(a=0;r>=a;a++){var d=a/r,m=new THREE.Vector3;m.x=E*Math.sin(2*d*Math.PI),m.y=-f*i+h,m.z=E*Math.cos(2*d*Math.PI),this.vertices.push(m),u.push(this.vertices.length-1),p.push(new THREE.Vector2(d,1-f))}l.push(u),c.push(p)}for(i=(t-e)/i,a=0;r>a;a++)for(0!==e?(u=this.vertices[l[0][a]].clone(),p=this.vertices[l[0][a+1]].clone()):(u=this.vertices[l[1][a]].clone(),p=this.vertices[l[1][a+1]].clone()),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*i).normalize(),p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*i).normalize(),s=0;n>s;s++){var f=l[s][a],E=l[s+1][a],d=l[s+1][a+1],m=l[s][a+1],g=u.clone(),T=u.clone(),v=p.clone(),y=p.clone(),R=c[s][a].clone(),x=c[s+1][a].clone(),H=c[s+1][a+1].clone(),_=c[s][a+1].clone();this.faces.push(new THREE.Face3(f,E,m,[g,T,y])),this.faceVertexUvs[0].push([R,x,_]),this.faces.push(new THREE.Face3(E,d,m,[T,v,y])),this.faceVertexUvs[0].push([x,H,_])}if(!1===o&&e>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;r>a;a++)f=l[0][a],E=l[0][a+1],d=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=c[0][a].clone(),x=c[0][a+1].clone(),H=new THREE.Vector2(x.u,0),this.faces.push(new THREE.Face3(f,E,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!1===o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),a=0;r>a;a++)f=l[s][a+1],E=l[s][a],d=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=c[s][a+1].clone(),x=c[s][a].clone(),H=new THREE.Vector2(x.u,1),this.faces.push(new THREE.Face3(f,E,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;i>r;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(e)}function r(e,t,i){var r=THREE.ExtrudeGeometry.__v1,n=THREE.ExtrudeGeometry.__v2,o=THREE.ExtrudeGeometry.__v3,a=THREE.ExtrudeGeometry.__v4,s=THREE.ExtrudeGeometry.__v5,h=THREE.ExtrudeGeometry.__v6;return r.set(e.x-t.x,e.y-t.y),n.set(e.x-i.x,e.y-i.y),r=r.normalize(),n=n.normalize(),o.set(-r.y,r.x),a.set(n.y,-n.x),s.copy(e).add(o),h.copy(e).add(a),s.equals(h)?a.clone():(s.copy(t).add(o),h.copy(i).add(a),o=r.dot(a),a=h.sub(s).dot(a),0===o&&(console.log("Either infinite or no solutions!"),0===a?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),a/=o,0>a?(t=Math.atan2(t.y-e.y,t.x-e.x),e=Math.atan2(i.y-e.y,i.x-e.x),t>e&&(e+=2*Math.PI),i=(t+e)/2,e=-Math.cos(i),i=-Math.sin(i),new THREE.Vector2(e,i)):r.multiplyScalar(a).add(s).sub(e).clone())}function n(i,r){var n,o;for(B=i.length;0<=--B;){n=B,o=B-1,0>o&&(o=i.length-1);for(var a=0,s=T+2*d,a=0;s>a;a++){var h=V*a,l=V*(a+1),c=r+n+h,h=r+o+h,u=r+o+l,l=r+n+l,p=i,f=a,E=s,m=n,g=o,c=c+S,h=h+S,u=u+S,l=l+S;M.faces.push(new THREE.Face3(c,h,l,null,null,x)),M.faces.push(new THREE.Face3(h,u,l,null,null,x)),c=H.generateSideWallUV(M,e,p,t,c,h,u,l,f,E,m,g),M.faceVertexUvs[0].push([c[0],c[1],c[3]]),M.faceVertexUvs[0].push([c[1],c[2],c[3]])}}}function o(e,t,i){M.vertices.push(new THREE.Vector3(e,t,i))}function a(i,r,n,o){i+=S,r+=S,n+=S,M.faces.push(new THREE.Face3(i,r,n,null,null,R)),i=o?H.generateBottomUV(M,e,t,i,r,n):H.generateTopUV(M,e,t,i,r,n),M.faceVertexUvs[0].push(i)}var s,h,l,c,u,p=void 0!==t.amount?t.amount:100,f=void 0!==t.bevelThickness?t.bevelThickness:6,E=void 0!==t.bevelSize?t.bevelSize:f-2,d=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0!==t.bevelEnabled?t.bevelEnabled:!0,g=void 0!==t.curveSegments?t.curveSegments:12,T=void 0!==t.steps?t.steps:1,v=t.extrudePath,y=!1,R=t.material,x=t.extrudeMaterial,H=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;v&&(s=v.getSpacedPoints(T),y=!0,m=!1,h=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(v,T,!1),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3),m||(E=f=d=0);var _,b,w,M=this,S=this.vertices.length,g=e.extractPoints(g),A=g.shape,g=g.holes;if(v=!THREE.Shape.Utils.isClockWise(A)){for(A=A.reverse(),b=0,w=g.length;w>b;b++)_=g[b],THREE.Shape.Utils.isClockWise(_)&&(g[b]=_.reverse());v=!1}var C=THREE.Shape.Utils.triangulateShape(A,g),v=A;for(b=0,w=g.length;w>b;b++)_=g[b],A=A.concat(_);var P,L,D,F,V=A.length,U=C.length,z=[],B=0,N=v.length;for(P=N-1,L=B+1;N>B;B++,P++,L++)P===N&&(P=0),L===N&&(L=0),z[B]=r(v[B],v[P],v[L]);var O,I=[],k=z.concat();for(b=0,w=g.length;w>b;b++){for(_=g[b],O=[],B=0,N=_.length,P=N-1,L=B+1;N>B;B++,P++,L++)P===N&&(P=0),L===N&&(L=0),O[B]=r(_[B],_[P],_[L]);I.push(O),k=k.concat(O)}for(P=0;d>P;P++){for(_=P/d,D=f*(1-_),L=E*Math.sin(_*Math.PI/2),B=0,N=v.length;N>B;B++)F=i(v[B],z[B],L),o(F.x,F.y,-D);for(b=0,w=g.length;w>b;b++)for(_=g[b],O=I[b],B=0,N=_.length;N>B;B++)F=i(_[B],O[B],L),o(F.x,F.y,-D)}for(L=E,B=0;V>B;B++)F=m?i(A[B],k[B],L):A[B],y?(c.copy(h.normals[0]).multiplyScalar(F.x),l.copy(h.binormals[0]).multiplyScalar(F.y),u.copy(s[0]).add(c).add(l),o(u.x,u.y,u.z)):o(F.x,F.y,0);for(_=1;T>=_;_++)for(B=0;V>B;B++)F=m?i(A[B],k[B],L):A[B],y?(c.copy(h.normals[_]).multiplyScalar(F.x),l.copy(h.binormals[_]).multiplyScalar(F.y),u.copy(s[_]).add(c).add(l),o(u.x,u.y,u.z)):o(F.x,F.y,p/T*_);for(P=d-1;P>=0;P--){for(_=P/d,D=f*(1-_),L=E*Math.sin(_*Math.PI/2),B=0,N=v.length;N>B;B++)F=i(v[B],z[B],L),o(F.x,F.y,p+D);for(b=0,w=g.length;w>b;b++)for(_=g[b],O=I[b],B=0,N=_.length;N>B;B++)F=i(_[B],O[B],L),y?o(F.x,F.y+s[T-1].y,s[T-1].x+D):o(F.x,F.y,p+D)}if(m){for(f=0*V,B=0;U>B;B++)p=C[B],a(p[2]+f,p[1]+f,p[0]+f,!0);for(f=V*(T+2*d),B=0;U>B;B++)p=C[B],a(p[0]+f,p[1]+f,p[2]+f,!1)}else{for(B=0;U>B;B++)p=C[B],a(p[2],p[1],p[0],!0);for(B=0;U>B;B++)p=C[B],a(p[0]+V*T,p[1]+V*T,p[2]+V*T,!1)}for(p=0,n(v,p),p+=v.length,b=0,w=g.length;w>b;b++)_=g[b],n(_,p),p+=_.length},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,o){return t=e.vertices[n].x,n=e.vertices[n].y,i=e.vertices[o].x,o=e.vertices[o].y,[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,n),new THREE.Vector2(i,o)]},generateBottomUV:function(e,t,i,r,n,o){return this.generateTopUV(e,t,i,r,n,o)},generateSideWallUV:function(e,t,i,r,n,o,a,s){var t=e.vertices[n].x,i=e.vertices[n].y,n=e.vertices[n].z,r=e.vertices[o].x,h=e.vertices[o].y,o=e.vertices[o].z,l=e.vertices[a].x,c=e.vertices[a].y,a=e.vertices[a].z,u=e.vertices[s].x,p=e.vertices[s].y,e=e.vertices[s].z;
return.01>Math.abs(i-h)?[new THREE.Vector2(t,1-n),new THREE.Vector2(r,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(u,1-e)]:[new THREE.Vector2(i,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(p,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),!1==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;r>i;i++)this.addShape(e[i],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var i,r,n,o=t.material,a=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,s=this.vertices.length;i=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var h=i.shape,l=i.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),i=0,r=l.length;r>i;i++)n=l[i],THREE.Shape.Utils.isClockWise(n)&&(l[i]=n.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(i=0,r=l.length;r>i;i++)n=l[i],h=h.concat(n);for(l=h.length,r=c.length,i=0;l>i;i++)n=h[i],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(i=0;r>i;i++)l=c[i],h=l[0]+s,n=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,n,l,null,null,o)),this.faceVertexUvs[0].push(a.generateBottomUV(this,e,t,h,n,l))},THREE.LatheGeometry=function(e,t,i,r){THREE.Geometry.call(this);for(var t=t||12,i=i||0,r=r||2*Math.PI,n=1/(e.length-1),o=1/t,a=0,s=t;s>=a;a++)for(var h=i+a*o*r,l=Math.cos(h),c=Math.sin(h),h=0,u=e.length;u>h;h++){var p=e[h],f=new THREE.Vector3;f.x=l*p.x-c*p.y,f.y=c*p.x+l*p.y,f.z=p.z,this.vertices.push(f)}for(i=e.length,a=0,s=t;s>a;a++)for(h=0,u=e.length-1;u>h;h++){var t=c=h+i*a,r=c+i,l=c+1+i,c=c+1,p=a*o,f=h*n,E=p+o,d=f+n;this.faces.push(new THREE.Face3(t,r,c)),this.faceVertexUvs[0].push([new THREE.Vector2(p,f),new THREE.Vector2(E,f),new THREE.Vector2(p,d)]),this.faces.push(new THREE.Face3(r,l,c)),this.faceVertexUvs[0].push([new THREE.Vector2(E,f),new THREE.Vector2(E,d),new THREE.Vector2(p,d)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=i||1,this.heightSegments=r||1;for(var n=e/2,o=t/2,i=this.widthSegments,r=this.heightSegments,a=i+1,s=r+1,h=this.width/i,l=this.height/r,c=new THREE.Vector3(0,0,1),e=0;s>e;e++)for(t=0;a>t;t++)this.vertices.push(new THREE.Vector3(t*h-n,-(e*l-o),0));for(e=0;r>e;e++)for(t=0;i>t;t++){var u=t+a*e,n=t+a*(e+1),o=t+1+a*(e+1),s=t+1+a*e,h=new THREE.Vector2(t/i,1-e/r),l=new THREE.Vector2(t/i,1-(e+1)/r),p=new THREE.Vector2((t+1)/i,1-(e+1)/r),f=new THREE.Vector2((t+1)/i,1-e/r),u=new THREE.Face3(u,n,s);u.normal.copy(c),u.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(u),this.faceVertexUvs[0].push([h,l,f]),u=new THREE.Face3(n,o,s),u.normal.copy(c),u.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(u),this.faceVertexUvs[0].push([l.clone(),p,f.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this);for(var e=e||0,t=t||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,i=void 0!==i?Math.max(3,i):8,r=void 0!==r?Math.max(3,r):8,a=[],s=e,h=(t-e)/r,e=0;r>=e;e++){for(t=0;i>=t;t++){var l=new THREE.Vector3,c=n+t/i*o;l.x=s*Math.cos(c),l.y=s*Math.sin(c),this.vertices.push(l),a.push(new THREE.Vector2((l.x/s+1)/2,-(l.y/s+1)/2+1))}s+=h}for(n=new THREE.Vector3(0,0,1),e=0;r>e;e++)for(o=e*i,t=0;i>=t;t++){var c=t+o,h=c+e,l=c+i+e,u=c+i+1+e;this.faces.push(new THREE.Face3(h,l,u,[n,n,n])),this.faceVertexUvs[0].push([a[h],a[l],a[u]]),h=c+e,l=c+i+1+e,u=c+1+e,this.faces.push(new THREE.Face3(h,l,u,[n,n,n])),this.faceVertexUvs[0].push([a[h],a[l],a[u]])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,s)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.radius=e=e||50,this.widthSegments=t=Math.max(3,Math.floor(t)||8),this.heightSegments=i=Math.max(2,Math.floor(i)||6),this.phiStart=r=void 0!==r?r:0,this.phiLength=n=void 0!==n?n:2*Math.PI,this.thetaStart=o=void 0!==o?o:0,this.thetaLength=a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;i>=h;h++){var u=[],p=[];for(s=0;t>=s;s++){var f=s/t,E=h/i,d=new THREE.Vector3;d.x=-e*Math.cos(r+f*n)*Math.sin(o+E*a),d.y=e*Math.cos(o+E*a),d.z=e*Math.sin(r+f*n)*Math.sin(o+E*a),this.vertices.push(d),u.push(this.vertices.length-1),p.push(new THREE.Vector2(f,1-E))}l.push(u),c.push(p)}for(h=0;h<this.heightSegments;h++)for(s=0;s<this.widthSegments;s++){var t=l[h][s+1],i=l[h][s],r=l[h+1][s],n=l[h+1][s+1],o=this.vertices[t].clone().normalize(),a=this.vertices[i].clone().normalize(),u=this.vertices[r].clone().normalize(),p=this.vertices[n].clone().normalize(),f=c[h][s+1].clone(),E=c[h][s].clone(),d=c[h+1][s].clone(),m=c[h+1][s+1].clone();Math.abs(this.vertices[t].y)===this.radius?(this.faces.push(new THREE.Face3(t,r,n,[o,u,p])),this.faceVertexUvs[0].push([f,d,m])):Math.abs(this.vertices[r].y)===this.radius?(this.faces.push(new THREE.Face3(t,i,r,[o,a,u])),this.faceVertexUvs[0].push([f,E,d])):(this.faces.push(new THREE.Face3(t,i,n,[o,a,p])),this.faceVertexUvs[0].push([f,E,m]),this.faces.push(new THREE.Face3(i,r,n,[a,u,p])),this.faceVertexUvs[0].push([E.clone(),d,m.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var t=t||{},i=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,i,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,i,r,n){for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||8,this.tubularSegments=r||6,this.arc=n||2*Math.PI,n=new THREE.Vector3,e=[],t=[],i=0;i<=this.radialSegments;i++)for(r=0;r<=this.tubularSegments;r++){var o=r/this.tubularSegments*this.arc,a=2*i/this.radialSegments*Math.PI;n.x=this.radius*Math.cos(o),n.y=this.radius*Math.sin(o);var s=new THREE.Vector3;s.x=(this.radius+this.tube*Math.cos(a))*Math.cos(o),s.y=(this.radius+this.tube*Math.cos(a))*Math.sin(o),s.z=this.tube*Math.sin(a),this.vertices.push(s),e.push(new THREE.Vector2(r/this.tubularSegments,i/this.radialSegments)),t.push(s.clone().sub(n).normalize())}for(i=1;i<=this.radialSegments;i++)for(r=1;r<=this.tubularSegments;r++){var n=(this.tubularSegments+1)*i+r-1,o=(this.tubularSegments+1)*(i-1)+r-1,a=(this.tubularSegments+1)*(i-1)+r,s=(this.tubularSegments+1)*i+r,h=new THREE.Face3(n,o,s,[t[n],t[o],t[s]]);h.normal.add(t[n]),h.normal.add(t[o]),h.normal.add(t[s]),h.normal.normalize(),this.faces.push(h),this.faceVertexUvs[0].push([e[n].clone(),e[o].clone(),e[s].clone()]),h=new THREE.Face3(o,a,s,[t[o],t[a],t[s]]),h.normal.add(t[o]),h.normal.add(t[a]),h.normal.add(t[s]),h.normal.normalize(),this.faces.push(h),this.faceVertexUvs[0].push([e[o].clone(),e[a].clone(),e[s].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,i,r,n,o,a){function s(e,t,i,r,n){var o=Math.cos(e),a=Math.sin(e),e=t/i*e,t=Math.cos(e),o=.5*(r*(2+t))*o,a=.5*r*(2+t)*a,r=.5*n*r*Math.sin(e);return new THREE.Vector3(o,a,r)}for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||64,this.tubularSegments=r||8,this.p=n||2,this.q=o||3,this.heightScale=a||1,this.grid=Array(this.radialSegments),i=new THREE.Vector3,r=new THREE.Vector3,n=new THREE.Vector3,e=0;e<this.radialSegments;++e)for(this.grid[e]=Array(this.tubularSegments),t=2*(e/this.radialSegments)*this.p*Math.PI,o=s(t,this.q,this.p,this.radius,this.heightScale),t=s(t+.01,this.q,this.p,this.radius,this.heightScale),i.subVectors(t,o),r.addVectors(t,o),n.crossVectors(i,r),r.crossVectors(n,i),n.normalize(),r.normalize(),t=0;t<this.tubularSegments;++t){var h=2*(t/this.tubularSegments)*Math.PI,a=-this.tube*Math.cos(h),h=this.tube*Math.sin(h),l=new THREE.Vector3;l.x=o.x+a*r.x+h*n.x,l.y=o.y+a*r.y+h*n.y,l.z=o.z+a*r.z+h*n.z,this.grid[e][t]=this.vertices.push(l)-1}for(e=0;e<this.radialSegments;++e)for(t=0;t<this.tubularSegments;++t){var n=(e+1)%this.radialSegments,o=(t+1)%this.tubularSegments,i=this.grid[e][t],r=this.grid[n][t],n=this.grid[n][o],o=this.grid[e][o],a=new THREE.Vector2(e/this.radialSegments,t/this.tubularSegments),h=new THREE.Vector2((e+1)/this.radialSegments,t/this.tubularSegments),l=new THREE.Vector2((e+1)/this.radialSegments,(t+1)/this.tubularSegments),c=new THREE.Vector2(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face3(i,r,o)),this.faceVertexUvs[0].push([a,h,c]),this.faces.push(new THREE.Face3(r,n,o)),this.faceVertexUvs[0].push([h.clone(),l,c.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,i,r,n){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.radialSegments=r||8,this.closed=n||!1,this.grid=[];var o,a,s,h,l,c,u,r=this.segments+1,n=new THREE.Vector3,t=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);for(c=t.normals,u=t.binormals,this.tangents=t.tangents,this.normals=c,this.binormals=u,t=0;r>t;t++)for(this.grid[t]=[],i=t/(r-1),l=e.getPointAt(i),o=c[t],a=u[t],i=0;i<this.radialSegments;i++)s=2*(i/this.radialSegments)*Math.PI,h=-this.radius*Math.cos(s),s=this.radius*Math.sin(s),n.copy(l),n.x+=h*o.x+s*a.x,n.y+=h*o.y+s*a.y,n.z+=h*o.z+s*a.z,this.grid[t][i]=this.vertices.push(new THREE.Vector3(n.x,n.y,n.z))-1;for(t=0;t<this.segments;t++)for(i=0;i<this.radialSegments;i++)n=this.closed?(t+1)%this.segments:t+1,c=(i+1)%this.radialSegments,e=this.grid[t][i],r=this.grid[n][i],n=this.grid[n][c],c=this.grid[t][c],u=new THREE.Vector2(t/this.segments,i/this.radialSegments),o=new THREE.Vector2((t+1)/this.segments,i/this.radialSegments),a=new THREE.Vector2((t+1)/this.segments,(i+1)/this.radialSegments),h=new THREE.Vector2(t/this.segments,(i+1)/this.radialSegments),this.faces.push(new THREE.Face3(e,r,c)),this.faceVertexUvs[0].push([u,o,h]),this.faces.push(new THREE.Face3(r,n,c)),this.faceVertexUvs[0].push([o.clone(),a,h.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,i){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var n,o,a,s=[],h=[],l=[],c=new THREE.Vector3,u=new THREE.Matrix4,t=t+1;for(this.tangents=s,this.normals=h,this.binormals=l,n=0;t>n;n++)o=n/(t-1),s[n]=e.getTangentAt(o),s[n].normalize();for(h[0]=new THREE.Vector3,l[0]=new THREE.Vector3,e=Number.MAX_VALUE,n=Math.abs(s[0].x),o=Math.abs(s[0].y),a=Math.abs(s[0].z),e>=n&&(e=n,r.set(1,0,0)),e>=o&&(e=o,r.set(0,1,0)),e>=a&&r.set(0,0,1),c.crossVectors(s[0],r).normalize(),h[0].crossVectors(s[0],c),l[0].crossVectors(s[0],h[0]),n=1;t>n;n++)h[n]=h[n-1].clone(),l[n]=l[n-1].clone(),c.crossVectors(s[n-1],s[n]),1e-4<c.length()&&(c.normalize(),r=Math.acos(THREE.Math.clamp(s[n-1].dot(s[n]),-1,1)),h[n].applyMatrix4(u.makeRotationAxis(c,r))),l[n].crossVectors(s[n],h[n]);if(i)for(r=Math.acos(THREE.Math.clamp(h[0].dot(h[t-1]),-1,1)),r/=t-1,0<s[0].dot(c.crossVectors(h[0],h[t-1]))&&(r=-r),n=1;t>n;n++)h[n].applyMatrix4(u.makeRotationAxis(s[n],r*n)),l[n].crossVectors(s[n],h[n])},THREE.PolyhedronGeometry=function(e,t,i,r){function n(e){var t=e.normalize().clone();t.index=s.vertices.push(t)-1;var i=Math.atan2(e.z,-e.x)/2/Math.PI+.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.Vector2(i,1-e),t}function o(e,t,i){var r=new THREE.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()]);r.centroid.add(e).add(t).add(i).divideScalar(3),s.faces.push(r),r=Math.atan2(r.centroid.z,-r.centroid.x),s.faceVertexUvs[0].push([a(e.uv,e,r),a(t.uv,t,r),a(i.uv,i,r)])}function a(e,t,i){return 0>i&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(i/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this);for(var i=i||1,r=r||0,s=this,h=0,l=e.length;l>h;h++)n(new THREE.Vector3(e[h][0],e[h][1],e[h][2]));for(var c=this.vertices,e=[],h=0,l=t.length;l>h;h++){var u=c[t[h][0]],p=c[t[h][1]],f=c[t[h][2]];e[h]=new THREE.Face3(u.index,p.index,f.index,[u.clone(),p.clone(),f.clone()])}for(h=0,l=e.length;l>h;h++){p=e[h],c=r,t=Math.pow(2,c),Math.pow(4,c);for(var c=n(s.vertices[p.a]),u=n(s.vertices[p.b]),E=n(s.vertices[p.c]),p=[],f=0;t>=f;f++){p[f]=[];for(var d=n(c.clone().lerp(E,f/t)),m=n(u.clone().lerp(E,f/t)),g=t-f,T=0;g>=T;T++)p[f][T]=0==T&&f==t?d:n(d.clone().lerp(m,T/g))}for(f=0;t>f;f++)for(T=0;2*(t-f)-1>T;T++)c=Math.floor(T/2),0==T%2?o(p[f][c+1],p[f+1][c],p[f][c]):o(p[f][c+1],p[f+1][c+1],p[f+1][c])}for(h=0,l=this.faceVertexUvs[0].length;l>h;h++)r=this.faceVertexUvs[0][h],e=r[0].x,t=r[1].x,c=r[2].x,u=Math.max(e,Math.max(t,c)),p=Math.min(e,Math.min(t,c)),u>.9&&.1>p&&(.2>e&&(r[0].x+=1),.2>t&&(r[1].x+=1),.2>c&&(r[2].x+=1));for(h=0,l=this.vertices.length;l>h;h++)this.vertices[h].multiplyScalar(i);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){this.radius=e,this.detail=t;var i=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,i,0],[1,i,0],[-1,-i,0],[1,-i,0],[0,-1,i],[0,1,i],[0,-1,-i],[0,1,-i],[i,0,-1],[i,0,1],[-i,0,-1],[-i,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,i){THREE.Geometry.call(this);var r,n,o,a,s=this.vertices,h=this.faces,l=this.faceVertexUvs[0],c=t+1;for(r=0;i>=r;r++)for(a=r/i,n=0;t>=n;n++)o=n/t,o=e(o,a),s.push(o);var u,p,f,E;for(r=0;i>r;r++)for(n=0;t>n;n++)e=r*c+n,s=r*c+n+1,a=(r+1)*c+n+1,o=(r+1)*c+n,u=new THREE.Vector2(n/t,r/i),p=new THREE.Vector2((n+1)/t,r/i),f=new THREE.Vector2((n+1)/t,(r+1)/i),E=new THREE.Vector2(n/t,(r+1)/i),h.push(new THREE.Face3(e,s,o)),l.push([u,p,E]),h.push(new THREE.Face3(s,a,o)),l.push([p.clone(),f,E.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var e=e||1,t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,i,r){THREE.Object3D.call(this),void 0===r&&(r=16776960),void 0===i&&(i=1),this.position=t,t=new THREE.Geometry,t.vertices.push(new THREE.Vector3(0,0,0)),t.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),t=new THREE.CylinderGeometry(0,.05,.25,5,1),t.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0)),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(i){.99999<i.y?this.quaternion.set(0,0,0,1):-.99999>i.y?this.quaternion.set(1,0,0,0):(t.set(i.z,0,-i.x).normalize(),e=Math.acos(i.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var i=new THREE.Geometry;i.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]),THREE.Line.call(this,i,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var i=t.boundingBox.min,t=t.boundingBox.max,r=this.vertices;r[0].set(t.x,t.y,t.z),r[1].set(i.x,t.y,t.z),r[2].set(i.x,i.y,t.z),r[3].set(t.x,i.y,t.z),r[4].set(t.x,t.y,i.z),r[5].set(i.x,t.y,i.z),r[6].set(i.x,i.y,i.z),r[7].set(t.x,i.y,i.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.BoundingBoxHelper=function(e,t){var i=t||8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:i,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function t(e,t,r){i(e,r),i(t,r)}function i(e,t){r.vertices.push(new THREE.Vector3),r.colors.push(new THREE.Color(t)),void 0===o[e]&&(o[e]=[]),o[e].push(r.vertices.length-1)}var r=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),THREE.Line.call(this,r,n,THREE.LinePieces),this.camera=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,i=new THREE.Projector;return function(){function r(r,o,a,s){if(e.set(o,a,s),i.unprojectVector(e,t),r=n.pointMap[r],void 0!==r)for(o=0,a=r.length;a>o;o++)n.geometry.vertices[r[o]].copy(e)}var n=this;t.projectionMatrix.copy(this.camera.projectionMatrix),r("c",0,0,-1),r("t",0,0,1),r("n1",-1,-1,-1),r("n2",1,-1,-1),r("n3",-1,1,-1),r("n4",1,1,-1),r("f1",-1,-1,1),r("f2",1,-1,1),r("f3",-1,1,1),r("f4",1,1,1),r("u1",.7,1.1,-1),r("u2",-.7,1.1,-1),r("u3",0,2,-1),r("cf1",-1,0,1),r("cf2",1,0,1),r("cf3",0,-1,1),r("cf4",0,1,1),r("cn1",-1,0,-1),r("cn2",1,0,-1),r("cn3",0,-1,-1),r("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1;var i=new THREE.PlaneGeometry(t,t),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(i,r),this.add(this.lightPlane),i=new THREE.Geometry,i.vertices.push(new THREE.Vector3),i.vertices.push(new THREE.Vector3),i.computeLineDistances(),r=new THREE.LineBasicMaterial({fog:!1}),r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(i,r),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){e.getPositionFromMatrix(this.light.matrixWorld).negate(),this.lightPlane.lookAt(e),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(e),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.FaceNormalsHelper=function(e,t,i,r){this.object=e,this.size=t||1;for(var e=i||16776960,r=r||1,t=new THREE.Geometry,i=0,n=this.object.geometry.faces.length;n>i;i++)t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3);THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:e,linewidth:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var t=this.geometry.vertices,i=this.object.geometry.faces,r=this.object.matrixWorld,n=0,o=i.length;o>n;n++){var a=i[n];e.copy(a.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var s=2*n;t[s].copy(a.centroid).applyMatrix4(r),t[s+1].addVectors(t[s],e)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(e,t){var i=new THREE.Geometry,r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-e;e>=n;n+=t){i.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var o=0===n?this.color1:this.color2;i.colors.push(o,o,o,o)}THREE.Line.call(this,i,r,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var i=new THREE.SphereGeometry(t,4,2);i.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var r=0;8>r;r++)i.faces[r].color=this.colors[4>r?0:1];r=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(i,r),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.getPositionFromMatrix(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var i=new THREE.SphereGeometry(t,4,2),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,i,r),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,e=new THREE.CylinderGeometry(0,1,1,8,1,!0),e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var i=this.light.distance?this.light.distance:1e4,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i),e.getPositionFromMatrix(this.light.matrixWorld),t.getPositionFromMatrix(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,i,r){this.object=e,this.size=t||1;for(var t=i||16711680,r=r||1,i=new THREE.Geometry,e=e.geometry.faces,n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexNormals.length;s>a;a++)i.vertices.push(new THREE.Vector3),i.vertices.push(new THREE.Vector3);THREE.Line.call(this,i,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){var t=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,r=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexNormals.length;u>c;c++){var p=l.vertexNormals[c];i[a].copy(r[l[t[c]]]).applyMatrix4(o),e.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),e.add(i[a]),a+=1,i[a].copy(e),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,i,r){this.object=e,this.size=t||1;for(var t=i||255,r=r||1,i=new THREE.Geometry,e=e.geometry.faces,n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexTangents.length;s>a;a++)i.vertices.push(new THREE.Vector3),i.vertices.push(new THREE.Vector3);THREE.Line.call(this,i,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){var t=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,r=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexTangents.length;u>c;c++){var p=l.vertexTangents[c];i[a].copy(r[l[t[c]]]).applyMatrix4(o),e.copy(p).transformDirection(o).multiplyScalar(this.size),e.add(i[a]),a+=1,i[a].copy(e),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e){for(var t=[0,0],i={},r=function(e,t){return e-t},n=["a","b","c","d"],o=new THREE.Geometry,a=e.geometry.vertices,s=e.geometry.faces,h=0,l=s.length;l>h;h++)for(var c=s[h],u=0;3>u;u++){t[0]=c[n[u]],t[1]=c[n[(u+1)%3]],t.sort(r);var p=t.toString();void 0===i[p]&&(o.vertices.push(a[t[0]]),o.vertices.push(a[t[1]]),i[p]=!0)}THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,i,r,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,i,r,n,o){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,i=this.lensFlares.length,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;i>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=.25*t.x*Math.PI,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length;this.createAnimation("__default",0,i-1,i/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){t={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,i=/([a-z]+)(\d+)/,r={},n=this.geometry,o=0,a=n.morphTargets.length;a>o;o++){var s=n.morphTargets[o].name.match(i);if(s&&1<s.length){var h=s[1];r[h]||(r[h]={start:1/0,end:-(1/0)}),s=r[h],o<s.start&&(s.start=o),o>s.end&&(s.end=o),t||(t=h)}}for(h in r)s=r[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];
i&&(i.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;i>t;t++){var r=this.animationsList[t];if(r.active){var n=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||0>r.time)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)):(r.time%=r.duration,0>r.time&&(r.time+=r.duration));var o=r.startFrame+THREE.Math.clamp(Math.floor(r.time/n),0,r.length-1),a=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o),n=r.time%n/n,r.directionBackwards&&(n=1-n),this.morphTargetInfluences[r.currentFrame]=n*a,this.morphTargetInfluences[r.lastFrame]=(1-n)*a}}},THREE.LensFlarePlugin=function(){function e(e,i){var r=t.createProgram(),n=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER),a="precision "+i+" float;\n";return t.shaderSource(n,a+e.fragmentShader),t.shaderSource(o,a+e.vertexShader),t.compileShader(n),t.compileShader(o),t.attachShader(r,n),t.attachShader(r,o),t.linkProgram(r),r}var t,i,r,n,o,a,s,h,l,c,u,p,f;this.init=function(E){t=E.context,i=E,r=E.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),E=0,n[E++]=-1,n[E++]=-1,n[E++]=0,n[E++]=0,n[E++]=1,n[E++]=-1,n[E++]=1,n[E++]=0,n[E++]=1,n[E++]=1,n[E++]=1,n[E++]=1,n[E++]=-1,n[E++]=1,n[E++]=0,n[E++]=1,E=0,o[E++]=0,o[E++]=1,o[E++]=2,o[E++]=0,o[E++]=2,o[E++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW),h=t.createTexture(),l=t.createTexture(),t.bindTexture(t.TEXTURE_2D,h),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,l),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(c=!1,u=e(THREE.ShaderFlares.lensFlare,r)):(c=!0,u=e(THREE.ShaderFlares.lensFlareVertexTexture,r)),p={},f={},p.vertex=t.getAttribLocation(u,"position"),p.uv=t.getAttribLocation(u,"uv"),f.renderType=t.getUniformLocation(u,"renderType"),f.map=t.getUniformLocation(u,"map"),f.occlusionMap=t.getUniformLocation(u,"occlusionMap"),f.opacity=t.getUniformLocation(u,"opacity"),f.color=t.getUniformLocation(u,"color"),f.scale=t.getUniformLocation(u,"scale"),f.rotation=t.getUniformLocation(u,"rotation"),f.screenPosition=t.getUniformLocation(u,"screenPosition")},this.render=function(e,r,n,o){var e=e.__webglFlares,E=e.length;if(E){var d=new THREE.Vector3,m=o/n,g=.5*n,T=.5*o,v=16/o,y=new THREE.Vector2(v*m,v),R=new THREE.Vector3(1,1,0),x=new THREE.Vector2(1,1),H=f,v=p;t.useProgram(u),t.enableVertexAttribArray(p.vertex),t.enableVertexAttribArray(p.uv),t.uniform1i(H.occlusionMap,0),t.uniform1i(H.map,1),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.disable(t.CULL_FACE),t.depthMask(!1);var _,b,w,M,S;for(_=0;E>_;_++)if(v=16/o,y.set(v*m,v),M=e[_],d.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),d.applyMatrix4(r.matrixWorldInverse),d.applyProjection(r.projectionMatrix),R.copy(d),x.x=R.x*g+g,x.y=R.y*T+T,c||0<x.x&&x.x<n&&0<x.y&&x.y<o)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,0),t.uniform2f(H.scale,y.x,y.y),t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,l),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),M.positionScreen.copy(R),M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares(),t.uniform1i(H.renderType,2),t.enable(t.BLEND),b=0,w=M.lensFlares.length;w>b;b++)S=M.lensFlares[b],.001<S.opacity&&.001<S.scale&&(R.x=S.x,R.y=S.y,R.z=S.z,v=S.size*S.scale/o,y.x=v*m,y.y=v,t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.uniform2f(H.scale,y.x,y.y),t.uniform1f(H.rotation,S.rotation),t.uniform1f(H.opacity,S.opacity),t.uniform3f(H.color,S.color.r,S.color.g,S.color.b),i.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),i.setTexture(S.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3;this.init=function(a){e=a.context,t=a;var a=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,i){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,i)},this.update=function(u,p){var f,E,d,m,g,T,v,y,R,x=[];for(m=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),f=0,E=u.__lights.length;E>f;f++)if(d=u.__lights[f],d.castShadow)if(d instanceof THREE.DirectionalLight&&d.shadowCascade)for(g=0;g<d.shadowCascadeCount;g++){var H;if(d.shadowCascadeArray[g])H=d.shadowCascadeArray[g];else{R=d,v=g,H=new THREE.DirectionalLight,H.isVirtual=!0,H.onlyShadow=!0,H.castShadow=!0,H.shadowCameraNear=R.shadowCameraNear,H.shadowCameraFar=R.shadowCameraFar,H.shadowCameraLeft=R.shadowCameraLeft,H.shadowCameraRight=R.shadowCameraRight,H.shadowCameraBottom=R.shadowCameraBottom,H.shadowCameraTop=R.shadowCameraTop,H.shadowCameraVisible=R.shadowCameraVisible,H.shadowDarkness=R.shadowDarkness,H.shadowBias=R.shadowCascadeBias[v],H.shadowMapWidth=R.shadowCascadeWidth[v],H.shadowMapHeight=R.shadowCascadeHeight[v],H.pointsWorld=[],H.pointsFrustum=[],y=H.pointsWorld,T=H.pointsFrustum;for(var _=0;8>_;_++)y[_]=new THREE.Vector3,T[_]=new THREE.Vector3;y=R.shadowCascadeNearZ[v],R=R.shadowCascadeFarZ[v],T[0].set(-1,-1,y),T[1].set(1,-1,y),T[2].set(-1,1,y),T[3].set(1,1,y),T[4].set(-1,-1,R),T[5].set(1,-1,R),T[6].set(-1,1,R),T[7].set(1,1,R),H.originalCamera=p,T=new THREE.Gyroscope,T.position=d.shadowCascadeOffset,T.add(H),T.add(H.target),p.add(T),d.shadowCascadeArray[g]=H,console.log("Created virtualLight",H)}v=d,y=g,R=v.shadowCascadeArray[y],R.position.copy(v.position),R.target.position.copy(v.target.position),R.lookAt(R.target),R.shadowCameraVisible=v.shadowCameraVisible,R.shadowDarkness=v.shadowDarkness,R.shadowBias=v.shadowCascadeBias[y],T=v.shadowCascadeNearZ[y],v=v.shadowCascadeFarZ[y],R=R.pointsFrustum,R[0].z=T,R[1].z=T,R[2].z=T,R[3].z=T,R[4].z=v,R[5].z=v,R[6].z=v,R[7].z=v,x[m]=H,m++}else x[m]=d,m++;for(f=0,E=x.length;E>f;f++){if(d=x[f],d.shadowMap||(g=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(g=THREE.NearestFilter),d.shadowMap=new THREE.WebGLRenderTarget(d.shadowMapWidth,d.shadowMapHeight,{minFilter:g,magFilter:g,format:THREE.RGBAFormat}),d.shadowMapSize=new THREE.Vector2(d.shadowMapWidth,d.shadowMapHeight),d.shadowMatrix=new THREE.Matrix4),!d.shadowCamera){if(d instanceof THREE.SpotLight)d.shadowCamera=new THREE.PerspectiveCamera(d.shadowCameraFov,d.shadowMapWidth/d.shadowMapHeight,d.shadowCameraNear,d.shadowCameraFar);else{if(!(d instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}d.shadowCamera=new THREE.OrthographicCamera(d.shadowCameraLeft,d.shadowCameraRight,d.shadowCameraTop,d.shadowCameraBottom,d.shadowCameraNear,d.shadowCameraFar)}u.add(d.shadowCamera),!0===u.autoUpdate&&u.updateMatrixWorld()}if(d.shadowCameraVisible&&!d.cameraHelper&&(d.cameraHelper=new THREE.CameraHelper(d.shadowCamera),d.shadowCamera.add(d.cameraHelper)),d.isVirtual&&H.originalCamera==p){for(g=p,m=d.shadowCamera,T=d.pointsFrustum,R=d.pointsWorld,h.set(1/0,1/0,1/0),l.set(-(1/0),-(1/0),-(1/0)),v=0;8>v;v++)y=R[v],y.copy(T[v]),THREE.ShadowMapPlugin.__projector.unprojectVector(y,g),y.applyMatrix4(m.matrixWorldInverse),y.x<h.x&&(h.x=y.x),y.x>l.x&&(l.x=y.x),y.y<h.y&&(h.y=y.y),y.y>l.y&&(l.y=y.y),y.z<h.z&&(h.z=y.z),y.z>l.z&&(l.z=y.z);m.left=h.x,m.right=l.x,m.top=l.y,m.bottom=h.y,m.updateProjectionMatrix()}for(m=d.shadowMap,T=d.shadowMatrix,g=d.shadowCamera,g.position.getPositionFromMatrix(d.matrixWorld),c.getPositionFromMatrix(d.target.matrixWorld),g.lookAt(c),g.updateMatrixWorld(),g.matrixWorldInverse.getInverse(g.matrixWorld),d.cameraHelper&&(d.cameraHelper.visible=d.shadowCameraVisible),d.shadowCameraVisible&&d.cameraHelper.update(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(g.projectionMatrix),T.multiply(g.matrixWorldInverse),s.multiplyMatrices(g.projectionMatrix,g.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(m),t.clear(),R=u.__webglObjects,d=0,m=R.length;m>d;d++)v=R[d],T=v.object,v.render=!1,!T.visible||!T.castShadow||(T instanceof THREE.Mesh||T instanceof THREE.ParticleSystem)&&T.frustumCulled&&!a.intersectsObject(T)||(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),v.render=!0);for(d=0,m=R.length;m>d;d++)v=R[d],v.render&&(T=v.object,v=v.buffer,_=T.material instanceof THREE.MeshFaceMaterial?T.material.materials[0]:T.material,y=0<T.geometry.morphTargets.length&&_.morphTargets,_=T instanceof THREE.SkinnedMesh&&_.skinning,y=T.customDepthMaterial?T.customDepthMaterial:_?y?o:n:y?r:i,v instanceof THREE.BufferGeometry?t.renderBufferDirect(g,u.__lights,null,y,v,T):t.renderBuffer(g,u.__lights,null,y,v,T));for(R=u.__webglObjectsImmediate,d=0,m=R.length;m>d;d++)v=R[d],T=v.object,T.visible&&T.castShadow&&(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),t.renderImmediateObject(g,u.__lights,null,i,T))}f=t.getClearColor(),E=t.getClearAlpha(),e.clearColor(f.r,f.g,f.b,E),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,i,r,n,o,a,s,h,l,c;this.init=function(e){t=e.context,i=e,r=e.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),e=0,n[e++]=-1,n[e++]=-1,n[e++]=0,n[e++]=0,n[e++]=1,n[e++]=-1,n[e++]=1,n[e++]=0,n[e++]=1,n[e++]=1,n[e++]=1,n[e++]=1,n[e++]=-1,n[e++]=1,n[e++]=0,n[e++]=1,e=0,o[e++]=0,o[e++]=1,o[e++]=2,o[e++]=0,o[e++]=2,o[e++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW);var e=THREE.ShaderSprite.sprite,u=t.createProgram(),p=t.createShader(t.FRAGMENT_SHADER),f=t.createShader(t.VERTEX_SHADER),E="precision "+r+" float;\n";t.shaderSource(p,E+e.fragmentShader),t.shaderSource(f,E+e.vertexShader),t.compileShader(p),t.compileShader(f),t.attachShader(u,p),t.attachShader(u,f),t.linkProgram(u),h=u,l={},c={},l.position=t.getAttribLocation(h,"position"),l.uv=t.getAttribLocation(h,"uv"),c.uvOffset=t.getUniformLocation(h,"uvOffset"),c.uvScale=t.getUniformLocation(h,"uvScale"),c.rotation=t.getUniformLocation(h,"rotation"),c.scale=t.getUniformLocation(h,"scale"),c.alignment=t.getUniformLocation(h,"alignment"),c.color=t.getUniformLocation(h,"color"),c.map=t.getUniformLocation(h,"map"),c.opacity=t.getUniformLocation(h,"opacity"),c.useScreenCoordinates=t.getUniformLocation(h,"useScreenCoordinates"),c.sizeAttenuation=t.getUniformLocation(h,"sizeAttenuation"),c.screenPosition=t.getUniformLocation(h,"screenPosition"),c.modelViewMatrix=t.getUniformLocation(h,"modelViewMatrix"),c.projectionMatrix=t.getUniformLocation(h,"projectionMatrix"),c.fogType=t.getUniformLocation(h,"fogType"),c.fogDensity=t.getUniformLocation(h,"fogDensity"),c.fogNear=t.getUniformLocation(h,"fogNear"),c.fogFar=t.getUniformLocation(h,"fogFar"),c.fogColor=t.getUniformLocation(h,"fogColor"),c.alphaTest=t.getUniformLocation(h,"alphaTest")},this.render=function(r,n,o,u){var p=r.__webglSprites,f=p.length;if(f){var E=l,d=c,m=u/o,o=.5*o,g=.5*u;t.useProgram(h),t.enableVertexAttribArray(E.position),t.enableVertexAttribArray(E.uv),t.disable(t.CULL_FACE),t.enable(t.BLEND),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(E.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(E.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.uniformMatrix4fv(d.projectionMatrix,!1,n.projectionMatrix.elements),t.activeTexture(t.TEXTURE0),t.uniform1i(d.map,0);var T=E=0,v=r.fog;v?(t.uniform3f(d.fogColor,v.color.r,v.color.g,v.color.b),v instanceof THREE.Fog?(t.uniform1f(d.fogNear,v.near),t.uniform1f(d.fogFar,v.far),t.uniform1i(d.fogType,1),T=E=1):v instanceof THREE.FogExp2&&(t.uniform1f(d.fogDensity,v.density),t.uniform1i(d.fogType,2),T=E=2)):(t.uniform1i(d.fogType,0),T=E=0);for(var y,R,x=[],v=0;f>v;v++)y=p[v],R=y.material,y.visible&&0!==R.opacity&&(R.useScreenCoordinates?y.z=-y.position.z:(y._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,y.matrixWorld),y.z=-y._modelViewMatrix.elements[14]));for(p.sort(e),v=0;f>v;v++)y=p[v],R=y.material,y.visible&&0!==R.opacity&&R.map&&R.map.image&&R.map.image.width&&(t.uniform1f(d.alphaTest,R.alphaTest),!0===R.useScreenCoordinates?(t.uniform1i(d.useScreenCoordinates,1),t.uniform3f(d.screenPosition,(y.position.x*i.devicePixelRatio-o)/o,(g-y.position.y*i.devicePixelRatio)/g,Math.max(0,Math.min(1,y.position.z))),x[0]=i.devicePixelRatio,x[1]=i.devicePixelRatio):(t.uniform1i(d.useScreenCoordinates,0),t.uniform1i(d.sizeAttenuation,R.sizeAttenuation?1:0),t.uniformMatrix4fv(d.modelViewMatrix,!1,y._modelViewMatrix.elements),x[0]=1,x[1]=1),n=r.fog&&R.fog?T:0,E!==n&&(t.uniform1i(d.fogType,n),E=n),n=1/(R.scaleByViewport?u:1),x[0]*=n*m*y.scale.x,x[1]*=n*y.scale.y,t.uniform2f(d.uvScale,R.uvScale.x,R.uvScale.y),t.uniform2f(d.uvOffset,R.uvOffset.x,R.uvOffset.y),t.uniform2f(d.alignment,R.alignment.x,R.alignment.y),t.uniform1f(d.opacity,R.opacity),t.uniform3f(d.color,R.color.r,R.color.g,R.color.b),t.uniform1f(d.rotation,y.rotation),t.uniform2fv(d.scale,x),i.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),i.setDepthTest(R.depthTest),i.setDepthWrite(R.depthWrite),i.setTexture(R.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4;this.init=function(a){e=a.context,t=a;var a=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,l){var c,u,p,f,E,d;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),!0===h.autoUpdate&&h.updateMatrixWorld(),l.matrixWorldInverse.getInverse(l.matrixWorld),s.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),d=h.__webglObjects,c=0,u=d.length;u>c;c++)p=d[c],E=p.object,p.render=!1,!E.visible||(E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)&&E.frustumCulled&&!a.intersectsObject(E)||(E._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,E.matrixWorld),p.render=!0);var m;for(c=0,u=d.length;u>c;c++)p=d[c],!p.render||(E=p.object,p=p.buffer,E instanceof THREE.ParticleSystem&&!E.customDepthMaterial)||((m=E.material instanceof THREE.MeshFaceMaterial?E.material.materials[0]:E.material)&&t.setMaterialFaces(E.material),f=0<E.geometry.morphTargets.length&&m.morphTargets,m=E instanceof THREE.SkinnedMesh&&m.skinning,f=E.customDepthMaterial?E.customDepthMaterial:m?f?o:n:f?r:i,p instanceof THREE.BufferGeometry?t.renderBufferDirect(l,h.__lights,null,f,p,E):t.renderBuffer(l,h.__lights,null,f,p,E));for(d=h.__webglObjectsImmediate,c=0,u=d.length;u>c;c++)p=d[c],E=p.object,E.visible&&(E._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,E.matrixWorld),t.renderImmediateObject(l,h.__lights,null,i,E));c=t.getClearColor(),u=t.getClearAlpha(),e.clearColor(c.r,c.g,c.b,u),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};